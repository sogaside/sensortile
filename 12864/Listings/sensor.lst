C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN .\Objects\sensor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE sensor.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\sensor.lst) TABS(2) OBJECT(.\Objects\sensor.obj)

line level    source

   1          #include<reg51.h>     //Large编译，否则xdata异常
   2          #include<math.h>
   3          #include<LOLI_3.h>     //显示需要的图形数据
   4          #define u8 unsigned char
   5          #define u16 unsigned int
   6          
   7          
   8          /*****************************************************/
   9          //STC12 系列新增寄存器
  10          sfr IPH=0xb7;
  11          sfr P4=0xc0;
  12          sfr P4SW=0xbb;
  13          sfr P1ASF=0x9d;
  14          sfr P4M0=0xb4;
  15          sfr P3M0=0xb2;
  16          sfr P3M1=0xb1;
  17          sfr P2M0=0x96;
  18          sfr P0M0=0x94;
  19          sfr ADC_CONTR=0xbc;
  20          sfr ADC_RES=0xbd;
  21          sfr ADC_RESL=0xbe;
  22          
  23          sfr BRT=0x9c;
  24          sfr AUXR=0x8e;
  25          sfr WAKE_CLKO=0x8f;
  26          
  27          sfr IAP_DATA=0xc2;
  28          sfr IAP_ADDRH=0xc3;
  29          sfr IAP_ADDRL=0xc4;
  30          sfr IAP_CMD=0xc5;
  31          sfr IAP_TRIG=0xc6;
  32          sfr IAP_CONTR=0xc7;
  33          
  34          sfr CCON        =   0xD8;           //PCA control register
  35          sbit CCF0       =   CCON^0;         //PCA module-0 interrupt flag
  36          sbit CCF1       =   CCON^1;         //PCA module-1 interrupt flag
  37          sbit CR         =   CCON^6;         //PCA timer run control bit
  38          sfr CMOD        =   0xD9;           //PCA mode register
  39          sfr CL          =   0xE9;           //PCA base timer LOW
  40          sfr CH          =   0xF9;           //PCA base timer HIGH
  41          sfr CCAPM0      =   0xDA;           //PCA module-0 mode register
  42          sfr CCAP0L      =   0xEA;           //PCA module-0 capture register LOW
  43          sfr CCAP0H      =   0xFA;           //PCA module-0 capture register HIGH
  44          sfr CCAPM1      =   0xDB;           //PCA module-1 mode registers
  45          sfr CCAP1L      =   0xEB;           //PCA module-1 capture register LOW
  46          sfr CCAP1H      =   0xFB;           //PCA module-1 capture register HIGH
  47          
  48          
  49          /*************************************************/
  50          //LCD引脚定义
  51          sbit CS=P0^6;
  52          sbit RST=P0^7;
  53          sbit RS=P4^6;                 
  54          sbit SDA=P4^5;                 
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 2   

  55          sbit CLK=P4^4;
  56          sbit LEDA=P2^5;
  57          
  58          /**************************************************/
  59          //NRF24L01 引脚定义
  60          
  61          sbit CE=P0^0;
  62          sbit SCK=P0^1;
  63          sbit MDO=P0^2;
  64          sbit IRQ=P0^3;
  65          sbit MDI=P0^4;
  66          sbit CSN=P0^5;
  67          
  68          /*************************************************/
  69          //I/O定义
  70          
  71          sbit buzzer=P3^4;
  72          sbit PPM=P3^3;
  73          
  74          sbit KEY=P4^7;
  75          sbit K1=P1^1;//30uart
  76          sbit K2=P1^2;//31
  77          sbit K3=P3^7;
  78          sbit K4=P3^6;
  79          sbit K5=P3^2;
  80          sbit K6=P3^5;
  81          
  82          sbit SA=P2^0;
  83          sbit SB1=P2^1;
  84          sbit SB2=P2^2;
  85          sbit SC1=P2^3;
  86          sbit SC2=P2^4;
  87          sbit SD=P2^6;
  88          sbit SE=P2^7;
  89          
  90          
  91          /***********************************************/
  92          //数据、标志位
  93          u8 bdata DATA;
  94          sbit D_7=DATA^7;
  95          sbit D_6=DATA^6;
  96          sbit D_5=DATA^5;
  97          sbit D_4=DATA^4;
  98          sbit D_3=DATA^3;
  99          sbit D_2=DATA^2;
 100          sbit D_1=DATA^1;
 101          sbit D_0=DATA^0;
 102          
 103          
 104          
 105          //ROM存储
 106          u8 Model_number=0,Model_current=0,Model_target=0;
 107          bit Model_change,Model_reset,reset_action;
 108          u8 TEMP_DATA[300];
 109          bit ROM_enable;
 110          bit Data_system,Data_model;
 111          u8 ROM_time=0;
 112          u8 COPY_DATA[60];
 113          bit copy_ready,paste_ready;
 114          
 115          bit calibration_action,calibration_ok;
 116          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 3   

 117          //串口数据
 118          unsigned char iflycount=0,flydata=0;
 119          int adc1 =0,adc2=0,adc3=0,adc4=0,adc11=0 ,adc22=0,adc33=0,adc44=0;
 120          //显示
 121          u8 word[10];
 122          u8 WW[10][6];
 123          
 124          
 125          //时钟
 126          bit event1,event2,event3;
 127          u8 t1=0,t2=0,t3=0;
 128          u8 connect_time;
 129          bit flag_20ms;
 130          
 131          u8 beep=0,sound=0,clock_set=0;
 132          u8  timer,second=0,minute=0,hour=0;
 133          
 134          //菜单模式
 135          bit PPM_OUT,PPM_IN,RC_TX,IR_TX,RC_check;
 136          bit config_change,star=1,RC_check_star;
 137          u8 menu=0,menu_1=0,menu_2=0,line=0,line_1=0,line_2=0;
 138          
 139          //按键
 140          bit KS;
 141          bit key1,key2,key3,key4,key5,key6;
 142          bit s1,s2,s3,s4,s5,s6;
 143          bit s1_long_press,s2_long_press,s3_long_press,s4_long_press,s5_long_press,s6_long_press;
 144          u8 s1_press_time,s2_press_time,s3_press_time,s4_press_time,s5_press_time,s6_press_time;
 145          bit key_time;
 146          bit increase,decrease,up,down,left,right;
 147          
 148          
 149          
 150          //硬件配置
 151          u8 LCD_vop=42,LCD_light=1;
 152          u8 Sound_switch=0,model;
 153          u8 Battery_1s=1,VLD1=35,VLD2=70;
 154          u16 battery_voltage;
 155          u8 tt=0,t_adc=0;
 156          u16 data adc[8];
 157          
 158          u16 value0,value1;
 159          
 160          bit NRF_change;
 161          u8 TX_power=3;
 162          char out_control[8]={0,0,-100,0,0,0,0,0};
 163          u16 out_control_data[8];
 164          
 165          u8 IN_mapping[8]={0,1,2,3,4,5,6,7,};
 166          
 167          bit recover;
 168          
 169          bit NRF_config_change,config_change;
 170          bit first;
 171          
 172          u16 CH1_max=600,CH2_max=600,CH3_max=600,CH4_max=600;
 173          u16 CH1_min=400,CH2_min=400,CH3_min=400,CH4_min=400;
 174          u8 CH1_offset=51,CH2_offset=51,CH3_offset=51,CH4_offset=51;
 175          u16 CH_value[4];
 176          
 177          
 178          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 4   

 179          
 180          //无线通信
 181          bit not_get,connecting;
 182          
 183          bit CD;
 184          u8 data RC_TX_state=0;
 185          u8 t_check,t_hopping,NRF_error=0;
 186          u8 CD_data[125];
 187          u8 NRF_mapping[8]={0,1,2,3,4,5,6,7};
 188          u16 NRF_buff[8];
 189          u8 timer2=0,timer3=0,receive=0;
 190          
 191          
 192          u8 rx_sum,FUCK_sum=0;//坑爹的xdata，定义成rx不能用，定义成FUCK就能用了
 193          
 194          
 195          u8 address[5];
 196          u8 hopping[5];
 197          u8 address_0[5]={'L','O','V','E','!'};//使用LOVE作为对频暗语
 198          
 199          
 200          
 201          u8 tx_buff[11],tx_data[11],rx[11]={0,0,0};
 202          u8 tx_order[11];
 203          
 204          
 205          u8 TX_protocol=3;
 206          
 207          
 208          
 209          
 210          
 211          //PPM
 212          
 213          u8 T_l,T_h;
 214          u8 t_ppm=0,t_PPMout=0;
 215          int PPM_buff[8],PPM_DATA[8]={0,0,0,0,0,0,0,0};
 216          u16  PPMout[8]={500,600,800,200,1000,0,100,300};
 217          u8 PPM_mapping[8]={0,1,2,3,4,5,6,7};
 218          
 219          u8 train_switch=0;
 220          bit train_output;
 221          u8 PPM_updata=0;
 222          
 223          
 224          //自动控制
 225          u8 auto_switch=0,auto_mode=2;
 226          char auto_middle=-100,auto_star=-50,auto_end=50;
 227          u8 auto_speed=10,auto_mapping=7;
 228          int auto_value=0;
 229          u16 auto_max,auto_min;
 230          bit auto_h,auto_l=0;
 231          
 232          
 233          
 234          
 235          //通道运算
 236          u8 Switch_A,Switch_B,Switch_C,Switch_D;
 237          
 238          int operation[8];
 239          bit RC_data_ready;
 240          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 5   

 241          
 242          char CH_middle[8]={0,0,0,0,0,0,0,0};
 243          u8 CH_ratio1[8]={100,100,100,100,100,100,100,100};
 244          u8 CH_ratio2[8]={100,100,100,100,100,100,100,100};
 245          u8 CH_negative[8]={0,0,0,0,0,0,0,0};
 246          u8 CH_middle_change=0;
 247          
 248          
 249          u8 mixer_name;
 250          bit mixer1,mixer2,mixer3,mixer4;
 251          u8 mixer1_same=1,mixer1_contrary=0;
 252          u8 mixer2_same=2,mixer2_contrary=3;
 253          u8 mixer3_same=3,mixer3_contrary=0;
 254          u8 mixer4_same=5,mixer4_contrary=0;
 255          
 256          
 257          
 258          
 259          /***********************************************************/
 260          //延时函数
 261          
 262          void Delay1ms()   //@12.000MHz
 263          {
 264   1        unsigned char i, j;
 265   1        i = 12;
 266   1        j = 168;
 267   1        do
 268   1        {
 269   2          while (--j);
 270   2        } while (--i);
 271   1      }
 272          
 273          void delay_ms(u16 i)
 274          {
 275   1        while(i--)
 276   1        Delay1ms();
 277   1      }
 278          
 279          /**********************************************************/
 280          //ROM操作函数、数据读写控制
 281          
 282          void Data_change(u8 m)
 283          {
 284   1        if(m==1)Data_system=1;
 285   1        if(m==2)Data_model=1;
 286   1        
 287   1        event3=1,t3=0;//刷新事件3定时器
 288   1        
 289   1      }
 290          
 291          void Model_data_reset()
 292          {
 293   1        CH_middle[0]=0;
 294   1          CH_middle[1]=0;
 295   1          CH_middle[2]=0;
 296   1          CH_middle[3]=0;
 297   1          CH_middle[4]=0;
 298   1          CH_middle[5]=0;
 299   1          CH_middle[6]=0;
 300   1          CH_middle[7]=0;
 301   1          CH_ratio1[0]=100;
 302   1          CH_ratio1[1]=100;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 6   

 303   1          CH_ratio1[2]=100;
 304   1          CH_ratio1[3]=100;
 305   1          CH_ratio1[4]=100;
 306   1          CH_ratio1[5]=100;
 307   1          CH_ratio1[6]=100;
 308   1          CH_ratio1[7]=100;
 309   1          CH_ratio2[0]=100;
 310   1          CH_ratio2[1]=100;
 311   1          CH_ratio2[2]=100;
 312   1          CH_ratio2[3]=100;
 313   1          CH_ratio2[4]=100;
 314   1          CH_ratio2[5]=100;
 315   1          CH_ratio2[6]=100;
 316   1          CH_ratio2[7]=100;     
 317   1          CH_negative[0]=0;
 318   1          CH_negative[1]=0;
 319   1          CH_negative[2]=0;
 320   1          CH_negative[3]=0;
 321   1          CH_negative[4]=0;
 322   1          CH_negative[5]=0;
 323   1          CH_negative[6]=0;
 324   1          CH_negative[7]=0;
 325   1          mixer1=0;
 326   1          mixer2=0;
 327   1          mixer3=0;
 328   1          mixer4=0;
 329   1          mixer1_same=1;
 330   1          mixer1_contrary=0;
 331   1          mixer2_same=2;
 332   1          mixer2_contrary=3;
 333   1          mixer3_same=3;
 334   1          mixer3_contrary=0;
 335   1          mixer4_same=5;
 336   1          mixer4_contrary=0;
 337   1          
 338   1          IN_mapping[0]=0;
 339   1          IN_mapping[1]=1;
 340   1          IN_mapping[2]=2;
 341   1          IN_mapping[3]=3;
 342   1          IN_mapping[4]=4;
 343   1          IN_mapping[5]=5;
 344   1          IN_mapping[6]=6;
 345   1          IN_mapping[7]=7;
 346   1      }
 347          
 348          u8 Model_adress(u8 num)
 349          {
 350   1        if(num==0)num=0;
 351   1        else if(num==1)num=54;
 352   1        else if(num==2)num=108;
 353   1        else if(num==3)num=162;
 354   1        else num=206;
 355   1        return num;
 356   1      }
 357          
 358          void Model_copy()
 359          {
 360   1        u16 i,base;
 361   1        base=Model_adress(Model_number);
 362   1        
 363   1        for(i=0;i<54;i++)
 364   1        {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 7   

 365   2          COPY_DATA[i]=TEMP_DATA[i+base];
 366   2        }
 367   1        
 368   1      
 369   1        base=Model_adress(Model_target);
 370   1        
 371   1        for(i=0;i<54;i++)
 372   1        {
 373   2          TEMP_DATA[i+base]=COPY_DATA[i];
 374   2        }
 375   1        
 376   1      }
 377          
 378          u8 EEPROM_read(u8 address_H,u16 address_L)
 379          {
 380   1        IAP_CMD=0x01;
 381   1        if(address_L>255)
 382   1        {
 383   2          IAP_ADDRH=address_H+1;
 384   2          IAP_ADDRL=address_L-255;  
 385   2        }
 386   1        else 
 387   1        {
 388   2          IAP_ADDRH=address_H;
 389   2          IAP_ADDRL=address_L;  
 390   2        }
 391   1        
 392   1        IAP_TRIG=0x5a;      //EEPROM读写密码，不同系列单片机不同
 393   1        IAP_TRIG=0xa5; 
 394   1        return IAP_DATA;
 395   1      }
 396          
 397          void EEPROM_write(u8 address_H,u16 address_L,u8 byte)
 398          {
 399   1        IAP_CMD=0x02;
 400   1        IAP_DATA=byte;
 401   1        if(address_L>255)
 402   1        {
 403   2          IAP_ADDRH=address_H+1;
 404   2          IAP_ADDRL=address_L-255;  
 405   2        }
 406   1        else 
 407   1        {
 408   2          IAP_ADDRH=address_H;
 409   2          IAP_ADDRL=address_L;  
 410   2        }
 411   1        IAP_ADDRH=address_H;
 412   1        IAP_ADDRL=address_L;
 413   1        IAP_TRIG=0x5a;
 414   1        IAP_TRIG=0xa5; 
 415   1        
 416   1      }
 417          
 418          void EEPROM_clean(u8 address_H)
 419          {
 420   1        IAP_CMD=0x03;
 421   1        IAP_ADDRH=address_H;
 422   1        IAP_ADDRL=0;
 423   1        IAP_TRIG=0x5a;
 424   1        IAP_TRIG=0xa5;
 425   1      }
 426          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 8   

 427          void DATA_read1()
 428          {               
 429   1        IAP_CONTR=0x82;
 430   1        if(EEPROM_read(0,0)!=0xa0)   
 431   1        {
 432   2          first=1;
 433   2          
 434   2          
 435   2          RC_TX=1;PPM_OUT=1;
 436   2      
 437   2        }
 438   1        else
 439   1        {
 440   2      //    system=EEPROM_read(0,1);
 441   2          Battery_1s=EEPROM_read(0,2);
 442   2          LCD_vop=EEPROM_read(0,3);
 443   2          LCD_light=EEPROM_read(0,4);
 444   2          CH1_offset=EEPROM_read(0,5);
 445   2          CH2_offset=EEPROM_read(0,6);
 446   2          CH3_offset=EEPROM_read(0,7);
 447   2          CH4_offset=EEPROM_read(0,8);
 448   2          
 449   2          address[0]=EEPROM_read(0,9);
 450   2          address[1]=EEPROM_read(0,10);
 451   2          address[2]=EEPROM_read(0,11);
 452   2          address[3]=EEPROM_read(0,12);
 453   2          address[4]=EEPROM_read(0,13);
 454   2          hopping[0]=EEPROM_read(0,14);
 455   2          hopping[1]=EEPROM_read(0,15);
 456   2          hopping[2]=EEPROM_read(0,16);
 457   2          hopping[3]=EEPROM_read(0,17);
 458   2          hopping[4]=EEPROM_read(0,18);
 459   2      //    
 460   2          VLD1=EEPROM_read(0,19);
 461   2          VLD2=EEPROM_read(0,20);
 462   2          Sound_switch=EEPROM_read(0,21); 
 463   2      /*    Sound_switch=EEPROM_read(0,22);
 464   2          angle_y_negative=EEPROM_read(0,23);
 465   2          angle_x_ratio=EEPROM_read(0,24);
 466   2          angle_y_ratio=EEPROM_read(0,25);
 467   2          angle_x_middle=EEPROM_read(0,26);
 468   2          angle_x_middle<<=8;
 469   2          angle_x_middle+=EEPROM_read(0,27);
 470   2          angle_y_middle=EEPROM_read(0,28);
 471   2          angle_y_middle<<=8;
 472   2          angle_y_middle+=EEPROM_read(0,29);*/
 473   2      
 474   2          NRF_mapping[0]=EEPROM_read(0,30);
 475   2          NRF_mapping[1]=EEPROM_read(0,31);
 476   2          NRF_mapping[2]=EEPROM_read(0,32);
 477   2          NRF_mapping[3]=EEPROM_read(0,33);
 478   2          NRF_mapping[4]=EEPROM_read(0,34);
 479   2          NRF_mapping[5]=EEPROM_read(0,35);
 480   2          NRF_mapping[6]=EEPROM_read(0,36);
 481   2          NRF_mapping[7]=EEPROM_read(0,37);
 482   2          
 483   2          PPM_mapping[0]=EEPROM_read(0,38);
 484   2          PPM_mapping[1]=EEPROM_read(0,39);
 485   2          PPM_mapping[2]=EEPROM_read(0,40);
 486   2          PPM_mapping[3]=EEPROM_read(0,41);
 487   2          PPM_mapping[4]=EEPROM_read(0,42);
 488   2          PPM_mapping[5]=EEPROM_read(0,43);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 9   

 489   2          PPM_mapping[6]=EEPROM_read(0,44);
 490   2          PPM_mapping[7]=EEPROM_read(0,45);
 491   2      
 492   2          train_switch=EEPROM_read(0,46);
 493   2          RC_TX=EEPROM_read(0,47);
 494   2          Model_number=EEPROM_read(0,48);Model_current=Model_number;
 495   2          PPM_OUT=EEPROM_read(0,49);
 496   2          PPM_IN=EEPROM_read(0,50);
 497   2          
 498   2          auto_switch=EEPROM_read(0,51);
 499   2          auto_star=EEPROM_read(0,52);
 500   2          auto_end=EEPROM_read(0,53);
 501   2          auto_middle=EEPROM_read(0,54);
 502   2          auto_mapping=EEPROM_read(0,55);
 503   2          auto_speed=EEPROM_read(0,56);
 504   2          
 505   2        }
 506   1        
 507   1      
 508   1        IAP_CONTR=0;
 509   1      }
 510          
 511          
 512          void DATA_save1()
 513          {
 514   1        IAP_CONTR=0x82;
 515   1          EEPROM_clean(0);
 516   1          EEPROM_write(0,0,0xa0);
 517   1      
 518   1      //    EEPROM_write(0,1,system);
 519   1          EEPROM_write(0,2,Battery_1s);
 520   1          EEPROM_write(0,3,LCD_vop);
 521   1          EEPROM_write(0,4,LCD_light);
 522   1          EEPROM_write(0,5,CH1_offset);
 523   1          EEPROM_write(0,6,CH2_offset);
 524   1          EEPROM_write(0,7,CH3_offset);
 525   1          EEPROM_write(0,8,CH4_offset);
 526   1        
 527   1          EEPROM_write(0,9,address[0]);
 528   1          EEPROM_write(0,10,address[1]);
 529   1          EEPROM_write(0,11,address[2]);
 530   1          EEPROM_write(0,12,address[3]);
 531   1          EEPROM_write(0,13,address[4]);
 532   1          EEPROM_write(0,14,hopping[0]);
 533   1          EEPROM_write(0,15,hopping[1]);
 534   1          EEPROM_write(0,16,hopping[2]);
 535   1          EEPROM_write(0,17,hopping[3]);
 536   1          EEPROM_write(0,18,hopping[4]);
 537   1          
 538   1          EEPROM_write(0,19,VLD1);
 539   1          EEPROM_write(0,20,VLD2);
 540   1          EEPROM_write(0,21,Sound_switch);
 541   1      /*
 542   1          
 543   1      
 544   1          EEPROM_write(0,22,angle_x_negative);
 545   1          EEPROM_write(0,23,angle_y_negative);
 546   1          EEPROM_write(0,24,angle_x_ratio);
 547   1          EEPROM_write(0,25,angle_y_ratio);
 548   1      
 549   1          EEPROM_write(0,26,angle_x_middle>>8);
 550   1          EEPROM_write(0,27,angle_x_middle);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 10  

 551   1          EEPROM_write(0,28,angle_y_middle>>8);
 552   1          EEPROM_write(0,29,angle_y_middle);*/
 553   1      
 554   1          EEPROM_write(0,30,NRF_mapping[0]);
 555   1          EEPROM_write(0,31,NRF_mapping[1]);
 556   1          EEPROM_write(0,32,NRF_mapping[2]);
 557   1          EEPROM_write(0,33,NRF_mapping[3]);
 558   1          EEPROM_write(0,34,NRF_mapping[4]);
 559   1          EEPROM_write(0,35,NRF_mapping[5]);
 560   1          EEPROM_write(0,36,NRF_mapping[6]);
 561   1          EEPROM_write(0,37,NRF_mapping[7]);
 562   1          
 563   1          EEPROM_write(0,38,PPM_mapping[0]);
 564   1          EEPROM_write(0,39,PPM_mapping[1]);
 565   1          EEPROM_write(0,40,PPM_mapping[2]);
 566   1          EEPROM_write(0,41,PPM_mapping[3]);
 567   1          EEPROM_write(0,42,PPM_mapping[4]);
 568   1          EEPROM_write(0,43,PPM_mapping[5]);
 569   1          EEPROM_write(0,44,PPM_mapping[6]);
 570   1          EEPROM_write(0,45,PPM_mapping[7]);
 571   1          
 572   1          EEPROM_write(0,46,train_switch);
 573   1      
 574   1          EEPROM_write(0,47,RC_TX);
 575   1          EEPROM_write(0,48,Model_number);
 576   1          EEPROM_write(0,49,PPM_OUT);
 577   1          EEPROM_write(0,50,PPM_IN);
 578   1          
 579   1          EEPROM_write(0,51,auto_switch);
 580   1          EEPROM_write(0,52,auto_star);
 581   1          EEPROM_write(0,53,auto_end);
 582   1          EEPROM_write(0,54,auto_middle);
 583   1          EEPROM_write(0,55,auto_mapping);
 584   1          EEPROM_write(0,56,auto_speed);
 585   1          
 586   1        IAP_CONTR=0;
 587   1      }
 588          
 589          void DATA_read2()
 590          {
 591   1        u16 i,base;
 592   1        IAP_CONTR=0x82;
 593   1        base=Model_adress(Model_current);   
 594   1      
 595   1        if(EEPROM_read(2,base)!=0xa0&&EEPROM_read(2,base+1)!=0x0a)
 596   1        {
 597   2          Model_data_reset();
 598   2        }
 599   1        else
 600   1        {
 601   2          for(i=0;i<260;i++)
 602   2          {
 603   3            TEMP_DATA[i]=EEPROM_read(2,i);  
 604   3          }
 605   2            
 606   2          
 607   2            CH_middle[0]=TEMP_DATA[2+base];
 608   2            CH_middle[1]=TEMP_DATA[3+base];
 609   2            CH_middle[2]=TEMP_DATA[4+base];
 610   2            CH_middle[3]=TEMP_DATA[5+base];
 611   2            CH_middle[4]=TEMP_DATA[6+base];
 612   2            CH_middle[5]=TEMP_DATA[7+base];
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 11  

 613   2            CH_middle[6]=TEMP_DATA[8+base];
 614   2            CH_middle[7]=TEMP_DATA[9+base];
 615   2            CH_ratio1[0]=TEMP_DATA[10+base];
 616   2            CH_ratio1[1]=TEMP_DATA[11+base];
 617   2            CH_ratio1[2]=TEMP_DATA[12+base];
 618   2            CH_ratio1[3]=TEMP_DATA[13+base];
 619   2            CH_ratio1[4]=TEMP_DATA[14+base];
 620   2            CH_ratio1[5]=TEMP_DATA[15+base];
 621   2            CH_ratio1[6]=TEMP_DATA[16+base];
 622   2            CH_ratio1[7]=TEMP_DATA[17+base];
 623   2            CH_ratio2[0]=TEMP_DATA[18+base];
 624   2            CH_ratio2[1]=TEMP_DATA[19+base];
 625   2            CH_ratio2[2]=TEMP_DATA[20+base];
 626   2            CH_ratio2[3]=TEMP_DATA[21+base];
 627   2            CH_ratio2[4]=TEMP_DATA[22+base];
 628   2            CH_ratio2[5]=TEMP_DATA[23+base];
 629   2            CH_ratio2[6]=TEMP_DATA[24+base];
 630   2            CH_ratio2[7]=TEMP_DATA[25+base];      
 631   2            CH_negative[0]=TEMP_DATA[26+base];
 632   2            CH_negative[1]=TEMP_DATA[27+base];
 633   2            CH_negative[2]=TEMP_DATA[28+base];
 634   2            CH_negative[3]=TEMP_DATA[29+base];
 635   2            CH_negative[4]=TEMP_DATA[30+base];
 636   2            CH_negative[5]=TEMP_DATA[31+base];
 637   2            CH_negative[6]=TEMP_DATA[32+base];
 638   2            CH_negative[7]=TEMP_DATA[33+base];
 639   2            mixer1=TEMP_DATA[34+base];
 640   2            mixer2=TEMP_DATA[35+base];
 641   2            mixer3=TEMP_DATA[36+base];
 642   2            mixer4=TEMP_DATA[37+base];
 643   2            mixer1_same=TEMP_DATA[38+base];
 644   2            mixer1_contrary=TEMP_DATA[39+base];
 645   2            mixer2_same=TEMP_DATA[40+base];
 646   2            mixer2_contrary=TEMP_DATA[41+base];
 647   2            mixer3_same=TEMP_DATA[42+base];
 648   2            mixer3_contrary=TEMP_DATA[43+base];
 649   2            mixer4_same=TEMP_DATA[44+base];
 650   2            mixer4_contrary=TEMP_DATA[45+base];
 651   2            
 652   2            IN_mapping[0]=TEMP_DATA[46+base];
 653   2            IN_mapping[1]=TEMP_DATA[47+base];
 654   2            IN_mapping[2]=TEMP_DATA[48+base];
 655   2            IN_mapping[3]=TEMP_DATA[49+base];
 656   2            IN_mapping[4]=TEMP_DATA[50+base];
 657   2            IN_mapping[5]=TEMP_DATA[51+base];
 658   2            IN_mapping[6]=TEMP_DATA[52+base];
 659   2            IN_mapping[7]=TEMP_DATA[53+base];
 660   2          
 661   2        }
 662   1      
 663   1        IAP_CONTR=0;
 664   1      }
 665          
 666          void DATA_save2()
 667          {
 668   1        u16 i,base;
 669   1        IAP_CONTR=0x82;
 670   1        base=Model_adress(Model_current);
 671   1          EEPROM_clean(2);
 672   1      
 673   1          
 674   1            TEMP_DATA[base]=0xa0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 12  

 675   1            TEMP_DATA[1+base]=0x0a;
 676   1            TEMP_DATA[2+base]=CH_middle[0];
 677   1            TEMP_DATA[3+base]=CH_middle[1];
 678   1            TEMP_DATA[4+base]=CH_middle[2];
 679   1            TEMP_DATA[5+base]=CH_middle[3];
 680   1            TEMP_DATA[6+base]=CH_middle[4];
 681   1            TEMP_DATA[7+base]=CH_middle[5];
 682   1            TEMP_DATA[8+base]=CH_middle[6];
 683   1            TEMP_DATA[9+base]=CH_middle[7];
 684   1            TEMP_DATA[10+base]=CH_ratio1[0];
 685   1            TEMP_DATA[11+base]=CH_ratio1[1];
 686   1            TEMP_DATA[12+base]=CH_ratio1[2];
 687   1            TEMP_DATA[13+base]=CH_ratio1[3];
 688   1            TEMP_DATA[14+base]=CH_ratio1[4];
 689   1            TEMP_DATA[15+base]=CH_ratio1[5];
 690   1            TEMP_DATA[16+base]=CH_ratio1[6];
 691   1            TEMP_DATA[17+base]=CH_ratio1[7];
 692   1            TEMP_DATA[18+base]=CH_ratio2[0];
 693   1            TEMP_DATA[19+base]=CH_ratio2[1];
 694   1            TEMP_DATA[20+base]=CH_ratio2[2];
 695   1            TEMP_DATA[21+base]=CH_ratio2[3];
 696   1            TEMP_DATA[22+base]=CH_ratio2[4];
 697   1            TEMP_DATA[23+base]=CH_ratio2[5];
 698   1            TEMP_DATA[24+base]=CH_ratio2[6];
 699   1            TEMP_DATA[25+base]=CH_ratio2[7];      
 700   1            TEMP_DATA[26+base]=CH_negative[0];
 701   1            TEMP_DATA[27+base]=CH_negative[1];
 702   1            TEMP_DATA[28+base]=CH_negative[2];
 703   1            TEMP_DATA[29+base]=CH_negative[3];
 704   1            TEMP_DATA[30+base]=CH_negative[4];
 705   1            TEMP_DATA[31+base]=CH_negative[5];
 706   1            TEMP_DATA[32+base]=CH_negative[6];
 707   1            TEMP_DATA[33+base]=CH_negative[7];
 708   1            TEMP_DATA[34+base]=mixer1;
 709   1            TEMP_DATA[35+base]=mixer2;
 710   1            TEMP_DATA[36+base]=mixer3;
 711   1            TEMP_DATA[37+base]=mixer4;
 712   1            TEMP_DATA[38+base]=mixer1_same;
 713   1            TEMP_DATA[39+base]=mixer1_contrary;
 714   1            TEMP_DATA[40+base]=mixer2_same;
 715   1            TEMP_DATA[41+base]=mixer2_contrary;
 716   1            TEMP_DATA[42+base]=mixer3_same;
 717   1            TEMP_DATA[43+base]=mixer3_contrary;
 718   1            TEMP_DATA[44+base]=mixer4_same;
 719   1            TEMP_DATA[45+base]=mixer4_contrary;
 720   1            
 721   1            TEMP_DATA[46+base]=IN_mapping[0];
 722   1            TEMP_DATA[47+base]=IN_mapping[1];
 723   1            TEMP_DATA[48+base]=IN_mapping[2];
 724   1            TEMP_DATA[49+base]=IN_mapping[3];
 725   1            TEMP_DATA[50+base]=IN_mapping[4];
 726   1            TEMP_DATA[51+base]=IN_mapping[5];
 727   1            TEMP_DATA[52+base]=IN_mapping[6];
 728   1            TEMP_DATA[53+base]=IN_mapping[7];
 729   1      
 730   1        for(i=0;i<260;i++)
 731   1        {
 732   2          EEPROM_write(2,i,TEMP_DATA[i]); 
 733   2        }
 734   1        IAP_CONTR=0;
 735   1      }
 736          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 13  

 737          /**************************************************************************/
 738          //NRF24L01+
 739          u8 SPI(u8 byte)
 740          {
 741   1        u8 i;
 742   1        for(i=0;i<8;i++)
 743   1        {
 744   2          MDI=(byte&0x80);
 745   2          SCK=1;
 746   2          byte<<=1;
 747   2          byte|=MDO;
 748   2          SCK=0;
 749   2        }
 750   1        return byte;
 751   1      }
 752          
 753          void REG_write(u8 address,u8 command)
 754          {
 755   1        CSN=0;
 756   1        SPI(0x20+address);
 757   1        SPI(command);
 758   1        CSN=1;
 759   1      }
 760          
 761          u8 REG_read(u8 address)
 762          {
 763   1        u8 m;
 764   1        CSN=0;
 765   1        SPI(address);
 766   1        m=SPI(0);
 767   1        CSN=1;
 768   1        return m;
 769   1      }
 770          
 771          void FIFO_write(u8 DATA_OUT[],u8 lengh)
 772          {
 773   1        u8 i;
 774   1        CSN=0;
 775   1        SPI(0xa0);
 776   1        for(i=0;i<lengh;i++)
 777   1        SPI(DATA_OUT[i]);
 778   1        CSN=1;
 779   1      }
 780          void FIFO_write2(u8 DATA_OUT[],u8 lengh)
 781          {
 782   1        u8 i;
 783   1        CSN=0;
 784   1        SPI(0xa0);
 785   1        for(i=0;i<lengh;i++)
 786   1        SPI(DATA_OUT[i]);
 787   1        CSN=1;
 788   1      }
 789          void FIFO_read(u8 DATA_IN[],u8 lengh)   //读取接收数据缓冲区
 790          {
 791   1        u8 i;
 792   1        CSN=0;
 793   1        SPI(0x61);  //读取命令
 794   1        for(i=0;i<lengh;i++)
 795   1        DATA_IN[i]=SPI(0);     
 796   1        CSN=1;
 797   1      }
 798          void FIFO_read2(u8 DATA_IN[],u8 lengh)    //读取接收数据缓冲区
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 14  

 799          {
 800   1        u8 i;
 801   1        CSN=0;
 802   1        SPI(0x61);  //读取命令
 803   1        for(i=0;i<lengh;i++)
 804   1        DATA_IN[i]=SPI(0);     
 805   1        CSN=1;
 806   1      }
 807          void TX_address(u8 DATA_IN[])
 808          {
 809   1        CSN=0;     
 810   1        SPI(0x20+0x10);
 811   1        SPI(DATA_IN[0]);
 812   1        SPI(DATA_IN[1]);
 813   1        SPI(DATA_IN[2]);
 814   1        SPI(DATA_IN[3]);
 815   1        SPI(DATA_IN[4]);
 816   1        CSN=1;  
 817   1      }  
 818          void RX_address(u8 DATA_IN[])
 819          {
 820   1        CSN=0;     
 821   1        SPI(0x20+0x0a);
 822   1        SPI(DATA_IN[0]);
 823   1        SPI(DATA_IN[1]);
 824   1        SPI(DATA_IN[2]);
 825   1        SPI(DATA_IN[3]);
 826   1        SPI(DATA_IN[4]);
 827   1        CSN=1;  
 828   1      }
 829          void RX_mode()         
 830          {
 831   1        CE=0;
 832   1        REG_write(0x00,0x3b); //CRC,8 bit,Power on,RX
 833   1        CE=1;
 834   1      }            
 835            
 836          void TX_mode()         
 837          {
 838   1        CE=0;
 839   1        REG_write(0x00,0x0a);
 840   1        CE=1;
 841   1      }
 842          
 843          void  NRF_power(u8 P)       //发射功率设置
 844          {
 845   1        CE=0;
 846   1        if(P==3)REG_write(0x06,0x27);     //0db 修正之前注释错误
 847   1        else if(P==2)REG_write(0x06,0x25);    //-6db
 848   1        else if(P==1)REG_write(0x06,0x23);    //-12db
 849   1        else if(P==0)REG_write(0x06,0x21);    //-18db
 850   1        CE=1;
 851   1      }
 852          
 853          void NRF_size(u8 l)
 854          {
 855   1        CE=0;
 856   1        REG_write(0x11,l);  
 857   1        CE=1;
 858   1      }
 859          
 860          void NRF_channel(u8 c)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 15  

 861          {
 862   1        CE=0;
 863   1        REG_write(0x05,c);  
 864   1        CE=1;
 865   1      }
 866          
 867          
 868          void NRF_init()
 869          { 
 870   1        CE=0;
 871   1        SCK=0;
 872   1        REG_write(0x01,0x00); //禁止 自动应答
 873   1        REG_write(0x02,0x01); //允许 P0信道
 874   1        REG_write(0x04,0x00); //禁止 自动重发
 875   1        TX_mode();       
 876   1        NRF_channel(66);
 877   1        NRF_power(TX_power);
 878   1        NRF_size(11);
 879   1        TX_address(address);
 880   1        RX_address(address);
 881   1      }
 882          
 883          void NRF_test() //无线模块终极测试
 884          { 
 885   1        u8 reset_err=0;
 886   1        CE=0;
 887   1        SCK=0;
 888   1        CSN=0;
 889   1        
 890   1        if(SPI(0x20)!=0x0e){reset_err=1;}
 891   1        SPI(0x0a);
 892   1      
 893   1        CSN=1;
 894   1      
 895   1        CSN=0;
 896   1        SPI(0x00);
 897   1      
 898   1        if(SPI(0x00)!=0x0a){NRF_error|=0x02;}//MOSI bad
 899   1        CSN=1;
 900   1      
 901   1        REG_write(0x01,0x00);
 902   1        REG_write(0x04,0x00);
 903   1        REG_write(0x11,1);
 904   1        
 905   1        FIFO_write(tx_buff,1);
 906   1        CE=1;
 907   1      
 908   1        delay_ms(2);
 909   1        
 910   1        CSN=0;
 911   1      
 912   1        if(SPI(0x00)!=0x2e){NRF_error|=0x04;}//CE bad
 913   1        CSN=1;
 914   1          
 915   1        if(IRQ)NRF_error|=0x18; //IRQ bad
 916   1        else 
 917   1        {
 918   2          if(NRF_error&0x04==0)NRF_error|=0x10;   //MISO bad
 919   2        }
 920   1        CE=1;
 921   1        
 922   1        if(reset_err&&NRF_error>1)NRF_error|=0x01;//CSN,CLK bad
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 16  

 923   1        
 924   1        REG_write(0x07,0x20); //清除TX中断信号
 925   1      }
 926          
 927          void device_connect()
 928          {
 929   1        u8 n;
 930   1        
 931   1        RC_TX=0;
 932   1         
 933   1        tx_order[0]=0xa0;
 934   1        tx_order[1]=hopping[0];
 935   1        tx_order[2]=hopping[1];
 936   1        tx_order[3]=hopping[2];
 937   1        tx_order[4]=hopping[3];
 938   1        tx_order[5]=hopping[4];
 939   1        tx_order[6]=address[0];
 940   1        tx_order[7]=address[1];
 941   1        tx_order[8]=address[2];
 942   1        tx_order[9]=address[3];
 943   1        tx_order[10]=address[4];  
 944   1           
 945   1        NRF_channel(33);
 946   1        NRF_power(0);
 947   1        NRF_size(11);
 948   1        TX_address(address_0);
 949   1        RX_address(address_0);
 950   1        
 951   1        not_get=1;connecting=1;
 952   1        while(not_get&connecting)          //把对频信息发给接收机，若收到回复表面通信成功，
 953   1        {                //收不到继续发送
 954   2          TX_mode();
 955   2          FIFO_write(tx_order,11);
 956   2          Delay1ms();
 957   2          RX_mode();
 958   2          
 959   2          while(1)
 960   2          {   
 961   3            Delay1ms();
 962   3            if(IRQ==0)
 963   3            {
 964   4              FIFO_read(rx,11);   //读取接收数据
 965   4              CE=0;
 966   4              REG_write(0x07,0x40); //清除RX中断信号
 967   4              CE=1; 
 968   4              if(rx[0]=='O'&&rx[1]=='K')
 969   4              {
 970   5                not_get=0;break;
 971   5              }
 972   4            }
 973   3              
 974   3            n++;if(n>50){n=0;break;}
 975   3          }
 976   2        }
 977   1        
 978   1        
 979   1        event2=0,t2=0;
 980   1      
 981   1        RC_TX=1;
 982   1        NRF_power(TX_power);//恢复发射状态
 983   1        NRF_size(11);
 984   1        TX_address(address);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 17  

 985   1        RX_address(address); 
 986   1             
 987   1      }
 988          
 989          
 990          
 991          
 992          
 993          
 994          /***********************************************/
 995          //12864液晶操作函数
 996          void LCD(u8 D)
 997          {
 998   1        DATA=D;
 999   1        CLK=0;SDA=D_7;CLK=1;
1000   1        CLK=0;SDA=D_6;CLK=1;
1001   1        CLK=0;SDA=D_5;CLK=1;
1002   1        CLK=0;SDA=D_4;CLK=1;
1003   1        CLK=0;SDA=D_3;CLK=1;
1004   1        CLK=0;SDA=D_2;CLK=1;
1005   1        CLK=0;SDA=D_1;CLK=1;
1006   1        CLK=0;SDA=D_0;CLK=1;
1007   1        CLK=0;
1008   1      }
1009          
1010          
1011          void location(u8 x,u8 y)
1012          {
1013   1        RS=0;
1014   1        LCD(0xb0+y);
1015   1        LCD(((x>>4)&0x0f)+0x10);
1016   1        LCD(x&0x0f);
1017   1        RS=1;
1018   1      }
1019          
1020          void LCD_ON()
1021          {CS=0;}
1022          
1023          void LCD_OFF()
1024          {CS=1;}
1025          
1026          void clean()
1027          {
1028   1        u8 i,j;
1029   1        for(j=0;j<8;j++)
1030   1        {
1031   2          location(0,j);
1032   2          for(i=0;i<128;i++)
1033   2            LCD(0);
1034   2        }
1035   1      }
1036          
1037          void LCD_init()
1038          {
1039   1        LCD_ON();
1040   1        RST=0;
1041   1        delay_ms(2);
1042   1        RST=1;
1043   1        delay_ms(10);
1044   1        RS=0;
1045   1        LCD(0xe2);
1046   1        LCD(0x2c);  
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 18  

1047   1        LCD(0x2e);
1048   1        LCD(0x2f);
1049   1        LCD(0x23);
1050   1        LCD(0x81);
1051   1        LCD(LCD_vop);
1052   1        LCD(0xa2);  
1053   1        LCD(0xc8);
1054   1        LCD(0xa0);
1055   1        LCD(0x40);
1056   1        LCD(0xaf);
1057   1        RS=1;
1058   1        clean();
1059   1        LCD_OFF();
1060   1      //  light=LED;  
1061   1      }
1062          
1063          void send(u8 k)
1064          {
1065   1        u8 j;
1066   1        for(j=0;j<6;j++)
1067   1          LCD(font[k-32][j]);   
1068   1      }
1069          
1070          void send2(u8 k,u8 x,u8 y)     //写大字母
1071          {
1072   1        u8 i;
1073   1        k-=32;
1074   1        location(x,y);
1075   1        for(i=0;i<8;i++)
1076   1        {
1077   2          LCD(font_big[k][i]);  
1078   2        }
1079   1        location(x,y+1);
1080   1        for(i=8;i<16;i++)
1081   1        {
1082   2          LCD(font_big[k][i]);  
1083   2        }
1084   1      }
1085          
1086          void send2_hex(u8 k,u8 x,u8 y)
1087          {
1088   1        u8 i;
1089   1        if(k>9)
1090   1        {
1091   2          k+=23;
1092   2          location(x,y);
1093   2          for(i=0;i<8;i++)
1094   2          {
1095   3            LCD(font_big[k][i]);  
1096   3          }
1097   2          location(x,y+1);
1098   2          for(i=8;i<16;i++)
1099   2          {
1100   3            LCD(font_big[k][i]);  
1101   3          }
1102   2        }
1103   1        else
1104   1        {
1105   2          k+=16;
1106   2          location(x,y);
1107   2          for(i=0;i<8;i++)
1108   2          {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 19  

1109   3            LCD(font_big[k][i]);  
1110   3          }
1111   2          location(x,y+1);
1112   2          for(i=8;i<16;i++)
1113   2          {
1114   3            LCD(font_big[k][i]);  
1115   3          }
1116   2        }
1117   1        
1118   1      }
1119          
1120          void send3(u8 *p,u8 x,u8 y)    //写汉字
1121          {
1122   1        u8 i;
1123   1        location(x,y);
1124   1        for(i=0;i<12;i++)
1125   1        {
1126   2          LCD(*p),p++;  
1127   2        }
1128   1        location(x,y+1);
1129   1        for(i=0;i<12;i++)
1130   1        {
1131   2          LCD(*p),p++;  
1132   2        }
1133   1      }
1134          
1135          void write(u8 x,u8 y)     //显示汉字
1136          {
1137   1        u8 *d;
1138   1        d=word;
1139   1        while(*d)
1140   1        {   
1141   2          send3(hzk[*d],x,y);
1142   2          d++;x+=12;
1143   2        }
1144   1      
1145   1      }
1146          void write0(u8 *d,u8 x,u8 y)      //显示汉字串
1147          {
1148   1      
1149   1        while(*d)
1150   1        {   
1151   2          send3(hzk[*d],x,y);
1152   2          d++;x+=12;
1153   2        }
1154   1      
1155   1      }
1156          /*
1157          void write2(u8 x,u8 y)      //显示大字母
1158          {
1159            u8 *d;
1160            d=word;
1161            while(*d)
1162            {   
1163              send2(*d,x,y);
1164              d++;x+=8;
1165            }
1166          
1167          }*/
1168          
1169          
1170          void photo(u8 *p,u8 x,u8 y,u8 length,u8 width)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 20  

1171          {
1172   1        u8 i,j;
1173   1        for(i=0;i<width;i++)
1174   1        {
1175   2          location(x,i+y);
1176   2          for(j=0;j<length;j++)
1177   2          LCD(*p),p++;
1178   2        }   
1179   1      }
1180          void photo2(u8 *p,u8 x,u8 y,u8 length,u8 width)
1181          {
1182   1        u8 i,j;
1183   1        for(i=0;i<width;i++)
1184   1        {
1185   2          location(x,i+y);
1186   2          for(j=0;j<length;j++)
1187   2          LCD(*p),p++;
1188   2        }   
1189   1      }
1190          void CH13_trim(u8 v,u8 base)
1191          {
1192   1        u8 i;unsigned long L1,L2=0,L3,L4=0;
1193   1        L1=0x03e00000;v/=4;
1194   1        for(i=0;i<v;i++)
1195   1        {
1196   2          if(L1&1)
1197   2          {
1198   3            L1>>=1,L2>>=1;L2|=0x80000000;
1199   3          }
1200   2          else L1>>=1,L2>>=1;
1201   2        }
1202   1        L2|=0x40000000;
1203   1      
1204   1        if(v==0)L3=0x00100000,L4=0;
1205   1        else if(v==50)L3=0,L4=0x00000100;
1206   1        else
1207   1        {
1208   2          L3=0x02080000;L4=0;
1209   2          for(i=1;i<v;i++)
1210   2          {
1211   3            if(L3&1)
1212   3            {
1213   4              L3>>=1,L4>>=1;L4|=0x80000000;
1214   4            }
1215   3            else L3>>=1,L4>>=1;
1216   3          }
1217   2        }
1218   1        L4|=0x40000000;
1219   1      
1220   1        location(base,7);LCD(L1>>24);LCD(L3>>24);LCD(0x03);LCD(L3>>24);LCD(L1>>24);
1221   1        location(base,6);LCD(L1>>16);LCD(L3>>16);LCD(0xff);LCD(L3>>16);LCD(L1>>16);
1222   1        location(base,5);LCD(L1>>8); LCD(L3>>8); LCD(0xff);LCD(L3>>8); LCD(L1>>8);
1223   1        location(base,4);LCD(L1);    LCD(L3);  LCD(0xff);LCD(L3);    LCD(L1);
1224   1        location(base,3);LCD(L2>>24);LCD(L4>>24);LCD(0xff);LCD(L4>>24);LCD(L2>>24);
1225   1        location(base,2);LCD(L2>>16);LCD(L4>>16);LCD(0xff);LCD(L4>>16);LCD(L2>>16);
1226   1        location(base,1);LCD(L2>>8); LCD(L4>>8); LCD(0xff);LCD(L4>>8); LCD(L2>>8);  
1227   1        location(base,0);LCD(L2);  LCD(L4);  LCD(0xf8);LCD(L4);    LCD(L2);      
1228   1      }
1229          
1230          void CH24_trim(u8 v)
1231          {
1232   1        u8 i;char m;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 21  

1233   1        v=v/4+2;    
1234   1        for(i=0;i<55;i++)
1235   1        {   
1236   2          if(i==27)LCD(0x7c);
1237   2          else
1238   2          {
1239   3            m=v-i;
1240   3            if(m==3)LCD(0x38);
1241   3            else if(m==2)LCD(0x54); 
1242   3            else if(m==1)LCD(0x54);
1243   3            else if(m==0)LCD(0x54);
1244   3            else if(m==-1)LCD(0x54);
1245   3            else if(m==-2)LCD(0x54);
1246   3            else if(m==-3)LCD(0x38);
1247   3            else LCD(0x10);
1248   3          }
1249   2          
1250   2        }
1251   1      }
1252          
1253          void throttle(u8 x)
1254          {
1255   1        u8 i;long L=0;
1256   1        x=x/8;
1257   1        for(i=0;i<x;i++)
1258   1        {
1259   2          L>>=1;
1260   2          L|=0x80000000;
1261   2        }
1262   1        L++;
1263   1        location(9,6);LCD(L>>24);LCD(L>>24);
1264   1        location(9,5);LCD(L>>16);LCD(L>>16);
1265   1        location(9,4);LCD(L>>8);LCD(L>>8);
1266   1        location(9,3);LCD(L);LCD(L);
1267   1      }
1268          /*
1269          void warning(u8 x,u8 y)
1270          {
1271            location(x,y);
1272            LCD(0x40);LCD(0x60);LCD(0x50);LCD(0x48);LCD(0x44);LCD(0x42);LCD(0x6d);
1273            LCD(0x42);LCD(0x44);LCD(0x48);LCD(0x50);LCD(0x60);LCD(0x40);
1274          }
1275          */
1276          void write_num100(int num,u8 x,u8 y,u8 c)//写1000内数字，c为类型选择
1277          {
1278   1        if(c=='-'||c=='/')
1279   1        {
1280   2          if(num>0)send2('+',x-8,y);
1281   2          else if(num<0)num=-num,send2('-',x-8,y);
1282   2        }
1283   1        if(num>99)send2(num/100+48,x,y);
1284   1        else send2(' ',x,y);
1285   1        send2(num%100/10+48,x+8,y);
1286   1        if(c=='.')
1287   1        {
1288   2          send2('.',x+16,y);
1289   2          send2(num%10+48,x+24,y);
1290   2        }
1291   1        else
1292   1        {
1293   2          send2(num%10+48,x+16,y);
1294   2          if(c=='%'||c=='/')send2('%',x+24,y);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 22  

1295   2        }
1296   1        
1297   1      }
1298          
1299          void write_num1000(int num)//写10000内数字
1300          {
1301   1        
1302   1        if(num>999)send(num/1000+48);
1303   1        else send(' ');
1304   1        if(num>99)send(num%1000/100+48);
1305   1        else send(' ');
1306   1        send(num%100/10+48);
1307   1        send(num%10+48);
1308   1        
1309   1      }
1310          
1311          u8 move_cursor(u8 line,u8 line_max)//光标移动
1312          {
1313   1        if(up)
1314   1        {
1315   2          up=0;
1316   2          if(line>0)line--;
1317   2          else line=line_max;
1318   2        }
1319   1        if(down)
1320   1        {
1321   2          down=0;
1322   2          if(line<line_max)line++;
1323   2          else line=0;
1324   2        }
1325   1        return line;
1326   1      }
1327          
1328          void display_menu(u8 line,u8 line_max)//显示菜单
1329          {
1330   1        if(line_max<4)send3(hzk[1],0,line+line);
1331   1        else 
1332   1        {
1333   2          if(line<3)send3(hzk[1],0,line+line);
1334   2          else if(line==line_max)send3(hzk[1],0,6);
1335   2          else send3(hzk[1],0,4);
1336   2        }
1337   1        
1338   1        if(line<3)
1339   1        {
1340   2          if(line_max==2)
1341   2          {
1342   3            write0(WW[0],12,0);
1343   3            write0(WW[1],12,2);
1344   3            write0(WW[2],12,4);
1345   3          }
1346   2          else
1347   2          {
1348   3            write0(WW[0],12,0);
1349   3            write0(WW[1],12,2);
1350   3            write0(WW[2],12,4);
1351   3            write0(WW[3],12,6); 
1352   3          }
1353   2          
1354   2        }
1355   1        else if(line==line_max)
1356   1        {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 23  

1357   2          write0(WW[line-3],12,0);
1358   2          write0(WW[line-2],12,2);
1359   2          write0(WW[line-1],12,4);
1360   2          write0(WW[line],12,6);
1361   2        }
1362   1        else if(line<line_max)
1363   1        {
1364   2          write0(WW[line-2],12,0);
1365   2          write0(WW[line-1],12,2);
1366   2          write0(WW[line],12,4);
1367   2          write0(WW[line+1],12,6);
1368   2        }
1369   1        if(line_max==9)
1370   1        {
1371   2          location(97,7);
1372   2          if(line==9)send('1'),send('0');
1373   2          else send(' '),send(line+49);
1374   2          send('/');send('1');send('0');
1375   2        }
1376   1        else
1377   1        {
1378   2          location(109,7);send(line+49);send('/');send(line_max+49);
1379   2        }
1380   1          
1381   1      }
1382          
1383          void display_mapping(u8 mode,u8 x,u8 y)//显示映射对象
1384          {
1385   1        switch(mode)
1386   1        {
1387   2          case 0:send3(hzk[96],x,y);send3(hzk[97],x+12,y);send2('1',x+24,y);break;
1388   2          case 1:send3(hzk[96],x,y);send3(hzk[97],x+12,y);send2('2',x+24,y);break;
1389   2          case 2:send3(hzk[96],x,y);send3(hzk[97],x+12,y);send2('3',x+24,y);break;
1390   2          case 3:send3(hzk[96],x,y);send3(hzk[97],x+12,y);send2('4',x+24,y);break;
1391   2          case 4:send3(hzk[100],x,y);send3(hzk[101],x+12,y);send2('1',x+24,y);break;
1392   2          case 5:send3(hzk[100],x,y);send3(hzk[101],x+12,y);send2('2',x+24,y);break;
1393   2          case 6:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('A',x+24,y);break;
1394   2          case 7:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('B',x+24,y);break;
1395   2          case 8:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('C',x+24,y);break;
1396   2          case 9:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('D',x+24,y);break;
1397   2      /*    case 10:send3(hzk[102],x,y);send3(hzk[103],x+12,y);send2('X',x+24,y);break;
1398   2          case 11:send3(hzk[102],x,y);send3(hzk[103],x+12,y);send2('Y',x+24,y);break;
1399   2          case 12:send3(hzk[102],x,y);send3(hzk[103],x+12,y);send2('Z',x+24,y);break;
1400   2          case 13:send3(hzk[104],x,y);send3(hzk[105],x+12,y);send2('1',x+24,y);break;
1401   2          case 14:send3(hzk[104],x,y);send3(hzk[105],x+12,y);send2('2',x+24,y);break;*/
1402   2          case 10:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('1',x+24,y);break;
1403   2          case 11:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('2',x+24,y);break;
1404   2          case 12:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('3',x+24,y);break;
1405   2          case 13:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('4',x+24,y);break;
1406   2          case 14:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('5',x+24,y);break;
1407   2          case 15:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('6',x+24,y);break;
1408   2          case 16:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('7',x+24,y);break;
1409   2          case 17:send2('P',x,y);send2('P',x+8,y);send2('M',x+16,y);send2('8',x+24,y);break;
1410   2        }
1411   1        
1412   1      }
1413          
1414          void display_switch(u8 sw,u8 x,u8 y)
1415          {
1416   1        switch(sw)
1417   1        {
1418   2          case 0:send2('-',x+4,y);send3(hzk[10],x+12,y);send2('-',x+24,y);break;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 24  

1419   2          case 1:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('A',x+24,y);break;
1420   2          case 2:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('B',x+24,y);break;
1421   2          case 3:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('C',x+24,y);break;
1422   2          case 4:send3(hzk[58],x,y);send3(hzk[59],x+12,y);send2('D',x+24,y);break;
1423   2        }
1424   1      }
1425          
1426          
1427          
1428          /************************************************************************/
1429          //数据运算函数
1430          /*
1431          void data_check(int x,int max,int min)
1432          {
1433            
1434            if(x>max)x=max;
1435            if(x<min)x=min;
1436          
1437          }
1438          */
1439          void Xdata_check(int *p)//坑爹的STC Xdata，只能用指针来调用，否则会出错
1440          {
1441   1        u8 i;
1442   1        for(i=0;i<8;i++)
1443   1        {
1444   2          if(*p>1023)*p=1023;
1445   2          if(*p<0)*p=0; 
1446   2          p++;
1447   2        }
1448   1        
1449   1      }
1450          
1451          
1452          
1453          void function_size(u8 num)//舵量函数
1454          {
1455   1      
1456   1        if(operation[num]>0)
1457   1        {
1458   2          operation[num]=(long)operation[num]*CH_ratio2[num]/100;
1459   2        }
1460   1        else
1461   1        {
1462   2          operation[num]=(long)operation[num]*CH_ratio1[num]/100;
1463   2        }
1464   1        
1465   1      }
1466          
1467          void function_negative(u8 num)//反转函数
1468          {
1469   1        
1470   1        if(CH_negative[num]==1)operation[num]=-operation[num]+CH_middle[num];
1471   1        else operation[num]+=CH_middle[num];
1472   1      }
1473          
1474          
1475          void function_mix(u8 same,u8 contrary)//混控函数 
1476          {
1477   1        int y1,y2;
1478   1        
1479   1        y1=operation[same]+operation[contrary];
1480   1        y2=operation[same]-operation[contrary];
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 25  

1481   1        
1482   1        operation[same]=y1;
1483   1        operation[contrary]=y2;
1484   1            
1485   1      }
1486          
1487          int CH_calib(int x,u8 offset)       //修正摇杆行程
1488          {
1489   1      
1490   1        x=512+(x-512)*51/offset;
1491   1      
1492   1        if(x>1023)x=1023;
1493   1        if(x<0)x=0;
1494   1        return x;   
1495   1      }
1496          
1497          void function_mapping(u8 num)//输入映射
1498          {
1499   1      
1500   1        switch(IN_mapping[num])
1501   1        {
1502   2          case 0:operation[num]=CH_value[0]*5/6-426;break;
1503   2          case 1:operation[num]=CH_value[1]*5/6-426;break;
1504   2          case 2:operation[num]=CH_value[2]*5/6-426;break;
1505   2          case 3:operation[num]=CH_value[3]*5/6-426;break;
1506   2          case 4:operation[num]=adc[2]*5/6-426;break;
1507   2          case 5:operation[num]=adc[3]*5/6-426;break;
1508   2          
1509   2          case 6:if(Switch_A==1)operation[num]=-426;
1510   2                  else if(Switch_A==2)operation[num]=0;
1511   2                  else operation[num]=426;break;
1512   2          case 7:if(Switch_B==1)operation[num]=-426;
1513   2                  else if(Switch_B==2)operation[num]=0;
1514   2                  else operation[num]=426;break;
1515   2          case 8:if(Switch_C==1)operation[num]=-426;
1516   2                  else if(Switch_C==2)operation[num]=0;
1517   2                  else operation[num]=426;break;
1518   2          case 9:if(Switch_D==1)operation[num]=-426;
1519   2                  else if(Switch_D==2)operation[num]=0;
1520   2                  else operation[num]=426;break;    
1521   2          case 10:operation[num]=PPM_DATA[0];break;
1522   2          case 11:operation[num]=PPM_DATA[1];break;
1523   2          case 12:operation[num]=PPM_DATA[2];break;
1524   2          case 13:operation[num]=PPM_DATA[3];break;
1525   2          case 14:operation[num]=PPM_DATA[4];break;
1526   2          case 15:operation[num]=PPM_DATA[5];break;
1527   2          case 16:operation[num]=PPM_DATA[6];break;
1528   2          case 17:operation[num]=PPM_DATA[7];break;
1529   2        
1530   2        }
1531   1      }
1532          
1533          void initial()       //硬件初始化
1534          {
1535   1        ADC_CONTR=0x80;    //ADC配置
1536   1        P1ASF=0xff;
1537   1        
1538   1        LEDA=0;
1539   1        P4SW=0x70;       //允许P4 IO
1540   1        P2M0=0x20;       //推挽点亮背光
1541   1        
1542   1        
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 26  

1543   1      
1544   1      
1545   1        TMOD=0x11;
1546   1        TCON=0x04;           
1547   1                      
1548   1        CCAPM0=0x49;       //PCA定时器初始化
1549   1        
1550   1        value0 += 3000;    //3ms
1551   1        CCAP0L = value0;
1552   1          CCAP0H = value0>> 8;
1553   1        value0 += 3000;    //3ms
1554   1        
1555   1        value1 += 20000;     //20ms
1556   1        CCAP1L = value1;
1557   1          CCAP1H = value1>> 8;  
1558   1          value1 += 3000;    //3ms
1559   1        
1560   1        IP=0x80;
1561   1        IPH=0x0c;      //优先级非常重要
1562   1        
1563   1        CCON=0x40;//打开PCA定时器
1564   1        IE=0x82;
1565   1        
1566   1      } 
1567            
1568          
1569          main()
1570          {
1571   1        int temp;u8 boot_time;
1572   1        
1573   1        delay_ms(200);
1574   1        initial();
1575   1        
1576   1        DATA_read1();//数据验证
1577   1        DATA_read2();
1578   1        LCD_init();
1579   1        LEDA=LCD_light;
1580   1      
1581   1        LCD_ON();
1582   1        //*****************串口******************//
1583   1        PCON &= 0x7F;   //??????
1584   1        SCON = 0x50;    //8???,?????
1585   1        AUXR |= 0x04;   //???????????Fosc,?1T
1586   1        BRT = 0xB8;   //?????????????波特率2400
1587   1        AUXR |= 0x01;   //??1?????????????????
1588   1        AUXR |= 0x10;   //??????????
1589   1          ES    = 1;                  //打开串口中断
1590   1        //****************************************//
1591   1        if(KEY==0)//强制恢复出厂
1592   1        {
1593   2          delay_ms(3000);
1594   2          if(KEY==0)
1595   2          {
1596   3            IAP_CONTR=0x82;   //擦除所有数据
1597   3            EEPROM_clean(0);
1598   3            EEPROM_clean(2);
1599   3            IAP_CONTR=0;
1600   3            word[0]=106,word[1]=107,word[2]=32,word[3]=136,word[4]=0,write(40,2);
1601   3            word[0]=138,word[1]=139,word[2]=140,word[3]=57,word[4]=0,write(40,4);
1602   3            while(1);
1603   3          } 
1604   2        }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 27  

1605   1        
1606   1        if(first)//首次开机
1607   1        {
1608   2          while(1)//设置
1609   2          {
1610   3            word[0]=130,word[1]=81,word[2]=131,word[3]=58,word[4]=132,word[5]=0,write(30,0);
1611   3            word[0]=141,word[1]=142,word[2]=18,word[3]=13,word[4]=0,write(0,2);
1612   3            word[0]=149,word[1]=150,word[2]=137,word[3]=109,word[4]=0,write(64,2);
1613   3            if(adc[4]>510)
1614   3            {
1615   4              send3(hzk[1],0,4);send2('1',12,4);send2('2',20,4);send2('L',28,4);send2('E',36,4);
1616   4              send3(hzk[2],0,6);send2('1',12,6);send2('2',20,6);send2('C',28,6);send2(' ',36,6);
1617   4              if(KEY==0)
1618   4              {
1619   5                Battery_1s=1;
1620   5                while(!KEY);break;
1621   5              }
1622   4              
1623   4            }
1624   3            else 
1625   3            {
1626   4              send3(hzk[2],0,4);send2('1',12,4);send2('2',20,4);send2('L',28,4);send2('E',36,4);
1627   4              send3(hzk[1],0,6);send2('1',12,6);send2('2',20,6);send2('C',28,6);send2(' ',36,6);
1628   4              if(KEY==0)
1629   4              {
1630   5                Battery_1s=0;
1631   5                while(!KEY);break;
1632   5              }
1633   4            }
1634   3            delay_ms(100);
1635   3      
1636   3          }
1637   2          
1638   2      
1639   2          if(hopping[0]>125)hopping[0]=(hopping[0]-5)/2;
1640   2          if(hopping[1]>125)hopping[1]=(hopping[1]-5)/2;
1641   2          if(hopping[2]>125)hopping[2]=(hopping[2]-5)/2;
1642   2          if(hopping[3]>125)hopping[3]=(hopping[3]-5)/2;
1643   2          if(hopping[4]>125)hopping[4]=(hopping[4]-5)/2;
1644   2          
1645   2          DATA_save1();
1646   2          
1647   2          word[0]=157,word[1]=132,word[2]=12,word[3]=13,word[4]=52,word[5]=53;word[6]=0,write(0,4);
1648   2          delay_ms(500);
1649   2          send3(hzk[1],0,6);delay_ms(300);
1650   2          send3(hzk[1],12,6);delay_ms(300);
1651   2          send3(hzk[1],24,6);delay_ms(300);
1652   2          send3(hzk[1],36,6);delay_ms(300);
1653   2          send3(hzk[1],48,6);delay_ms(300);
1654   2          send3(hzk[1],60,6);delay_ms(300);
1655   2      
1656   2          
1657   2        }
1658   1        else//开机安全油门
1659   1        {
1660   2          delay_ms(100);
1661   2          CH_value[2]=CH_calib(adc[4],CH3_offset);
1662   2          if(CH_value[2]>80)  
1663   2            {
1664   3              while(1)
1665   3              {
1666   4                photo2(bmp5,40,2,50,4);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 28  

1667   4              
1668   4                word[0]=147,word[1]=148,word[2]=149,word[3]=150,word[4]=151,
1669   4                word[5]=52,word[6]=153,word[7]=0,write(20,6); 
1670   4            
1671   4                delay_ms(100);
1672   4                if(KEY==0)break;
1673   4                CH_value[2]=CH_calib(adc[4],CH3_offset);
1674   4                if(CH_value[2]<80)break;
1675   4              }  
1676   3            } 
1677   2          
1678   2        }
1679   1        
1680   1        
1681   1        
1682   1        
1683   1        NRF_test();
1684   1        NRF_init();
1685   1        if(NRF_error)
1686   1        {
1687   2          photo2(screen2,0,0,128,8);
1688   2          if(NRF_error&0x01)location(39,5),send(133),location(106,5),send(133);
1689   2          if(NRF_error&0x02)location(83,5),send(133);
1690   2          if(NRF_error&0x04)location(29,5),send(133);
1691   2          if(NRF_error&0x08)location(64,5),send(133);
1692   2          if(NRF_error&0x10)location(49,5),send(133);
1693   2          delay_ms(2000);
1694   2        }
1695   1        else
1696   1        {
1697   2          
1698   2          photo2(screen3,0,0,128,8);
1699   2          if(boot_time<100)
1700   2          {
1701   3            delay_ms(500);
1702   3            photo2(bmp4,80,4,46,4);
1703   3            location(107,6);LCD(0);LCD(0x20);LCD(0xf0);LCD(0);
1704   3            location(107,7);LCD(0xc0);LCD(0xc8);LCD(0xcf);LCD(0xc8);
1705   3            delay_ms(500);
1706   3          }
1707   2          else if(boot_time<200)
1708   2          {
1709   3            delay_ms(1000);
1710   3            photo2(bmp4,80,4,46,4);
1711   3            location(107,6);LCD(0x20);LCD(0x10);LCD(0x10);LCD(0xe0);
1712   3            location(107,7);LCD(0xcc);LCD(0xca);LCD(0xc9);LCD(0xc8);
1713   3            delay_ms(1000);
1714   3          }
1715   2          else 
1716   2          {
1717   3            delay_ms(2000);
1718   3            photo2(bmp4,80,4,46,4);
1719   3            delay_ms(1500);
1720   3          }
1721   2      
1722   2        }
1723   1      
1724   1      //  device_connect();
1725   1      
1726   1        
1727   1      
1728   1      
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 29  

1729   1      
1730   1        if(PPM_OUT)
1731   1        {
1732   2          TMOD=0x11;
1733   2          EX1=0;ET1=1;
1734   2        }
1735   1        if(PPM_IN)
1736   1        {
1737   2          TMOD=0x91;
1738   2          EX1=1;ET1=0;
1739   2        }
1740   1      
1741   1        auto_max=auto_end*4.25+511;
1742   1        auto_min=auto_star*4.25+511;       
1743   1          
1744   1        
1745   1        TR1=1;
1746   1        TR0=1;
1747   1        delay_ms(50);
1748   1        CCAPM1=0x49;
1749   1      
1750   1      //photo(name1,87,3,36,2);
1751   1      
1752   1        
1753   1      //  photo(bmp2,0,0,128,8);
1754   1      //  while(1);
1755   1        
1756   1        
1757   1      
1758   1        while(1)  //主函数做刷新显示、菜单处理
1759   1        {
1760   2          
1761   2          if(flag_20ms)
1762   2          {
1763   3            flag_20ms=0,tt++;
1764   3      /*************************************************************/
1765   3      //按键检测  
1766   3            if(KEY)
1767   3            {
1768   4              if(KS)
1769   4              {
1770   5                KS=0;beep=1;
1771   5                if(menu)
1772   5                {
1773   6                  star=1,menu=0;
1774   6                  
1775   6                  
1776   6                  if(menu_2==19)
1777   6                  {
1778   7                    RC_check=0;
1779   7                  }
1780   6                  
1781   6                }
1782   5                else 
1783   5                {
1784   6                  star=1;menu=1,menu_1=0,menu_2=0;
1785   6                }
1786   5              }
1787   4            }
1788   3            else KS=1;
1789   3            
1790   3            if(K1)          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 30  

1791   3            {
1792   4              s1_press_time=0;
1793   4              s1_long_press=0;
1794   4              if(s1)           
1795   4              {            
1796   5                s1=0;       
1797   5                key1=1;
1798   5              } 
1799   4            }
1800   3            else 
1801   3            {
1802   4              s1=1;
1803   4              s1_press_time++;
1804   4              if(s1_press_time>50)
1805   4              {
1806   5                s1_press_time=0;s1=0;
1807   5                s1_long_press=1;
1808   5              }
1809   4            }         
1810   3        
1811   3            if(K2)          
1812   3            {
1813   4              s2_press_time=0;
1814   4              s2_long_press=0;
1815   4              if(s2)           
1816   4              {            
1817   5                s2=0;       
1818   5                key2=1;
1819   5              } 
1820   4            }
1821   3            else 
1822   3            {
1823   4              s2=1;
1824   4              s2_press_time++;
1825   4              if(s2_press_time>50)
1826   4              {
1827   5                s2_press_time=0;s2=0;
1828   5                s2_long_press=1;
1829   5              }
1830   4            }
1831   3            
1832   3            if(K3)          
1833   3            {
1834   4              s3_press_time=0;
1835   4              s3_long_press=0;
1836   4              if(s3)           
1837   4              {            
1838   5                s3=0;       
1839   5                key3=1;
1840   5              } 
1841   4            }
1842   3            else 
1843   3            {
1844   4              s3=1;
1845   4              s3_press_time++;
1846   4              if(s3_press_time>50)
1847   4              {
1848   5                s3_press_time=0;s3=0;
1849   5                s3_long_press=1;
1850   5              }
1851   4            }
1852   3            
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 31  

1853   3            if(K4)          
1854   3            {
1855   4              s4_press_time=0;
1856   4              s4_long_press=0;
1857   4              if(s4)           
1858   4              {            
1859   5                s4=0;       
1860   5                key4=1;
1861   5              } 
1862   4            }
1863   3            else 
1864   3            {
1865   4              s4=1;
1866   4              s4_press_time++;
1867   4              if(s4_press_time>50)
1868   4              {
1869   5                s4_press_time=0;s4=0;
1870   5                s4_long_press=1;
1871   5              }
1872   4            }
1873   3            
1874   3            if(K5)          
1875   3            {
1876   4              s5_press_time=0;
1877   4              s5_long_press=0;
1878   4              if(s5)           
1879   4              {            
1880   5                s5=0;       
1881   5                key5=1;
1882   5              } 
1883   4            }
1884   3            else 
1885   3            {
1886   4              s5=1;
1887   4              s5_press_time++;
1888   4              if(s5_press_time>50)
1889   4              {
1890   5                s5_press_time=0;s5=0;
1891   5                s5_long_press=1;
1892   5              }
1893   4            }
1894   3            
1895   3            if(K6)          
1896   3            {
1897   4              s6_press_time=0;
1898   4              s6_long_press=0;
1899   4              if(s6)           
1900   4              {            
1901   5                s6=0;       
1902   5                key6=1;
1903   5              } 
1904   4            }
1905   3            else 
1906   3            {
1907   4              s6=1;
1908   4              s6_press_time++;
1909   4              if(s6_press_time>50)
1910   4              {
1911   5                s6_press_time=0;s6=0;
1912   5                s6_long_press=1;
1913   5              }
1914   4            }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 32  

1915   3              
1916   3          
1917   3            
1918   3          }
1919   2          else
1920   2          {
1921   3            while(!flag_20ms);
1922   3          }
1923   2          
1924   2            
1925   2          if(tt==1)//按键处理
1926   2          {
1927   3            
1928   3            if(s1_long_press)
1929   3            {
1930   4              key_time=!key_time;
1931   4              if(key_time)key1=1;
1932   4            }
1933   3            if(s2_long_press)
1934   3            {
1935   4              key_time=!key_time;
1936   4              if(key_time)key2=1;
1937   4            }
1938   3                  
1939   3            if(menu==0)
1940   3            {
1941   4              if(s3_long_press)
1942   4              {
1943   5                key_time=!key_time;
1944   5                if(key_time)key3=1;
1945   5              }
1946   4              if(s4_long_press)
1947   4              {
1948   5                key_time=!key_time;
1949   5                if(key_time)key4=1;
1950   5              }   
1951   4            }
1952   3            
1953   3            if(s5_long_press)
1954   3            {
1955   4              key_time=!key_time;
1956   4              if(key_time)key5=1;
1957   4            }
1958   3            if(s6_long_press)
1959   3            {
1960   4              key_time=!key_time;
1961   4              if(key_time)key6=1;
1962   4            }
1963   3      
1964   3            if(key1)
1965   3            {
1966   4              key1=0;beep=1;
1967   4              if(menu)decrease=1;
1968   4              else 
1969   4              {
1970   5                if(CH_negative[3]==0)
1971   5                {
1972   6                  if(CH_middle[3]>-100)CH_middle[3]--,Data_change(2);
1973   6                }
1974   5                else
1975   5                {
1976   6                  if(CH_middle[3]<100)CH_middle[3]++,Data_change(2);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 33  

1977   6                }
1978   5                if(CH_middle[3]==0)beep=2;
1979   5                CH_middle_change=4,event1=1,t1=0;
1980   5              }
1981   4            }
1982   3            if(key2)
1983   3            {
1984   4              key2=0;beep=1;
1985   4              if(menu)increase=1;
1986   4              else 
1987   4              {
1988   5                if(CH_negative[3]==0)
1989   5                {
1990   6                  if(CH_middle[3]<100)CH_middle[3]++,Data_change(2);
1991   6                }
1992   5                else
1993   5                {
1994   6                  if(CH_middle[3]>-100)CH_middle[3]--,Data_change(2);
1995   6                }
1996   5                if(CH_middle[3]==0)beep=2;
1997   5                CH_middle_change=4,event1=1,t1=0;
1998   5              }
1999   4            }
2000   3            if(key3)
2001   3            {
2002   4              key3=0;beep=1;
2003   4              if(menu)
2004   4                left=1;
2005   4              else 
2006   4              {
2007   5                if(CH_negative[1]==0)
2008   5                {
2009   6                  if(CH_middle[1]>-100)CH_middle[1]--,Data_change(2);
2010   6                }
2011   5                else
2012   5                {
2013   6                  if(CH_middle[1]<100)CH_middle[1]++,Data_change(2);
2014   6                }
2015   5                if(CH_middle[1]==0)beep=2;
2016   5                CH_middle_change=2,event1=1,t1=0;
2017   5                
2018   5              }
2019   4            }
2020   3            if(key4)
2021   3            {
2022   4              key4=0;beep=1;
2023   4              if(menu)right=1;
2024   4              else 
2025   4              {
2026   5                if(CH_negative[1]==0)
2027   5                {
2028   6                  if(CH_middle[1]<100)CH_middle[1]++,Data_change(2);
2029   6                }
2030   5                else
2031   5                {
2032   6                  if(CH_middle[1]>-100)CH_middle[1]--,Data_change(2);
2033   6                }
2034   5                if(CH_middle[1]==0)beep=2;
2035   5                CH_middle_change=2,event1=1,t1=0;
2036   5                
2037   5              }
2038   4            }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 34  

2039   3            if(key5)
2040   3            {
2041   4              key5=0;beep=1;
2042   4              if(menu)down=1;
2043   4              else 
2044   4              {
2045   5                if(CH_negative[0]==0)
2046   5                {
2047   6                  if(CH_middle[0]>-100)CH_middle[0]--,Data_change(2);
2048   6                }
2049   5                else
2050   5                {
2051   6                  if(CH_middle[0]<100)CH_middle[0]++,Data_change(2);
2052   6                }
2053   5                if(CH_middle[0]==0)beep=2;
2054   5                CH_middle_change=1,event1=1,t1=0;
2055   5              }
2056   4            }
2057   3            if(key6)
2058   3            {
2059   4              key6=0;beep=1;
2060   4              if(menu)up=1;
2061   4              else 
2062   4              {
2063   5                if(CH_negative[0]==0)
2064   5                {
2065   6                  if(CH_middle[0]<100)CH_middle[0]++,Data_change(2);
2066   6                }
2067   5                else
2068   5                {
2069   6                  if(CH_middle[0]>-100)CH_middle[0]--,Data_change(2);
2070   6                }
2071   5                if(CH_middle[0]==0)beep=2;
2072   5                CH_middle_change=1,event1=1,t1=0;
2073   5              }
2074   4            }
2075   3      
2076   3          }
2077   2          else if(tt==2)
2078   2          {
2079   3            LCD_ON();
2080   3            if(menu)  //主菜单       
2081   3            {     
2082   4              if(star)
2083   4              {
2084   5                up=0,down=0,left=0,right=0,increase=0,decrease=0;
2085   5              }
2086   4              clean();
2087   4              if(menu_1)//一级菜单
2088   4              {
2089   5                if(menu_2)//二级菜单
2090   5                {
2091   6                  
2092   6                  
2093   6                  if(menu_2==1)//正反
2094   6                  {
2095   7                    line_2=move_cursor(line_2,7);
2096   7                    
2097   7                    WW[0][0]=94,WW[0][1]=95,WW[0][2]=81,WW[0][3]=0;
2098   7                    WW[1][0]=94,WW[1][1]=95,WW[1][2]=82,WW[1][3]=0;
2099   7                    WW[2][0]=94,WW[2][1]=95,WW[2][2]=83,WW[2][3]=0;
2100   7                    WW[3][0]=94,WW[3][1]=95,WW[3][2]=84,WW[3][3]=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 35  

2101   7                    WW[4][0]=94,WW[4][1]=95,WW[4][2]=85,WW[4][3]=0;
2102   7                    WW[5][0]=94,WW[5][1]=95,WW[5][2]=86,WW[5][3]=0;
2103   7                    WW[6][0]=94,WW[6][1]=95,WW[6][2]=87,WW[6][3]=0;
2104   7                    WW[7][0]=94,WW[7][1]=95,WW[7][2]=88,WW[7][3]=0;
2105   7                    display_menu(line_2,7);
2106   7                    
2107   7                    if(line_2<3)
2108   7                    {
2109   8                      if(CH_negative[0])send3(hzk[35],60,0);
2110   8                      else send3(hzk[34],60,0);
2111   8                      if(CH_negative[1])send3(hzk[35],60,2);
2112   8                      else send3(hzk[34],60,2);
2113   8                      if(CH_negative[2])send3(hzk[35],60,4);
2114   8                      else send3(hzk[34],60,4);
2115   8                      if(CH_negative[3])send3(hzk[35],60,6);
2116   8                      else send3(hzk[34],60,6);
2117   8                    }
2118   7                    else if(line_2==7)
2119   7                    {
2120   8                      if(CH_negative[4])send3(hzk[35],60,0);
2121   8                      else send3(hzk[34],60,0);
2122   8                      if(CH_negative[5])send3(hzk[35],60,2);
2123   8                      else send3(hzk[34],60,2);
2124   8                      if(CH_negative[6])send3(hzk[35],60,4);
2125   8                      else send3(hzk[34],60,4);
2126   8                      if(CH_negative[7])send3(hzk[35],60,6);
2127   8                      else send3(hzk[34],60,6);
2128   8                    }
2129   7                    else
2130   7                    {
2131   8                      if(CH_negative[line_2-2])send3(hzk[35],60,0);
2132   8                      else send3(hzk[34],60,0);
2133   8                      if(CH_negative[line_2-1])send3(hzk[35],60,2);
2134   8                      else send3(hzk[34],60,2);
2135   8                      if(CH_negative[line_2])send3(hzk[35],60,4);
2136   8                      else send3(hzk[34],60,4);
2137   8                      if(CH_negative[line_2+1])send3(hzk[35],60,6);
2138   8                      else send3(hzk[34],60,6);
2139   8                    }
2140   7                      
2141   7                      
2142   7                    if(increase|decrease)
2143   7                    {
2144   8                      increase=0;decrease=0;
2145   8                      if(CH_negative[line_2])
2146   8                      {
2147   9                        CH_negative[line_2]=0;Data_change(2);
2148   9                      }
2149   8                      else
2150   8                      {
2151   9                        CH_negative[line_2]=1;Data_change(2);
2152   9                      }
2153   8                      
2154   8                    }           
2155   7                    
2156   7                    
2157   7                  }
2158   6                  else if(menu_2==2)//负舵量
2159   6                  {
2160   7                    line_2=move_cursor(line_2,7);
2161   7                    
2162   7                    WW[0][0]=94,WW[0][1]=95,WW[0][2]=81,WW[0][3]=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 36  

2163   7                    WW[1][0]=94,WW[1][1]=95,WW[1][2]=82,WW[1][3]=0;
2164   7                    WW[2][0]=94,WW[2][1]=95,WW[2][2]=83,WW[2][3]=0;
2165   7                    WW[3][0]=94,WW[3][1]=95,WW[3][2]=84,WW[3][3]=0;
2166   7                    WW[4][0]=94,WW[4][1]=95,WW[4][2]=85,WW[4][3]=0;
2167   7                    WW[5][0]=94,WW[5][1]=95,WW[5][2]=86,WW[5][3]=0;
2168   7                    WW[6][0]=94,WW[6][1]=95,WW[6][2]=87,WW[6][3]=0;
2169   7                    WW[7][0]=94,WW[7][1]=95,WW[7][2]=88,WW[7][3]=0;
2170   7                    display_menu(line_2,7);
2171   7                    
2172   7                    if(increase)
2173   7                    {
2174   8                      increase=0;
2175   8                      if(CH_ratio1[line_2]<120)
2176   8                      {
2177   9                        CH_ratio1[line_2]++;Data_change(2);
2178   9                      }
2179   8                      
2180   8                    }
2181   7                    if(decrease)
2182   7                    {
2183   8                      decrease=0;
2184   8                      if(CH_ratio1[line_2]>0)
2185   8                      {
2186   9                        CH_ratio1[line_2]--;Data_change(2);
2187   9                      }
2188   8                      
2189   8                    }
2190   7                    
2191   7                    if(line_2<3)
2192   7                    {
2193   8                      write_num100(CH_ratio1[0],70,0,'%');
2194   8                      write_num100(CH_ratio1[1],70,2,'%');
2195   8                      write_num100(CH_ratio1[2],70,4,'%');
2196   8                      write_num100(CH_ratio1[3],70,6,'%');
2197   8                    }
2198   7                    else if(line_2==7)
2199   7                    {
2200   8                      write_num100(CH_ratio1[4],70,0,'%');
2201   8                      write_num100(CH_ratio1[5],70,2,'%');
2202   8                      write_num100(CH_ratio1[6],70,4,'%');
2203   8                      write_num100(CH_ratio1[7],70,6,'%');
2204   8                    }
2205   7                    else
2206   7                    {
2207   8                      write_num100(CH_ratio1[line_2-2],70,0,'%');
2208   8                      write_num100(CH_ratio1[line_2-1],70,2,'%');
2209   8                      write_num100(CH_ratio1[line_2],70,4,'%');
2210   8                      write_num100(CH_ratio1[line_2+1],70,6,'%');
2211   8                    }
2212   7                    send2('-',62,0);
2213   7                    send2('-',62,2);
2214   7                    send2('-',62,4);
2215   7                    send2('-',62,6);
2216   7                    
2217   7                  }
2218   6                  else if(menu_2==3)//输入映射
2219   6                  {
2220   7                    line_2=move_cursor(line_2,7);
2221   7                    
2222   7                    WW[0][0]=94,WW[0][1]=95,WW[0][2]=81,WW[0][3]=0;
2223   7                    WW[1][0]=94,WW[1][1]=95,WW[1][2]=82,WW[1][3]=0;
2224   7                    WW[2][0]=94,WW[2][1]=95,WW[2][2]=83,WW[2][3]=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 37  

2225   7                    WW[3][0]=94,WW[3][1]=95,WW[3][2]=84,WW[3][3]=0;
2226   7                    WW[4][0]=94,WW[4][1]=95,WW[4][2]=85,WW[4][3]=0;
2227   7                    WW[5][0]=94,WW[5][1]=95,WW[5][2]=86,WW[5][3]=0;
2228   7                    WW[6][0]=94,WW[6][1]=95,WW[6][2]=87,WW[6][3]=0;
2229   7                    WW[7][0]=94,WW[7][1]=95,WW[7][2]=88,WW[7][3]=0;
2230   7                    display_menu(line_2,7);
2231   7                    
2232   7                    send3(hzk[4],60,0);
2233   7                    send3(hzk[4],60,2);
2234   7                    send3(hzk[4],60,4);
2235   7                    send3(hzk[4],60,6);
2236   7                    
2237   7                    if(increase)
2238   7                    {
2239   8                      increase=0;
2240   8                      if(IN_mapping[line_2]<17)IN_mapping[line_2]++,Data_change(2);
2241   8                    }
2242   7                    if(decrease)
2243   7                    {
2244   8                      decrease=0;
2245   8                      if(IN_mapping[line_2]>0)IN_mapping[line_2]--,Data_change(2);
2246   8                    }
2247   7                    
2248   7                    if(line_2<3)
2249   7                    {
2250   8                      display_mapping(IN_mapping[0],72,0);
2251   8                      display_mapping(IN_mapping[1],72,2);
2252   8                      display_mapping(IN_mapping[2],72,4);
2253   8                      display_mapping(IN_mapping[3],72,6);
2254   8                    }
2255   7                    else if(line_2<4)
2256   7                    {
2257   8                      display_mapping(IN_mapping[1],72,0);
2258   8                      display_mapping(IN_mapping[2],72,2);
2259   8                      display_mapping(IN_mapping[3],72,4);
2260   8                      display_mapping(IN_mapping[4],72,6);
2261   8                    }
2262   7                    else if(line_2<5)
2263   7                    {
2264   8                      display_mapping(IN_mapping[2],72,0);
2265   8                      display_mapping(IN_mapping[3],72,2);
2266   8                      display_mapping(IN_mapping[4],72,4);
2267   8                      display_mapping(IN_mapping[5],72,6);
2268   8                    }
2269   7                    else if(line_2<6)
2270   7                    {
2271   8                      display_mapping(IN_mapping[3],72,0);
2272   8                      display_mapping(IN_mapping[4],72,2);
2273   8                      display_mapping(IN_mapping[5],72,4);
2274   8                      display_mapping(IN_mapping[6],72,6);
2275   8                    }
2276   7                    else 
2277   7                    {
2278   8                      display_mapping(IN_mapping[4],72,0);
2279   8                      display_mapping(IN_mapping[5],72,2);
2280   8                      display_mapping(IN_mapping[6],72,4);
2281   8                      display_mapping(IN_mapping[7],72,6);
2282   8                    }
2283   7                    
2284   7                    
2285   7                    
2286   7                    
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 38  

2287   7                  }
2288   6                  else if(menu_2==4)//微调
2289   6                  {
2290   7                    line_2=move_cursor(line_2,7);
2291   7                    
2292   7                    WW[0][0]=94,WW[0][1]=95,WW[0][2]=81,WW[0][3]=0;
2293   7                    WW[1][0]=94,WW[1][1]=95,WW[1][2]=82,WW[1][3]=0;
2294   7                    WW[2][0]=94,WW[2][1]=95,WW[2][2]=83,WW[2][3]=0;
2295   7                    WW[3][0]=94,WW[3][1]=95,WW[3][2]=84,WW[3][3]=0;
2296   7                    WW[4][0]=94,WW[4][1]=95,WW[4][2]=85,WW[4][3]=0;
2297   7                    WW[5][0]=94,WW[5][1]=95,WW[5][2]=86,WW[5][3]=0;
2298   7                    WW[6][0]=94,WW[6][1]=95,WW[6][2]=87,WW[6][3]=0;
2299   7                    WW[7][0]=94,WW[7][1]=95,WW[7][2]=88,WW[7][3]=0;
2300   7                    display_menu(line_2,7);
2301   7                    
2302   7                    if(increase)
2303   7                    {
2304   8                      increase=0;
2305   8                      if(CH_middle[line_2]<100)
2306   8                      {
2307   9                        CH_middle[line_2]++;Data_change(2);
2308   9                      }
2309   8                      
2310   8                    }
2311   7                    if(decrease)
2312   7                    {
2313   8                      decrease=0;
2314   8                      if(CH_middle[line_2]>-100)
2315   8                      {
2316   9                        CH_middle[line_2]--;Data_change(2);
2317   9                      }
2318   8                      
2319   8                    }
2320   7                    
2321   7                    if(line_2<3)
2322   7                    {
2323   8                      write_num100(CH_middle[0],70,0,'-');
2324   8                      write_num100(CH_middle[1],70,2,'-');
2325   8                      write_num100(CH_middle[2],70,4,'-');
2326   8                      write_num100(CH_middle[3],70,6,'-');
2327   8                    }
2328   7                    else if(line_2==7)
2329   7                    {
2330   8                      write_num100(CH_middle[4],70,0,'-');
2331   8                      write_num100(CH_middle[5],70,2,'-');
2332   8                      write_num100(CH_middle[6],70,4,'-');
2333   8                      write_num100(CH_middle[7],70,6,'-');
2334   8                    }
2335   7                    else
2336   7                    {
2337   8                      write_num100(CH_middle[line_2-2],70,0,'-');
2338   8                      write_num100(CH_middle[line_2-1],70,2,'-');
2339   8                      write_num100(CH_middle[line_2],70,4,'-');
2340   8                      write_num100(CH_middle[line_2+1],70,6,'-');
2341   8                    }
2342   7          
2343   7                  }
2344   6                  else if(menu_2==5)//混控
2345   6                  {
2346   7                    line_2=move_cursor(line_2,2);
2347   7                    
2348   7                    WW[0][0]=91,WW[0][1]=79,WW[0][2]=92,WW[0][3]=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 39  

2349   7                    WW[1][0]=93,WW[1][1]=79,WW[1][2]=92,WW[1][3]=0;
2350   7                    WW[2][0]=106,WW[2][1]=107,WW[2][2]=108,WW[2][3]=109;WW[2][4]=0;
2351   7                    display_menu(line_2,2);
2352   7                    
2353   7                    if(mixer_name==1)
2354   7                    {
2355   8                      word[0]=110;word[1]=111;word[2]=112;word[3]=0;write(64,4);
2356   8                    }
2357   7                    else if(mixer_name==2)
2358   7                    {
2359   8                      word[0]=113;word[1]=114;word[2]=0;write(64,4);
2360   8                    }
2361   7                    else if(mixer_name==3)
2362   7                    {
2363   8                      send2('V',64,4);send3(hzk[115],72,4);
2364   8                    }
2365   7                    else if(mixer_name==4)
2366   7                    {
2367   8                      word[0]=116;word[1]=117;word[2]=112;word[3]=0;write(64,4);
2368   8                    }
2369   7                    
2370   7                    
2371   7                    
2372   7                    if(line_2<1)
2373   7                    {
2374   8                      
2375   8                      if(increase)
2376   8                      {
2377   9                        increase=0;
2378   9                        if(mixer_name==1)
2379   9                        {
2380  10                          if(mixer1_same<7)mixer1_same++,Data_change(2);
2381  10                        }
2382   9                        else if(mixer_name==2)
2383   9                        {
2384  10                          if(mixer2_same<7)mixer2_same++,Data_change(2);
2385  10                        }
2386   9                        else if(mixer_name==3)
2387   9                        {
2388  10                          if(mixer3_same<7)mixer3_same++,Data_change(2);
2389  10                        }
2390   9                        else if(mixer_name==4)
2391   9                        {
2392  10                          if(mixer4_same<7)mixer4_same++,Data_change(2);
2393  10                        }
2394   9                      }
2395   8                      if(decrease)
2396   8                      {
2397   9                        decrease=0;
2398   9                        if(mixer_name==1)
2399   9                        {
2400  10                          if(mixer1_same>0)mixer1_same--,Data_change(2);
2401  10                        }
2402   9                        else if(mixer_name==2)
2403   9                        {
2404  10                          if(mixer2_same>0)mixer2_same--,Data_change(2);
2405  10                        }
2406   9                        else if(mixer_name==3)
2407   9                        {
2408  10                          if(mixer3_same>0)mixer3_same--,Data_change(2);
2409  10                        }
2410   9                        else if(mixer_name==4)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 40  

2411   9                        {
2412  10                          if(mixer4_same>0)mixer4_same--,Data_change(2);
2413  10                        }
2414   9                      }
2415   8                      
2416   8                    }
2417   7                    else if(line_2<2)
2418   7                    {
2419   8                    if(increase)
2420   8                      {
2421   9                        increase=0;
2422   9                        if(mixer_name==1)
2423   9                        {
2424  10                          if(mixer1_contrary<7)mixer1_contrary++,Data_change(2);
2425  10                        }
2426   9                        else if(mixer_name==2)
2427   9                        {
2428  10                          if(mixer2_contrary<7)mixer2_contrary++,Data_change(2);
2429  10                        }
2430   9                        else if(mixer_name==3)
2431   9                        {
2432  10                          if(mixer3_contrary<7)mixer3_contrary++,Data_change(2);
2433  10                        }
2434   9                        else if(mixer_name==4)
2435   9                        {
2436  10                          if(mixer4_contrary<7)mixer4_contrary++,Data_change(2);
2437  10                        }
2438   9                      }
2439   8                      if(decrease)
2440   8                      {
2441   9                        decrease=0;
2442   9                        if(mixer_name==1)
2443   9                        {
2444  10                          if(mixer1_contrary>0)mixer1_contrary--,Data_change(2);
2445  10                        }
2446   9                        else if(mixer_name==2)
2447   9                        {
2448  10                          if(mixer2_contrary>0)mixer2_contrary--,Data_change(2);
2449  10                        }
2450   9                        else if(mixer_name==3)
2451   9                        {
2452  10                          if(mixer3_contrary>0)mixer3_contrary--,Data_change(2);
2453  10                        }
2454   9                        else if(mixer_name==4)
2455   9                        {
2456  10                          if(mixer4_contrary>0)mixer4_contrary--,Data_change(2);
2457  10                        }
2458   9                      }                         
2459   8                      
2460   8                    }
2461   7                    else if(line_2<3)
2462   7                    {
2463   8                    if(right)
2464   8                      {
2465   9                        right=0;
2466   9                        if(mixer_name==1)
2467   9                        {
2468  10                          mixer1_same=1;mixer1_contrary=0;Data_change(2);
2469  10                        }
2470   9                        else if(mixer_name==2)
2471   9                        {
2472  10                          mixer2_same=2;mixer2_contrary=3;Data_change(2);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 41  

2473  10                        }
2474   9                        else if(mixer_name==3)
2475   9                        {
2476  10                          mixer3_same=0;mixer3_contrary=3;Data_change(2);
2477  10                        }
2478   9                        else if(mixer_name==4)
2479   9                        {
2480  10                          mixer4_same=5;mixer4_contrary=0;Data_change(2);
2481  10                        }
2482   9                      }
2483   8                    } 
2484   7                      
2485   7                        
2486   7                    
2487   7                    if(mixer_name==1)
2488   7                    {
2489   8                      send2(mixer1_same+49,60,0);
2490   8                      send2(mixer1_contrary+49,60,2);
2491   8                    }
2492   7                    else if(mixer_name==2)
2493   7                    {
2494   8                      send2(mixer2_same+49,60,0);
2495   8                      send2(mixer2_contrary+49,60,2);
2496   8                    }
2497   7                    else if(mixer_name==3)
2498   7                    {
2499   8                      send2(mixer3_same+49,60,0);
2500   8                      send2(mixer3_contrary+49,60,2);
2501   8                    }
2502   7                    else if(mixer_name==4)
2503   7                    {
2504   8                      send2(mixer4_same+49,60,0);
2505   8                      send2(mixer4_contrary+49,60,2);
2506   8                    }
2507   7                    
2508   7                  }
2509   6                  else if(menu_2==6)//失控舵量
2510   6                  {
2511   7                    line_2=move_cursor(line_2,7);
2512   7                    
2513   7                    WW[0][0]=29,WW[0][1]=30,WW[0][2]=81,WW[0][3]=0;
2514   7                    WW[1][0]=29,WW[1][1]=30,WW[1][2]=82,WW[1][3]=0;
2515   7                    WW[2][0]=29,WW[2][1]=30,WW[2][2]=83,WW[2][3]=0;
2516   7                    WW[3][0]=29,WW[3][1]=30,WW[3][2]=84,WW[3][3]=0;
2517   7                    WW[4][0]=29,WW[4][1]=30,WW[4][2]=85,WW[4][3]=0;
2518   7                    WW[5][0]=29,WW[5][1]=30,WW[5][2]=86,WW[5][3]=0;
2519   7                    WW[6][0]=29,WW[6][1]=30,WW[6][2]=87,WW[6][3]=0;
2520   7                    WW[7][0]=29,WW[7][1]=30,WW[7][2]=88,WW[7][3]=0;
2521   7                    display_menu(line_2,7);
2522   7                    
2523   7                    if(increase)
2524   7                    {
2525   8                      increase=0;
2526   8                      if(out_control[line_2]<120)
2527   8                      {
2528   9                        out_control[line_2]++;Data_change(1);
2529   9                        out_control_data[0]=(int)out_control[0]*4.25+511;
2530   9                        out_control_data[1]=(int)out_control[1]*4.25+511;
2531   9                        out_control_data[2]=(int)out_control[2]*4.25+511;
2532   9                        out_control_data[3]=(int)out_control[3]*4.25+511;
2533   9                        out_control_data[4]=(int)out_control[4]*4.25+511;
2534   9                        out_control_data[5]=(int)out_control[5]*4.25+511;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 42  

2535   9                        out_control_data[6]=(int)out_control[6]*4.25+511;
2536   9                        out_control_data[7]=(int)out_control[7]*4.25+511;
2537   9                        tx_order[1]=out_control_data[0]>>2;
2538   9                        tx_order[2]=out_control_data[0]<<6;
2539   9                        tx_order[2]+=out_control_data[1]>>4;
2540   9                        tx_order[3]=out_control_data[1]<<4;
2541   9                        tx_order[3]+=out_control_data[2]>>6;
2542   9                        tx_order[4]=out_control_data[2]<<2;
2543   9                        tx_order[4]+=out_control_data[3]>>8;
2544   9                        tx_order[5]=out_control_data[3];
2545   9      
2546   9                        tx_order[6]=out_control_data[4]>>2;
2547   9                        tx_order[7]=out_control_data[4]<<6;
2548   9                        tx_order[7]+=out_control_data[5]>>4;
2549   9                        tx_order[8]=out_control_data[5]<<4;
2550   9                        tx_order[8]+=out_control_data[6]>>6;
2551   9                        tx_order[9]=out_control_data[6]<<2;
2552   9                        tx_order[9]+=out_control_data[7]>>8;
2553   9                        tx_order[10]=out_control_data[7];
2554   9                        
2555   9                        
2556   9                        NRF_config_change=1;
2557   9                      }
2558   8                      
2559   8                    }
2560   7                    if(decrease)
2561   7                    {
2562   8                      decrease=0;
2563   8                      if(out_control[line_2]>-120)
2564   8                      {
2565   9                        out_control[line_2]--;Data_change(1);
2566   9                        out_control_data[0]=(int)out_control[0]*4.25+511;
2567   9                        out_control_data[1]=(int)out_control[1]*4.25+511;
2568   9                        out_control_data[2]=(int)out_control[2]*4.25+511;
2569   9                        out_control_data[3]=(int)out_control[3]*4.25+511;
2570   9                        out_control_data[4]=(int)out_control[4]*4.25+511;
2571   9                        out_control_data[5]=(int)out_control[5]*4.25+511;
2572   9                        out_control_data[6]=(int)out_control[6]*4.25+511;
2573   9                        out_control_data[7]=(int)out_control[7]*4.25+511;
2574   9                        tx_order[1]=out_control_data[0]>>2;
2575   9                        tx_order[2]=out_control_data[0]<<6;
2576   9                        tx_order[2]+=out_control_data[1]>>4;
2577   9                        tx_order[3]=out_control_data[1]<<4;
2578   9                        tx_order[3]+=out_control_data[2]>>6;
2579   9                        tx_order[4]=out_control_data[2]<<2;
2580   9                        tx_order[4]+=out_control_data[3]>>8;
2581   9                        tx_order[5]=out_control_data[3];
2582   9      
2583   9                        tx_order[6]=out_control_data[4]>>2;
2584   9                        tx_order[7]=out_control_data[4]<<6;
2585   9                        tx_order[7]+=out_control_data[5]>>4;
2586   9                        tx_order[8]=out_control_data[5]<<4;
2587   9                        tx_order[8]+=out_control_data[6]>>6;
2588   9                        tx_order[9]=out_control_data[6]<<2;
2589   9                        tx_order[9]+=out_control_data[7]>>8;
2590   9                        tx_order[10]=out_control_data[7];
2591   9                        
2592   9                        
2593   9                        NRF_config_change=1;
2594   9                      }
2595   8                      
2596   8                    }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 43  

2597   7                    
2598   7                    if(line_2<3)
2599   7                    {
2600   8                      write_num100(out_control[0],70,0,'/');
2601   8                      write_num100(out_control[1],70,2,'/');
2602   8                      write_num100(out_control[2],70,4,'/');
2603   8                      write_num100(out_control[3],70,6,'/');
2604   8                    }
2605   7                    else if(line_2==7)
2606   7                    {
2607   8                      write_num100(out_control[4],70,0,'/');
2608   8                      write_num100(out_control[5],70,2,'/');
2609   8                      write_num100(out_control[6],70,4,'/');
2610   8                      write_num100(out_control[7],70,6,'/');
2611   8                    }
2612   7                    else
2613   7                    {
2614   8                      write_num100(out_control[line_2-2],70,0,'/');
2615   8                      write_num100(out_control[line_2-1],70,2,'/');
2616   8                      write_num100(out_control[line_2],70,4,'/');
2617   8                      write_num100(out_control[line_2+1],70,6,'/');
2618   8                    }
2619   7                  }
2620   6                  else if(menu_2==7)//通信密码
2621   6                  {
2622   7                    line_2=move_cursor(line_2,4);
2623   7                    
2624   7                    WW[0][0]=48,WW[0][1]=49,WW[0][2]=81,WW[0][3]=0;
2625   7                    WW[1][0]=48,WW[1][1]=49,WW[1][2]=82,WW[1][3]=0;
2626   7                    WW[2][0]=48,WW[2][1]=49,WW[2][2]=83,WW[2][3]=0;
2627   7                    WW[3][0]=48,WW[3][1]=49,WW[3][2]=84,WW[3][3]=0;
2628   7                    WW[4][0]=48,WW[4][1]=49,WW[4][2]=85,WW[4][3]=0;
2629   7      
2630   7                    display_menu(line_2,4);
2631   7                    if(line_2<4)
2632   7                    {
2633   8                      send2_hex((u8)(address[0]>>4),60,0);send2_hex((u8)(address[0]&0x0f),68,0);
2634   8                      send2_hex((u8)(address[1]>>4),60,2);send2_hex((u8)(address[1]&0x0f),68,2);
2635   8                      send2_hex((u8)(address[2]>>4),60,4);send2_hex((u8)(address[2]&0x0f),68,4);
2636   8                      send2_hex((u8)(address[3]>>4),60,6);send2_hex((u8)(address[3]&0x0f),68,6);
2637   8                    }
2638   7                    else 
2639   7                    {
2640   8                      send2_hex((u8)(address[1]>>4),60,0);send2_hex((u8)(address[1]&0x0f),68,0);
2641   8                      send2_hex((u8)(address[2]>>4),60,2);send2_hex((u8)(address[2]&0x0f),68,2);
2642   8                      send2_hex((u8)(address[3]>>4),60,4);send2_hex((u8)(address[3]&0x0f),68,4);
2643   8                      send2_hex((u8)(address[4]>>4),60,6);send2_hex((u8)(address[4]&0x0f),68,6);
2644   8      
2645   8                    }
2646   7                    
2647   7                    if(increase)
2648   7                    {
2649   8                      increase=0;
2650   8                      address[line_2]++;Data_change(1),NRF_change=1;
2651   8                    }
2652   7                    if(decrease)
2653   7                    {
2654   8                      decrease=0;
2655   8                      address[line_2]--;Data_change(1),NRF_change=1;
2656   8                    }
2657   7                    
2658   7                  }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 44  

2659   6                  else if(menu_2==8)//跳频
2660   6                  {
2661   7                    line_2=move_cursor(line_2,4);
2662   7                    
2663   7                    WW[0][0]=53,WW[0][1]=51,WW[0][2]=81,WW[0][3]=0;
2664   7                    WW[1][0]=53,WW[1][1]=51,WW[1][2]=82,WW[1][3]=0;
2665   7                    WW[2][0]=53,WW[2][1]=51,WW[2][2]=83,WW[2][3]=0;
2666   7                    WW[3][0]=53,WW[3][1]=51,WW[3][2]=84,WW[3][3]=0;
2667   7                    WW[4][0]=53,WW[4][1]=51,WW[4][2]=85,WW[4][3]=0;
2668   7                    display_menu(line_2,4);
2669   7                    
2670   7                    if(line_2<3)
2671   7                    {
2672   8                      write_num100(hopping[0],60,0,0);
2673   8                      write_num100(hopping[1],60,2,0);
2674   8                      write_num100(hopping[2],60,4,0);
2675   8                      write_num100(hopping[3],60,6,0);
2676   8                    }
2677   7                    else 
2678   7                    {
2679   8                      write_num100(hopping[1],60,0,0);
2680   8                      write_num100(hopping[2],60,2,0);
2681   8                      write_num100(hopping[3],60,4,0);
2682   8                      write_num100(hopping[4],60,6,0);
2683   8                    }
2684   7                    
2685   7                    if(increase)
2686   7                    {
2687   8                      increase=0;
2688   8                      if(hopping[line_2]<125)hopping[line_2]++;Data_change(1);
2689   8                    }
2690   7                    if(decrease)
2691   7                    {
2692   8                      decrease=0;
2693   8                      if(hopping[line_2]>0)hopping[line_2]--;Data_change(1);
2694   8                    }
2695   7                    
2696   7                  }
2697   6                  else if(menu_2==9)//NRF发射映射
2698   6                  {
2699   7                    line_2=move_cursor(line_2,7);
2700   7                    
2701   7                    WW[0][0]=29,WW[0][1]=30,WW[0][2]=81,WW[0][3]=0;
2702   7                    WW[1][0]=29,WW[1][1]=30,WW[1][2]=82,WW[1][3]=0;
2703   7                    WW[2][0]=29,WW[2][1]=30,WW[2][2]=83,WW[2][3]=0;
2704   7                    WW[3][0]=29,WW[3][1]=30,WW[3][2]=84,WW[3][3]=0;
2705   7                    WW[4][0]=29,WW[4][1]=30,WW[4][2]=85,WW[4][3]=0;
2706   7                    WW[5][0]=29,WW[5][1]=30,WW[5][2]=86,WW[5][3]=0;
2707   7                    WW[6][0]=29,WW[6][1]=30,WW[6][2]=87,WW[6][3]=0;
2708   7                    WW[7][0]=29,WW[7][1]=30,WW[7][2]=88,WW[7][3]=0;
2709   7                    display_menu(line_2,7);
2710   7                    
2711   7                    word[0]=4;word[1]=94;word[2]=95;word[3]=0;write(60,0);
2712   7                    write(60,2);write(60,4);write(60,6);
2713   7                    
2714   7                    if(increase)
2715   7                    {
2716   8                      increase=0;
2717   8                      if(NRF_mapping[line_2]<7)NRF_mapping[line_2]++;Data_change(1);
2718   8                    }
2719   7                    if(decrease)
2720   7                    {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 45  

2721   8                      decrease=0;
2722   8                      if(NRF_mapping[line_2]>0)NRF_mapping[line_2]--;Data_change(1);
2723   8                    }
2724   7                    
2725   7                    if(line_2<3)
2726   7                    {
2727   8                      send2(NRF_mapping[0]+49,96,0);
2728   8                      send2(NRF_mapping[1]+49,96,2);
2729   8                      send2(NRF_mapping[2]+49,96,4);
2730   8                      send2(NRF_mapping[3]+49,96,6);
2731   8                    }
2732   7                    else if(line_2<4)
2733   7                    {
2734   8                      send2(NRF_mapping[1]+49,96,0);
2735   8                      send2(NRF_mapping[2]+49,96,2);
2736   8                      send2(NRF_mapping[3]+49,96,4);
2737   8                      send2(NRF_mapping[4]+49,96,6);
2738   8                    }
2739   7                    else if(line_2<5)
2740   7                    {
2741   8                      send2(NRF_mapping[2]+49,96,0);
2742   8                      send2(NRF_mapping[3]+49,96,2);
2743   8                      send2(NRF_mapping[4]+49,96,4);
2744   8                      send2(NRF_mapping[5]+49,96,6);
2745   8                    }
2746   7                    else if(line_2<6)
2747   7                    {
2748   8                      send2(NRF_mapping[3]+49,96,0);
2749   8                      send2(NRF_mapping[4]+49,96,2);
2750   8                      send2(NRF_mapping[5]+49,96,4);
2751   8                      send2(NRF_mapping[6]+49,96,6);
2752   8                    }
2753   7                    else 
2754   7                    {
2755   8                      send2(NRF_mapping[4]+49,96,0);
2756   8                      send2(NRF_mapping[5]+49,96,2);
2757   8                      send2(NRF_mapping[6]+49,96,4);
2758   8                      send2(NRF_mapping[7]+49,96,6);
2759   8                    }
2760   7      
2761   7                  }
2762   6                  else if(menu_2==10)//版本信息
2763   6                  {
2764   7                    photo(bmp0,4,0,120,3);
2765   7                    send3(hzk[73],70,6);send3(hzk[74],82,6);
2766   7                    send2('V',94,6);send2('3',102,6);send2('.',110,6);send2('1',118,6);
2767   7                    
2768   7                  }
2769   6                  else if(menu_2==11)//对频
2770   6                  {
2771   7                    word[0]=121;word[1]=122;word[2]=43;word[3]=44;word[4]=123;word[5]=0;write(24,0);
2772   7                    send2('.',84,0);send2('.',92,0);send2('.',100,0);
2773   7                    send2('1',56,2),send2('5',64,2);
2774   7                                  
2775   7                    device_connect();
2776   7      
2777   7                    if(not_get)
2778   7                    {
2779   8                      word[0]=16;word[1]=47;word[2]=126;word[3]=127;word[4]=0;write(40,6);
2780   8                      menu_2=0;
2781   8                    }
2782   7                    else
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 46  

2783   7                    {
2784   8                      word[0]=16;word[1]=47;word[2]=124;word[3]=125;word[4]=0;write(40,6);
2785   8                      menu_2=0;menu=0;star=1;
2786   8                    } 
2787   7                    delay_ms(500);
2788   7      
2789   7                  }
2790   6                  else if(menu_2==12)//恢复出厂
2791   6                  {
2792   7                    word[0]=106,word[1]=107,word[2]=32,word[3]=136,word[4]=0,write(40,2);
2793   7                    word[0]=137,word[1]=109,word[2]=0,write(52,4);send2('?',80,4);
2794   7                    if(right)
2795   7                    {               
2796   8                      IAP_CONTR=0x82;   //擦除所有数据
2797   8                      EEPROM_clean(0);
2798   8                      EEPROM_clean(2);
2799   8                      IAP_CONTR=0;
2800   8                      send3(hzk[3],80,4);
2801   8                      word[0]=138,word[1]=139,word[2]=140,word[3]=57,word[4]=0,write(40,6);
2802   8                      TR0=0,TR1=0,CCON=0;while(1);
2803   8                    }
2804   7                  }
2805   6                  else if(menu_2==13)//正舵量
2806   6                  {
2807   7                    line_2=move_cursor(line_2,7);
2808   7                    
2809   7                    WW[0][0]=94,WW[0][1]=95,WW[0][2]=81,WW[0][3]=0;
2810   7                    WW[1][0]=94,WW[1][1]=95,WW[1][2]=82,WW[1][3]=0;
2811   7                    WW[2][0]=94,WW[2][1]=95,WW[2][2]=83,WW[2][3]=0;
2812   7                    WW[3][0]=94,WW[3][1]=95,WW[3][2]=84,WW[3][3]=0;
2813   7                    WW[4][0]=94,WW[4][1]=95,WW[4][2]=85,WW[4][3]=0;
2814   7                    WW[5][0]=94,WW[5][1]=95,WW[5][2]=86,WW[5][3]=0;
2815   7                    WW[6][0]=94,WW[6][1]=95,WW[6][2]=87,WW[6][3]=0;
2816   7                    WW[7][0]=94,WW[7][1]=95,WW[7][2]=88,WW[7][3]=0;
2817   7                    display_menu(line_2,7);
2818   7                    
2819   7                    if(increase)
2820   7                    {
2821   8                      increase=0;
2822   8                      if(CH_ratio2[line_2]<120)
2823   8                      {
2824   9                        CH_ratio2[line_2]++;Data_change(2);
2825   9                      }
2826   8                      
2827   8                    }
2828   7                    if(decrease)
2829   7                    {
2830   8                      decrease=0;
2831   8                      if(CH_ratio2[line_2]>0)
2832   8                      {
2833   9                        CH_ratio2[line_2]--;Data_change(2);
2834   9                      }
2835   8                      
2836   8                    }
2837   7                    
2838   7                    if(line_2<3)
2839   7                    {
2840   8                      write_num100(CH_ratio2[0],70,0,'%');
2841   8                      write_num100(CH_ratio2[1],70,2,'%');
2842   8                      write_num100(CH_ratio2[2],70,4,'%');
2843   8                      write_num100(CH_ratio2[3],70,6,'%');
2844   8                    }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 47  

2845   7                    else if(line_2==7)
2846   7                    {
2847   8                      write_num100(CH_ratio2[4],70,0,'%');
2848   8                      write_num100(CH_ratio2[5],70,2,'%');
2849   8                      write_num100(CH_ratio2[6],70,4,'%');
2850   8                      write_num100(CH_ratio2[7],70,6,'%');
2851   8                    }
2852   7                    else
2853   7                    {
2854   8                      write_num100(CH_ratio2[line_2-2],70,0,'%');
2855   8                      write_num100(CH_ratio2[line_2-1],70,2,'%');
2856   8                      write_num100(CH_ratio2[line_2],70,4,'%');
2857   8                      write_num100(CH_ratio2[line_2+1],70,6,'%');
2858   8                    }
2859   7                    send2('+',62,0);
2860   7                    send2('+',62,2);
2861   7                    send2('+',62,4);
2862   7                    send2('+',62,6);
2863   7                  }
2864   6                  else if(menu_2==14)//偏好设置
2865   6                  {
2866   7                    line_2=move_cursor(line_2,2);
2867   7                    
2868   7                    WW[0][0]=62,WW[0][1]=63,WW[0][2]=64,WW[0][3]=13,WW[0][4]=0;
2869   7                    WW[1][0]=60,WW[1][1]=61,WW[1][2]=58,WW[1][3]=59,WW[1][4]=0;
2870   7                    WW[2][0]=56,WW[2][1]=57,WW[2][2]=58,WW[2][3]=59,WW[2][4]=0;
2871   7                    
2872   7        //            WW[3][0]=69,WW[3][1]=70,WW[3][2]=71,WW[3][3]=72,WW[3][4]=0;
2873   7                    
2874   7                    
2875   7                    
2876   7                    display_menu(line_2,2);
2877   7                    
2878   7                    write_num100(LCD_vop,60,0,0);
2879   7                    if(LCD_light)send3(hzk[58],68,2);
2880   7                    else send3(hzk[59],68,2);
2881   7                    if(Sound_switch)send3(hzk[58],68,4);
2882   7                    else send3(hzk[59],68,4);
2883   7                    
2884   7                    if(line_2<1)
2885   7                    {
2886   8                      if(increase)
2887   8                      {
2888   9                        increase=0;
2889   9                        if(LCD_vop<60)
2890   9                        {
2891  10                          LCD_vop++;Data_change(1);
2892  10                          
2893  10                          RS=0;
2894  10                          LCD(0x81);
2895  10                          LCD(LCD_vop);
2896  10                          RS=1;
2897  10                        }
2898   9                      }
2899   8                      
2900   8                      if(decrease)
2901   8                      {
2902   9                        decrease=0;
2903   9                        if(LCD_vop>10)
2904   9                        {
2905  10                          LCD_vop--;Data_change(1);
2906  10                          
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 48  

2907  10                          RS=0;
2908  10                          LCD(0x81);
2909  10                          LCD(LCD_vop);
2910  10                          RS=1;
2911  10                        }
2912   9                      }
2913   8                      
2914   8                      
2915   8                    }
2916   7                    else if(line_2<2)
2917   7                    {
2918   8                      if(increase|decrease)
2919   8                      {
2920   9                        increase=0;decrease=0;Data_change(1);
2921   9      
2922   9                          LCD_light=!LCD_light;LEDA=LCD_light;
2923   9                      
2924   9      
2925   9                      } 
2926   8                        
2927   8                        
2928   8                      
2929   8                    }
2930   7                    else if(line_2<3)
2931   7                    {
2932   8                      if(increase|decrease)
2933   8                      {
2934   9                        increase=0;decrease=0;
2935   9                        
2936   9                          Sound_switch=!Sound_switch;Data_change(1);
2937   9                        
2938   9                      } 
2939   8                        
2940   8                        
2941   8                      
2942   8                    }
2943   7                    
2944   7      //              else if(line_2<5)
2945   7      //              {
2946   7      //            
2947   7      //              }
2948   7                  
2949   7                  }
2950   6                  else if(menu_2==15)//PPM输出
2951   6                  {
2952   7                    line_2=move_cursor(line_2,7);
2953   7                    
2954   7                    WW[0][0]=31,WW[0][1]=32,WW[0][2]=81,WW[0][3]=0;
2955   7                    WW[1][0]=31,WW[1][1]=32,WW[1][2]=82,WW[1][3]=0;
2956   7                    WW[2][0]=31,WW[2][1]=32,WW[2][2]=83,WW[2][3]=0;
2957   7                    WW[3][0]=31,WW[3][1]=32,WW[3][2]=84,WW[3][3]=0;
2958   7                    WW[4][0]=31,WW[4][1]=32,WW[4][2]=85,WW[4][3]=0;
2959   7                    WW[5][0]=31,WW[5][1]=32,WW[5][2]=86,WW[5][3]=0;
2960   7                    WW[6][0]=31,WW[6][1]=32,WW[6][2]=87,WW[6][3]=0;
2961   7                    WW[7][0]=31,WW[7][1]=32,WW[7][2]=88,WW[7][3]=0;
2962   7                    display_menu(line_2,7);
2963   7                    
2964   7                    word[0]=4;word[1]=94;word[2]=95;word[3]=0;write(60,0);
2965   7                    write(60,2);write(60,4);write(60,6);
2966   7                    
2967   7                    if(increase)
2968   7                    {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 49  

2969   8                      increase=0;
2970   8                      if(PPM_mapping[line_2]<7)PPM_mapping[line_2]++;Data_change(1);
2971   8                    }
2972   7                    if(decrease)
2973   7                    {
2974   8                      decrease=0;
2975   8                      if(PPM_mapping[line_2]>0)PPM_mapping[line_2]--;Data_change(1);
2976   8                    }
2977   7                    
2978   7                    if(line_2<3)
2979   7                    {
2980   8                      send2(PPM_mapping[0]+49,96,0);
2981   8                      send2(PPM_mapping[1]+49,96,2);
2982   8                      send2(PPM_mapping[2]+49,96,4);
2983   8                      send2(PPM_mapping[3]+49,96,6);
2984   8                    }
2985   7                    else if(line_2<4)
2986   7                    {
2987   8                      send2(PPM_mapping[1]+49,96,0);
2988   8                      send2(PPM_mapping[2]+49,96,2);
2989   8                      send2(PPM_mapping[3]+49,96,4);
2990   8                      send2(PPM_mapping[4]+49,96,6);
2991   8                    }
2992   7                    else if(line_2<5)
2993   7                    {
2994   8                      send2(PPM_mapping[2]+49,96,0);
2995   8                      send2(PPM_mapping[3]+49,96,2);
2996   8                      send2(PPM_mapping[4]+49,96,4);
2997   8                      send2(PPM_mapping[5]+49,96,6);
2998   8                    }
2999   7                    else if(line_2<6)
3000   7                    {
3001   8                      send2(PPM_mapping[3]+49,96,0);
3002   8                      send2(PPM_mapping[4]+49,96,2);
3003   8                      send2(PPM_mapping[5]+49,96,4);
3004   8                      send2(PPM_mapping[6]+49,96,6);
3005   8                    }
3006   7                    else 
3007   7                    {
3008   8                      send2(PPM_mapping[4]+49,96,0);
3009   8                      send2(PPM_mapping[5]+49,96,2);
3010   8                      send2(PPM_mapping[6]+49,96,4);
3011   8                      send2(PPM_mapping[7]+49,96,6);
3012   8                    }
3013   7                  }
3014   6                  else if(menu_2==16)//IR输出
3015   6                  {
3016   7      /*              line_2=move_cursor(line_2,3);
3017   7                    
3018   7                    WW[0][0]=31,WW[0][1]=32,WW[0][2]=81,WW[0][3]=0;
3019   7                    WW[1][0]=31,WW[1][1]=32,WW[1][2]=82,WW[1][3]=0;
3020   7                    WW[2][0]=31,WW[2][1]=32,WW[2][2]=83,WW[2][3]=0;
3021   7                    WW[3][0]=31,WW[3][1]=32,WW[3][2]=84,WW[3][3]=0;
3022   7                    
3023   7                    display_menu(line_2,3);
3024   7                    */
3025   7                
3026   7                  }
3027   6                  else if(menu_2==17)//原始数据
3028   6                  {
3029   7                    
3030   7                    location(0,0);send('A');send('D');send('1');send(':');write_num1000(adc[7]);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 50  

3031   7      
3032   7                    
3033   7                    location(0,1);send('A');send('D');send('2');send(':');write_num1000(adc[6]);
3034   7      
3035   7                    
3036   7                    location(0,2);send('A');send('D');send('3');send(':');write_num1000(adc[4]);
3037   7      
3038   7                    
3039   7                    location(0,3);send('A');send('D');send('4');send(':');write_num1000(adc[5]);
3040   7      
3041   7                    
3042   7                    location(0,4);send('A');send('D');send('5');send(':');write_num1000(adc[3]);
3043   7      
3044   7                    
3045   7                    location(0,5);send('A');send('D');send('6');send(':');write_num1000(adc[2]);
3046   7      
3047   7                    
3048   7                    location(0,6);send('A');send('D');send('7');send(':');write_num1000(adc[1]);
3049   7      
3050   7                    
3051   7                    location(0,7);send('A');send('D');send('8');send(':');write_num1000(adc[0]);
3052   7      
3053   7                    
3054   7                                  
3055   7                  }
3056   6                  else if(menu_2==18)//无线协议
3057   6                  {
3058   7                    line_2=move_cursor(line_2,2);
3059   7                    
3060   7                    WW[0][0]=65,WW[0][1]=79,WW[0][2]=50,WW[0][3]=53,WW[0][4]=51,WW[0][5]=0;
3061   7                    WW[1][0]=66,WW[1][1]=67,WW[1][2]=65,WW[1][3]=53,WW[1][4]=51,WW[1][5]=0;
3062   7                    WW[2][0]=66,WW[2][1]=67,WW[2][2]=50,WW[2][3]=53,WW[2][4]=51,WW[2][5]=0;
3063   7                    
3064   7      //              WW[3][0]=69,WW[3][1]=70,WW[3][2]=71,WW[3][3]=72,WW[3][4]=0,WW[3][5]=0;
3065   7                    
3066   7                    display_menu(line_2,2);
3067   7                    
3068   7                    if(right)
3069   7                    {
3070   8                      right=0;
3071   8                      TX_protocol=line_2+1;Data_change(1);
3072   8                    }
3073   7                    
3074   7                    if(TX_protocol==1)send3(hzk[3],80,0);
3075   7                    if(TX_protocol==2)send3(hzk[3],80,2);
3076   7                    if(TX_protocol==3)send3(hzk[3],80,4);
3077   7                  }
3078   6                  else if(menu_2==19)//全频扫描
3079   6                  {
3080   7                    
3081   7                    word[0]=76;word[1]=53;word[2]=77;word[3]=78;word[4]=0;write(0,0);
3082   7                    location(54,0);send('2');send('4');send('0');send('0');send('-');
3083   7                    send('2');send('5');send('2');send('5');send('M');send('h');send('z');
3084   7                    
3085   7                    location(0,2);LCD(0xff);
3086   7                    location(0,4);LCD(0xff);
3087   7                    location(0,6);LCD(0xff);
3088   7                    location(127,2);LCD(0xff);
3089   7                    location(127,4);LCD(0xff);
3090   7                    location(127,6);LCD(0xff);
3091   7                    
3092   7                    location(63,3);LCD(0x3f);LCD(0x3f);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 51  

3093   7                    location(63,5);LCD(0x3f);LCD(0x3f);
3094   7                    location(63,7);LCD(0x3f);LCD(0x3f);
3095   7                    location(31,3);LCD(0x0f);
3096   7                    location(31,5);LCD(0x0f);
3097   7                    location(31,7);LCD(0x0f);
3098   7                    location(95,3);LCD(0x0f);
3099   7                    location(95,5);LCD(0x0f);
3100   7                    location(95,7);LCD(0x0f);
3101   7                    location(0,3);send('0');
3102   7                    location(116,3);send('4');send('1');
3103   7                    location(0,5);send('4');send('2');
3104   7                    location(116,5);send('8');send('3');
3105   7                          location(0,7);send('8');send('4');
3106   7                    location(110,7);send('1');send('2');send('5');
3107   7                  
3108   7                    
3109   7                    location(1,2);
3110   7                    for(temp=0;temp<42;temp++)
3111   7                    {
3112   8                      
3113   8                      if(CD_data[temp])LCD(0x81),LCD(0x81),LCD(0x81);
3114   8                      else LCD(0xbd),LCD(0xbd),LCD(0xbd);
3115   8                      
3116   8                    }
3117   7                    location(1,4);
3118   7                    for(temp=42;temp<84;temp++)
3119   7                    {
3120   8                      
3121   8                      if(CD_data[temp])LCD(0x81),LCD(0x81),LCD(0x81);
3122   8                      else LCD(0xbd),LCD(0xbd),LCD(0xbd);
3123   8                      
3124   8                    } 
3125   7                    location(1,6);
3126   7                    for(temp=84;temp<126;temp++)
3127   7                    {
3128   8                      
3129   8                      if(CD_data[temp])LCD(0x81),LCD(0x81),LCD(0x81);
3130   8                      else LCD(0xbd),LCD(0xbd),LCD(0xbd);
3131   8                      
3132   8                    }
3133   7                    
3134   7                    if(left)left=0,menu_2=0,RC_check=0;
3135   7                  }
3136   6                  else if(menu_2==20)//摇杆校准
3137   6                  {
3138   7                    
3139   7                    
3140   7                    if(CH1_max<adc[6])CH1_max=adc[6];    //获取最大值
3141   7                    if(CH2_max<adc[7])CH2_max=adc[7];
3142   7                    if(CH3_max<adc[4])CH3_max=adc[4];
3143   7                    if(CH4_max<adc[5])CH4_max=adc[5];
3144   7                    
3145   7                    if(CH1_min>adc[6])CH1_min=adc[6];    //获取最小值
3146   7                    if(CH2_min>adc[7])CH2_min=adc[7];
3147   7                    if(CH3_min>adc[4])CH3_min=adc[4];
3148   7                    if(CH4_min>adc[5])CH4_min=adc[5];
3149   7      
3150   7                    location(0,0);              //显示数值
3151   7                    send('C');send('H');send('1');send(' ');send('<');write_num1000(CH1_min);
3152   7                    send(' ');send('-');send(' ');write_num1000(CH1_max);send('>');
3153   7                    location(0,1);
3154   7                    send('C');send('H');send('2');send(' ');send('<');write_num1000(CH2_min);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 52  

3155   7                    send(' ');send('-');send(' ');write_num1000(CH2_max);send('>');
3156   7                    location(0,2);
3157   7                    send('C');send('H');send('3');send(' ');send('<');write_num1000(CH3_min);
3158   7                    send(' ');send('-');send(' ');write_num1000(CH3_max);send('>');
3159   7                    location(0,3);
3160   7                    send('C');send('H');send('4');send(' ');send('<');write_num1000(CH4_min);
3161   7                    send(' ');send('-');send(' ');write_num1000(CH4_max);send('>');
3162   7      
3163   7                    if(right)
3164   7                    {
3165   8                      right=0;
3166   8                      if(calibration_action)
3167   8                      {
3168   9                        calibration_ok=1;
3169   9                      }
3170   8                      else
3171   8                      {
3172   9                        calibration_action=1;
3173   9                      }
3174   8                    }
3175   7                    
3176   7                    if(calibration_action)
3177   7                    {
3178   8                      if(left)
3179   8                      {
3180   9                        left=0;
3181   9                        calibration_action=0;calibration_ok=0;
3182   9                      } 
3183   8                      
3184   8                      send3(hzk[137],60,6);send3(hzk[109],72,6);
3185   8                      if(calibration_ok)
3186   8                      {
3187   9                        send3(hzk[3],84,6);
3188   9                        ROM_time++;
3189   9                        if(ROM_time>4)
3190   9                        {
3191  10                          ROM_time=0;
3192  10                          
3193  10                          if(512-CH1_min<CH1_max-512)CH1_offset=(512-CH1_min)/10;//获取最小偏差
3194  10                          else CH1_offset=(CH1_max-512)/10;
3195  10                          if(512-CH2_min<CH2_max-512)CH2_offset=(512-CH2_min)/10;
3196  10                          else CH2_offset=(CH2_max-512)/10;
3197  10                          if(512-CH3_min<CH3_max-512)CH3_offset=(512-CH3_min)/10;
3198  10                          else CH3_offset=(CH3_max-512)/10;
3199  10                          if(512-CH4_min<CH4_max-512)CH4_offset=(512-CH4_min)/10;
3200  10                          else CH4_offset=(CH4_max-512)/10;
3201  10                          
3202  10                          calibration_action=0;calibration_ok=0;Data_system=1,ROM_enable=1; 
3203  10                        }
3204   9                        
3205   9                      }
3206   8                      else send2('?',84,6);
3207   8                    }
3208   7                      
3209   7                    
3210   7                                          
3211   7                    
3212   7                    
3213   7                
3214   7      
3215   7                  }
3216   6                  else if(menu_2==21)//PPM输入显示
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 53  

3217   6                  {
3218   7                    location(0,0);send('I');send('N');send('1');
3219   7                    location(0,1);send('I');send('N');send('2');
3220   7                    location(0,2);send('I');send('N');send('3');
3221   7                    location(0,3);send('I');send('N');send('4');
3222   7                    location(0,4);send('I');send('N');send('5');
3223   7                    location(0,5);send('I');send('N');send('6');
3224   7                    location(0,6);send('I');send('N');send('7');
3225   7                    location(0,7);send('I');send('N');send('8');
3226   7                    
3227   7                    location(20,0);LCD(0x3e);LCD(0x41);
3228   7                    location(20,1);LCD(0x3e);LCD(0x41);
3229   7                    location(20,2);LCD(0x3e);LCD(0x41);
3230   7                    location(20,3);LCD(0x3e);LCD(0x41);
3231   7                    location(20,4);LCD(0x3e);LCD(0x41);
3232   7                    location(20,5);LCD(0x3e);LCD(0x41);
3233   7                    location(20,6);LCD(0x3e);LCD(0x41);
3234   7                    location(20,7);LCD(0x3e);LCD(0x41);
3235   7                    
3236   7                    location(124,0);LCD(0x41);LCD(0x3e);
3237   7                    location(124,1);LCD(0x41);LCD(0x3e);
3238   7                    location(124,2);LCD(0x41);LCD(0x3e);
3239   7                    location(124,3);LCD(0x41);LCD(0x3e);
3240   7                    location(124,4);LCD(0x41);LCD(0x3e);
3241   7                    location(124,5);LCD(0x41);LCD(0x3e);
3242   7                    location(124,6);LCD(0x41);LCD(0x3e);
3243   7                    location(124,7);LCD(0x41);LCD(0x3e);
3244   7                    
3245   7                    location(22,0);
3246   7                    for(temp=0;temp<102;temp++)
3247   7                    {
3248   8                      if(temp>PPM_DATA[0]/10)LCD(0x41);
3249   8                      else LCD(0x5d);
3250   8                    }
3251   7                    location(22,1);
3252   7                    for(temp=0;temp<102;temp++)
3253   7                    {
3254   8                      if(temp>PPM_DATA[1]/10)LCD(0x41);
3255   8                      else LCD(0x5d);
3256   8                    }
3257   7                    location(22,2);
3258   7                    for(temp=0;temp<102;temp++)
3259   7                    {
3260   8                      if(temp>PPM_DATA[2]/10)LCD(0x41);
3261   8                      else LCD(0x5d);
3262   8                    }
3263   7                    location(22,3);
3264   7                    for(temp=0;temp<102;temp++)
3265   7                    {
3266   8                      if(temp>PPM_DATA[3]/10)LCD(0x41);
3267   8                      else LCD(0x5d);
3268   8                    }
3269   7                    location(22,4);
3270   7                    for(temp=0;temp<102;temp++)
3271   7                    {
3272   8                      if(temp>PPM_DATA[4]/10)LCD(0x41);
3273   8                      else LCD(0x5d);
3274   8                    }
3275   7                    location(22,5);
3276   7                    for(temp=0;temp<102;temp++)
3277   7                    {
3278   8                      if(temp>PPM_DATA[5]/10)LCD(0x41);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 54  

3279   8                      else LCD(0x5d);
3280   8                    }
3281   7                    location(22,6);
3282   7                    for(temp=0;temp<102;temp++)
3283   7                    {
3284   8                      if(temp>PPM_DATA[6]/10)LCD(0x41);
3285   8                      else LCD(0x5d);
3286   8                    }
3287   7                    location(22,7);
3288   7                    for(temp=0;temp<102;temp++)
3289   7                    {
3290   8                      if(temp>PPM_DATA[7]/10)LCD(0x41);
3291   8                      else LCD(0x5d);
3292   8                    }
3293   7                  }
3294   6                  else if(menu_2==22)//舵量监视
3295   6                  {
3296   7                    location(0,0);send('C');send('H');send('1');
3297   7                    location(0,1);send('C');send('H');send('2');
3298   7                    location(0,2);send('C');send('H');send('3');
3299   7                    location(0,3);send('C');send('H');send('4');
3300   7                    location(0,4);send('C');send('H');send('5');
3301   7                    location(0,5);send('C');send('H');send('6');
3302   7                    location(0,6);send('C');send('H');send('7');
3303   7                    location(0,7);send('C');send('H');send('8');
3304   7                    
3305   7                    location(20,0);LCD(0x3e);LCD(0x41);
3306   7                    location(20,1);LCD(0x3e);LCD(0x41);
3307   7                    location(20,2);LCD(0x3e);LCD(0x41);
3308   7                    location(20,3);LCD(0x3e);LCD(0x41);
3309   7                    location(20,4);LCD(0x3e);LCD(0x41);
3310   7                    location(20,5);LCD(0x3e);LCD(0x41);
3311   7                    location(20,6);LCD(0x3e);LCD(0x41);
3312   7                    location(20,7);LCD(0x3e);LCD(0x41);
3313   7                    
3314   7                    location(124,0);LCD(0x41);LCD(0x3e);
3315   7                    location(124,1);LCD(0x41);LCD(0x3e);
3316   7                    location(124,2);LCD(0x41);LCD(0x3e);
3317   7                    location(124,3);LCD(0x41);LCD(0x3e);
3318   7                    location(124,4);LCD(0x41);LCD(0x3e);
3319   7                    location(124,5);LCD(0x41);LCD(0x3e);
3320   7                    location(124,6);LCD(0x41);LCD(0x3e);
3321   7                    location(124,7);LCD(0x41);LCD(0x3e);
3322   7                    
3323   7                    location(22,0);
3324   7                    for(temp=0;temp<102;temp++)
3325   7                    {
3326   8                      if(temp>operation[0]/10)LCD(0x41);
3327   8                      else LCD(0x5d);
3328   8                    }
3329   7                    location(22,1);
3330   7                    for(temp=0;temp<102;temp++)
3331   7                    {
3332   8                      if(temp>operation[1]/10)LCD(0x41);
3333   8                      else LCD(0x5d);
3334   8                    }
3335   7                    location(22,2);
3336   7                    for(temp=0;temp<102;temp++)
3337   7                    {
3338   8                      if(temp>operation[2]/10)LCD(0x41);
3339   8                      else LCD(0x5d);
3340   8                    }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 55  

3341   7                    location(22,3);
3342   7                    for(temp=0;temp<102;temp++)
3343   7                    {
3344   8                      if(temp>operation[3]/10)LCD(0x41);
3345   8                      else LCD(0x5d);
3346   8                    }
3347   7                    location(22,4);
3348   7                    for(temp=0;temp<102;temp++)
3349   7                    {
3350   8                      if(temp>operation[4]/10)LCD(0x41);
3351   8                      else LCD(0x5d);
3352   8                    }
3353   7                    location(22,5);
3354   7                    for(temp=0;temp<102;temp++)
3355   7                    {
3356   8                      if(temp>operation[5]/10)LCD(0x41);
3357   8                      else LCD(0x5d);
3358   8                    }
3359   7                    location(22,6);
3360   7                    for(temp=0;temp<102;temp++)
3361   7                    {
3362   8                      if(temp>operation[6]/10)LCD(0x41);
3363   8                      else LCD(0x5d);
3364   8                    }
3365   7                    location(22,7);
3366   7                    for(temp=0;temp<102;temp++)
3367   7                    {
3368   8                      if(temp>operation[7]/10)LCD(0x41);
3369   8                      else LCD(0x5d);
3370   8                    }
3371   7                  }
3372   6                  else if(menu_2==23)//自动扫描
3373   6                  {
3374   7                    line_2=move_cursor(line_2,2);
3375   7                    
3376   7                    WW[0][0]=172,WW[0][1]=51,WW[0][2]=0;
3377   7                    WW[1][0]=173,WW[1][1]=51,WW[1][2]=0;
3378   7                    WW[2][0]=114,WW[2][1]=103,WW[2][2]=0;
3379   7                    display_menu(line_2,2);
3380   7                    
3381   7                    if(line_2<1)
3382   7                    {
3383   8                      if(increase)
3384   8                      {
3385   9                        increase=0;
3386   9                        if(auto_star<120)auto_star++,Data_change(1);
3387   9                        auto_min=auto_star*4.25+511;
3388   9                      }
3389   8                      if(decrease)
3390   8                      {
3391   9                        decrease=0;
3392   9                        if(auto_star>-120)auto_star--,Data_change(1);
3393   9                        auto_min=auto_star*4.25+511;
3394   9                      }
3395   8                    }
3396   7                    else if(line_2<2)
3397   7                    {
3398   8                      if(increase)
3399   8                      {
3400   9                        increase=0;
3401   9                        if(auto_end<120)auto_end++,Data_change(1);
3402   9                        auto_max=auto_end*4.25+511;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 56  

3403   9        
3404   9                      }
3405   8                      if(decrease)
3406   8                      {
3407   9                        decrease=0;
3408   9                        if(auto_end>-120)auto_end--,Data_change(1);
3409   9                        auto_max=auto_end*4.25+511;
3410   9                      }
3411   8                    }
3412   7                    else if(line_2<3)
3413   7                    {
3414   8                      if(increase)
3415   8                      {
3416   9                        increase=0;
3417   9                        if(auto_speed<100)auto_speed++,Data_change(1);
3418   9                      }
3419   8                      if(decrease)
3420   8                      {
3421   9                        decrease=0;
3422   9                        if(auto_speed>0)auto_speed--,Data_change(1);
3423   9                      }
3424   8                    }
3425   7                    write_num100(auto_star,66,0,'/');
3426   7                    write_num100(auto_end,66,2,'/');
3427   7                    write_num100(auto_speed,66,4,0);
3428   7                    
3429   7                    
3430   7                  }
3431   6                  else if(menu_2==24)//电压设置
3432   6                  {
3433   7                    line_2=move_cursor(line_2,3);
3434   7                    
3435   7                    WW[0][0]=175,WW[0][1]=70,WW[0][2]=0;
3436   7                    WW[1][0]=71,WW[1][1]=72,WW[1][2]=0;
3437   7                    WW[2][0]=174,WW[2][1]=70,WW[2][2]=0;              
3438   7                    WW[3][0]=39,WW[3][1]=40,WW[3][2]=0;
3439   7                  
3440   7                    display_menu(line_2,3);
3441   7                    
3442   7                    write_num100(battery_voltage/10,60,0,'.');send2('V',92,0);
3443   7                    if(Battery_1s==1)
3444   7                    {
3445   8                      write_num100(VLD1,60,2,'.');send2('V',92,2);
3446   8                    }
3447   7                    else if(Battery_1s==0)
3448   7                    {
3449   8                      write_num100(VLD2,60,2,'.');send2('V',92,2);
3450   8                    }
3451   7                    
3452   7                    
3453   7                    
3454   7                    if(line_2<1)
3455   7                    {
3456   8                      
3457   8                    }
3458   7                    else if(line_2<2)
3459   7                    {
3460   8      
3461   8                      if(increase)
3462   8                      {
3463   9                        increase=0;
3464   9                        if(Battery_1s==1)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 57  

3465   9                        {
3466  10                          if(VLD1<40)VLD1++;Data_change(1);
3467  10                        }
3468   9                        else if(Battery_1s==0)
3469   9                        {
3470  10                          if(VLD2<120)VLD2++;Data_change(1);
3471  10                        }
3472   9                      }
3473   8                      
3474   8                      if(decrease)
3475   8                      {
3476   9                        decrease=0;
3477   9                        if(Battery_1s==1)
3478   9                        {
3479  10                          if(VLD1>33)VLD1--;Data_change(1);
3480  10                        }
3481   9                        else if(Battery_1s==0)
3482   9                        {
3483  10                          if(VLD2>66)VLD2--;Data_change(1);
3484  10                        }
3485   9                      }
3486   8                      
3487   8                      
3488   8                        
3489   8                      
3490   8                    }
3491   7                    else if(line_2<3)
3492   7                    {
3493   8                        
3494   8                      
3495   8                    }
3496   7                    else if(line_2<4)
3497   7                    {
3498   8                      if(increase)
3499   8                      {
3500   9                        increase=0;
3501   9      
3502   9                      }
3503   8      
3504   8                        
3505   8                    }
3506   7                  }
3507   6                  else if(menu_2==25)//
3508   6                  {
3509   7                    
3510   7                  }
3511   6                  else if(menu_2==26)//
3512   6                  {
3513   7                    
3514   7                  }
3515   6                  
3516   6                  if(left)left=0,menu_2=0;
3517   6                  increase=0;decrease=0;right=0;
3518   6                }
3519   5                else 
3520   5                {
3521   6      
3522   6                  if(menu_1==1)//工作模式
3523   6                  {
3524   7                    line_1=move_cursor(line_1,2);
3525   7                    
3526   7                    WW[0][0]=10,WW[0][1]=11,WW[0][2]=29,WW[0][3]=30,WW[0][4]=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 58  

3527   7                    WW[1][0]=2,WW[1][1]=2,WW[1][2]=31,WW[1][3]=32,WW[1][4]=0;
3528   7                    WW[2][0]=2,WW[2][1]=2,WW[2][2]=31,WW[2][3]=33,WW[2][4]=0;
3529   7                    
3530   7                    display_menu(line_1,2);
3531   7                    send2('P',12,4);send2('P',20,4);send2('M',28,4);
3532   7                    send2('P',12,2);send2('P',20,2);send2('M',28,2);
3533   7                    
3534   7                    if(line_1<1)//无线
3535   7                    {               
3536   8                      if(right)
3537   8                      {
3538   9                        right=0;
3539   9                        if(RC_TX)
3540   9                        {
3541  10                          RC_TX=0;Data_change(1);
3542  10                        }
3543   9                        else
3544   9                        {
3545  10                          IR_TX=0,RC_TX=1;Data_change(1);
3546  10                          
3547  10                        }
3548   9                      }
3549   8                    }
3550   7                    else if(line_1<2)//PPM
3551   7                    {
3552   8                      if(right)
3553   8                      {
3554   9                        right=0;
3555   9                        if(PPM_OUT)
3556   9                        {
3557  10                          PPM_OUT=0;Data_change(1);
3558  10                          ET1=0;
3559  10                        }
3560   9                        else
3561   9                        {
3562  10                          PPM_OUT=1,PPM_IN=0;config_change=1;Data_change(1);
3563  10                          EX1=0;ET1=1;TMOD=0x11;
3564  10                        }
3565   9                      }
3566   8                       
3567   8                    }
3568   7                    else 
3569   7                    {
3570   8                      if(right)
3571   8                      {
3572   9                        right=0;
3573   9                        if(PPM_IN)
3574   9                        {
3575  10                          PPM_IN=0;EX1=0;Data_change(1);
3576  10                        }
3577   9                        else
3578   9                        {
3579  10                          PPM_IN=1,PPM_OUT=0;config_change=1;Data_change(1);
3580  10                          TMOD=0x91;
3581  10                          EX1=1;ET1=0;
3582  10                      //    P3M0=0x60;       
3583  10                          
3584  10                        }
3585   9                      }
3586   8                      
3587   8                    }
3588   7                    if(RC_TX)send3(hzk[3],62,0);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 59  

3589   7                    if(PPM_IN)send3(hzk[3],62,4);
3590   7                    if(PPM_OUT)send3(hzk[3],62,2);
3591   7                  }
3592   6                  else if(menu_1==2)//快捷功能
3593   6                  {
3594   7                    line_1=move_cursor(line_1,5);
3595   7                    if(line_2<1)
3596   7                    {
3597   8      
3598   8                      if(right)right=0,menu_2=1;
3599   8                    }
3600   7                    else if(line_2<2)
3601   7                    {
3602   8      
3603   8                      if(right)right=0,menu_2=1;
3604   8                    }
3605   7                    else if(line_2<3)
3606   7                    {
3607   8      
3608   8                      if(right)right=0,menu_2=1;
3609   8                    }
3610   7                    else if(line_2<4)
3611   7                    {
3612   8      
3613   8                      if(right)right=0,menu_2=1;
3614   8                    }
3615   7                    else if(line_2<5)
3616   7                    {
3617   8      
3618   8                      if(right)right=0,menu_2=1;
3619   8                    }
3620   7                    else if(line_2<6)
3621   7                    {
3622   8      
3623   8                      if(right)right=0,menu_2=1;
3624   8                    }
3625   7                    
3626   7                  }
3627   6                  else if(menu_1==3)//通道设置
3628   6                  {
3629   7                    line_1=move_cursor(line_1,5);
3630   7                    
3631   7                    WW[0][0]=34,WW[0][1]=35,WW[0][2]=0;
3632   7                    WW[1][0]=39,WW[1][1]=40,WW[1][2]=0;
3633   7                    WW[2][0]=34,WW[2][1]=36,WW[2][2]=37,WW[2][3]=0;
3634   7                    WW[3][0]=134,WW[3][1]=36,WW[3][2]=37,WW[3][3]=0;
3635   7                    WW[4][0]=31,WW[4][1]=33,WW[4][2]=38,WW[4][3]=30,WW[4][4]=0;
3636   7                    WW[5][0]=143,WW[5][1]=144,WW[5][2]=118,WW[5][3]=11,WW[5][4]=0;
3637   7                    display_menu(line_1,5);
3638   7                    
3639   7                    
3640   7                    if(line_1<1)
3641   7                    {
3642   8                      if(right)right=0,menu_2=1,line_2=0;
3643   8                    }
3644   7                    else if(line_1<2)
3645   7                    {
3646   8                      if(right)right=0,menu_2=4,line_2=0;
3647   8                    }
3648   7                    else if(line_1<3)
3649   7                    {
3650   8                      if(right)right=0,menu_2=13,line_2=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 60  

3651   8                    }
3652   7                    else if(line_1<4)
3653   7                    {
3654   8                      if(right)right=0,menu_2=2,line_2=0;
3655   8                    }
3656   7                    else if(line_1<5)
3657   7                    {
3658   8                      if(right)right=0,menu_2=3,line_2=0;
3659   8                    }
3660   7                    else 
3661   7                    {
3662   8                      if(right)right=0,menu_2=0,line_2=0;
3663   8                    }
3664   7                  }
3665   6                  else if(menu_1==4)//高级混控
3666   6                  {
3667   7                    line_1=move_cursor(line_1,3);
3668   7                    
3669   7                    WW[0][0]=21,WW[0][1]=22,WW[0][2]=80,WW[0][3]=81,WW[0][4]=0;
3670   7                    WW[1][0]=21,WW[1][1]=22,WW[1][2]=80,WW[1][3]=82,WW[1][4]=0;
3671   7                    WW[2][0]=21,WW[2][1]=22,WW[2][2]=80,WW[2][3]=83,WW[2][4]=0;
3672   7                    WW[3][0]=21,WW[3][1]=22,WW[3][2]=80,WW[3][3]=84,WW[3][4]=0;
3673   7                    display_menu(line_1,3);
3674   7                    
3675   7                    if(increase|decrease)
3676   7                    {
3677   8                      increase=0;decrease=0;
3678   8                      if(line_1<1)mixer1=!mixer1,Data_change(2);
3679   8                      else if(line_1<2)mixer2=!mixer2,Data_change(2);
3680   8                      else if(line_1<3)mixer3=!mixer3,Data_change(2);
3681   8                      else if(line_1<4)mixer4=!mixer4,Data_change(2);
3682   8                    }
3683   7                    
3684   7                    if(mixer1)send3(hzk[58],75,0);
3685   7                    else send3(hzk[59],75,0);
3686   7                    if(mixer2)send3(hzk[58],75,2);
3687   7                    else send3(hzk[59],75,2);
3688   7                    if(mixer3)send3(hzk[58],75,4);
3689   7                    else send3(hzk[59],75,4);
3690   7                    if(mixer4)send3(hzk[58],75,6);
3691   7                    else send3(hzk[59],75,6);
3692   7                    if(right)right=0,menu_2=5,line_2=0,mixer_name=line_1+1;           
3693   7                    
3694   7                  }
3695   6                  else if(menu_1==5)//无线配置
3696   6                  {
3697   7                    line_1=move_cursor(line_1,7);
3698   7                    
3699   7                    WW[0][0]=41,WW[0][1]=42,WW[0][2]=43,WW[0][3]=44,WW[0][4]=0;
3700   7                    WW[1][0]=46,WW[1][1]=22,WW[1][2]=36,WW[1][3]=37,WW[1][4]=0;           
3701   7                    WW[2][0]=16,WW[2][1]=47,WW[2][2]=48,WW[2][3]=49,WW[2][4]=0;
3702   7                    WW[3][0]=50,WW[3][1]=51,WW[3][2]=52,WW[3][3]=53,WW[3][4]=0;
3703   7                    WW[4][0]=76,WW[4][1]=53,WW[4][2]=77,WW[4][3]=78,WW[4][4]=0;
3704   7                    WW[5][0]=29,WW[5][1]=30,WW[5][2]=38,WW[5][3]=30,WW[5][4]=0;
3705   7                    WW[6][0]=16,WW[6][1]=47,WW[6][2]=119,WW[6][3]=120,WW[6][4]=0;
3706   7                    WW[7][0]=29,WW[7][1]=30,WW[7][2]=27,WW[7][3]=45,WW[7][4]=0;
3707   7                    display_menu(line_1,7);
3708   7                    
3709   7                    if(line_1<1)
3710   7                    {
3711   8      
3712   8                      if(right)right=0,menu_2=11,event2=1,connect_time=15;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 61  

3713   8                    }
3714   7                    else if(line_1<2)
3715   7                    {
3716   8      
3717   8                      if(right)right=0,menu_2=6,line_2=0;
3718   8                    }
3719   7                    else if(line_1<3)
3720   7                    {
3721   8      
3722   8                      if(right)right=0,menu_2=7,line_2=0;
3723   8                    }
3724   7                    else if(line_1<4)
3725   7                    {
3726   8      
3727   8                      if(right)right=0,menu_2=8,line_2=0;
3728   8                    }
3729   7                    else if(line_1<5)
3730   7                    {
3731   8      
3732   8                      if(right)
3733   8                      {
3734   9                        right=0;
3735   9                        menu_2=19,line_2=0;
3736   9                        RC_check=1,RC_check_star=1;
3737   9                        
3738   9                      }
3739   8                      
3740   8                    }
3741   7                    else if(line_1<6)
3742   7                    {
3743   8                      if(right)right=0,menu_2=9,line_2=0;
3744   8                    }
3745   7                    else if(line_1<7)
3746   7                    {
3747   8                      if(right)right=0,menu_2=18,line_2=0;
3748   8                    }
3749   7                    else if(line_1<8)
3750   7                    {
3751   8                      if(increase)
3752   8                      {
3753   9                        increase=0;    
3754   9                        if(TX_power<3)TX_power++,Data_change(1),NRF_change=1; 
3755   9                      }
3756   8                      if(decrease)
3757   8                      {
3758   9                        decrease=0;
3759   9                        if(TX_power>0)TX_power--,Data_change(1),NRF_change=1;
3760   9                      }
3761   8                      
3762   8                      if(TX_power==3)
3763   8                      {
3764   9                        send2('1',60,6);send2('0',68,6);send2('0',76,6);send2('m',84,6);send2('W',92,6);
3765   9                      }
3766   8                      else if(TX_power==2)
3767   8                      {
3768   9                        send2('2',68,6);send2('5',76,6);send2('m',84,6);send2('W',92,6);
3769   9                      }
3770   8                      else if(TX_power==1)
3771   8                      {
3772   9                        send2('6',76,6);send2('m',84,6);send2('W',92,6);
3773   9                      }
3774   8                      else if(TX_power==0)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 62  

3775   8                      {
3776   9                        send2('2',76,6);send2('m',84,6);send2('W',92,6);
3777   9                      }
3778   8                      else 
3779   8                      {
3780   9                        send2('E',60,6);send2('R',68,6);send2('R',76,6);send2('O',84,6);send2('R',92,6);
3781   9      
3782   9                      }
3783   8                      
3784   8                    }           
3785   7                    
3786   7                  }
3787   6                  else if(menu_1==6)//红外配置
3788   6                  {
3789   7      
3790   7                  }
3791   6                  else if(menu_1==7)//PPM配置
3792   6                  {   
3793   7                    
3794   7                    line_1=move_cursor(line_1,3);
3795   7                    
3796   7                    WW[0][0]=31,WW[0][1]=32,WW[0][2]=38,WW[0][3]=30,WW[0][4]=0;
3797   7                    WW[1][0]=31,WW[1][1]=33,WW[1][2]=167,WW[1][3]=168,WW[1][4]=0;
3798   7                    WW[2][0]=54,WW[2][1]=55,WW[2][2]=160,WW[2][3]=161,WW[2][4]=0;
3799   7                    WW[3][0]=54,WW[3][1]=55,WW[3][2]=58,WW[3][3]=59,WW[3][4]=0;
3800   7                    display_menu(line_1,3);
3801   7                    
3802   7                    if(line_1<1)
3803   7                    {
3804   8                      if(right)right=0,menu_2=15,line_2=0;
3805   8                    }
3806   7                    else if(line_1<2)
3807   7                    {
3808   8                    if(right)right=0,menu_2=21,line_2=0;
3809   8                    }
3810   7                    else if(line_1<3)
3811   7                    {
3812   8                        
3813   8                    }
3814   7                    else 
3815   7                    {
3816   8                      if(increase)
3817   8                      {
3818   9                        increase=0;
3819   9                        if(train_switch<1)train_switch=4,Data_change(1);
3820   9                      
3821   9                        
3822   9                      }
3823   8                      if(decrease)
3824   8                      {
3825   9                        decrease=0;
3826   9                        if(train_switch>3)train_switch=0,Data_change(1);
3827   9      
3828   9                      }
3829   8      
3830   8            
3831   8                    }
3832   7                    if(PPM_updata>0)
3833   7                    {
3834   8                      if(train_switch&&train_output)send3(hzk[58],72,4);
3835   8                      else send3(hzk[59],72,4); 
3836   8                    }
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 63  

3837   7                    else send3(hzk[10],72,4),send3(hzk[47],84,4),send3(hzk[68],96,4);
3838   7                    
3839   7                    display_switch(train_switch,72,6);
3840   7      
3841   7                  }
3842   6                  else if(menu_1==8)//系统设置
3843   6                  {
3844   7                    line_1=move_cursor(line_1,7);
3845   7                    
3846   7                    WW[0][0]=64,WW[0][1]=152,WW[0][2]=18,WW[0][3]=13,WW[0][4]=0;
3847   7                    WW[1][0]=96,WW[1][1]=97,WW[1][2]=98,WW[1][3]=99,WW[1][4]=0;
3848   7                    WW[2][0]=175,WW[2][1]=70,WW[2][2]=18,WW[2][3]=13,WW[2][4]=0;
3849   7                    WW[3][0]=58,WW[3][1]=132,WW[3][2]=145,WW[3][3]=146,WW[3][4]=0;
3850   7                    WW[4][0]=154,WW[4][1]=155,WW[4][2]=144,WW[4][3]=156,WW[4][4]=0;
3851   7                    WW[5][0]=36,WW[5][1]=37,WW[5][2]=167,WW[5][3]=168,WW[5][4]=0;
3852   7                    WW[6][0]=73,WW[6][1]=74,WW[6][2]=47,WW[6][3]=75,WW[6][4]=0;
3853   7                    
3854   7                    WW[7][0]=106,WW[7][1]=107,WW[7][2]=32,WW[7][3]=136,WW[7][4]=0;
3855   7                    display_menu(line_1,7);
3856   7                    
3857   7                    if(line_1<1)
3858   7                    {
3859   8                      if(right)right=0,menu_2=14,line_2=0;
3860   8                    }
3861   7                    else if(line_1<2)
3862   7                    {
3863   8                      if(right)right=0,menu_2=20,line_2=0;
3864   8                    }
3865   7                    else if(line_1<3)
3866   7                    {
3867   8                      if(right)right=0,menu_2=24,line_2=0;
3868   8                      
3869   8                    }
3870   7                    else if(line_1<4)
3871   7                    {
3872   8                      
3873   8                    }
3874   7                    else if(line_1<5)
3875   7                    {
3876   8                      if(right)right=0,menu_2=17,line_2=0;
3877   8                        
3878   8                    }
3879   7                    else if(line_1<6)
3880   7                    {
3881   8                      if(right)right=0,menu_2=22,line_2=0;  
3882   8                    }
3883   7                    else if(line_1<7)
3884   7                    {
3885   8                      if(right)right=0,menu_2=10,line_2=0;
3886   8                    }
3887   7                    else if(line_1<8)
3888   7                    {
3889   8                      if(right)right=0,menu_2=12,line_2=0;
3890   8      
3891   8                    }
3892   7                    
3893   7                  }
3894   6                  else if(menu_1==9)//角度传感
3895   6                  {
3896   7                    
3897   7                  }
3898   6                  else if(menu_1==10)//自动控制
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 64  

3899   6                  {
3900   7                    line_1=move_cursor(line_1,4);
3901   7                    
3902   7                    WW[0][0]=160,WW[0][1]=161,WW[0][2]=0;
3903   7                    WW[1][0]=58,WW[1][1]=59,WW[1][2]=0;
3904   7                    WW[2][0]=38,WW[2][1]=30,WW[2][2]=0;
3905   7                    WW[3][0]=170,WW[3][1]=171,WW[3][2]=0;
3906   7                    WW[4][0]=77,WW[4][1]=78,WW[4][2]=0;
3907   7                    display_menu(line_1,4);
3908   7                    
3909   7                    if(line_1<3)
3910   7                    {
3911   8                      if(auto_switch)
3912   8                      {
3913   9                        if(auto_mode==1)send3(hzk[170],60,0),send3(hzk[171],72,0);
3914   9                        else if(auto_mode==2)send3(hzk[59],60,0); 
3915   9                        else if(auto_mode==3)send3(hzk[77],60,0),send3(hzk[78],72,0);
3916   9                      }
3917   8                      else send3(hzk[59],60,0);
3918   8                    
3919   8                      display_switch(auto_switch,60,2);
3920   8                    }
3921   7                    else display_switch(auto_switch,60,0);
3922   7                    
3923   7                    if(line_1<1)
3924   7                    {
3925   8                      
3926   8                    }
3927   7                    else if(line_1<2)
3928   7                    {
3929   8                      if(increase)
3930   8                      {
3931   9                        increase=0;
3932   9                        if(auto_switch<1)auto_switch=3,Data_change(1);
3933   9                        
3934   9                      }
3935   8                      if(decrease)
3936   8                      {
3937   9                        decrease=0;
3938   9                        if(auto_switch==3)auto_switch=0,Data_change(1);
3939   9      
3940   9                      }
3941   8                    }
3942   7                    else if(line_1<3)
3943   7                    {
3944   8                      if(increase)
3945   8                      {
3946   9                        increase=0;
3947   9                        if(auto_mapping<7)auto_mapping++,Data_change(1);
3948   9                      }
3949   8                      if(decrease)
3950   8                      {
3951   9                        decrease=0;
3952   9                        if(auto_mapping>0)auto_mapping--,Data_change(1);
3953   9                      }
3954   8                      send3(hzk[94],60,4);send3(hzk[95],72,4);send2(auto_mapping+49,84,4);
3955   8                    }
3956   7                    else if(line_1<4)
3957   7                    {
3958   8                      if(increase)
3959   8                      {
3960   9                        increase=0;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 65  

3961   9                        if(auto_middle<120)auto_middle++,Data_change(1);
3962   9                      }
3963   8                      if(decrease)
3964   8                      {
3965   9                        decrease=0;
3966   9                        if(auto_middle>-120)auto_middle--,Data_change(1);
3967   9                      }
3968   8                      write_num100(auto_middle,66,4,'/');
3969   8                    }
3970   7                    else 
3971   7                    {
3972   8                      if(right)right=0,menu_2=23,line_2=0;
3973   8                    }
3974   7                    
3975   7                    
3976   7                  }
3977   6                  else if(menu_1==11)//模型管理
3978   6                  {
3979   7                    line_1=move_cursor(line_1,3);
3980   7                    
3981   7                    WW[0][0]=162,WW[0][1]=163,WW[0][2]=0;
3982   7                    WW[1][0]=164,WW[1][1]=165,WW[1][2]=0;
3983   7                    WW[2][0]=166,WW[2][1]=169,WW[2][2]=0;
3984   7                    WW[3][0]=166,WW[3][1]=171,WW[3][2]=0;
3985   7                    display_menu(line_1,3);
3986   7                    
3987   7                    
3988   7                    send3(hzk[Model_number+81],60,0);send3(hzk[68],72,0);
3989   7                    
3990   7                    
3991   7                    if(line_1<1)
3992   7                    {
3993   8                      if(increase)
3994   8                      {
3995   9                        increase=0;
3996   9                        if(Model_number<4)
3997   9                        {
3998  10                          Model_current=Model_number;
3999  10                          Model_number++;
4000  10                          ROM_enable=1,Data_system=1,Model_change=1;
4001  10                          
4002  10                        }
4003   9                      }
4004   8                      if(decrease)
4005   8                      {
4006   9                        decrease=0;
4007   9                        if(Model_number>0)
4008   9                        {
4009  10                          Model_current=Model_number;
4010  10                          Model_number--;
4011  10                          ROM_enable=1,Data_system=1,Model_change=1;
4012  10                          
4013  10                        }
4014   9                      }
4015   8                    }
4016   7                    else if(line_1<2)
4017   7                    {
4018   8                      
4019   8                    }
4020   7                    else if(line_1<3)
4021   7                    {
4022   8                      if(increase)
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 66  

4023   8                      {
4024   9                        increase=0;
4025   9                        if(Model_target<4)Model_target++;
4026   9                      }
4027   8                      if(decrease)
4028   8                      {
4029   9                        decrease=0;
4030   9                        if(Model_target>0)Model_target--;
4031   9                      }
4032   8                      
4033   8                      if(right)
4034   8                      {
4035   9                        right=0;
4036   9                        if(copy_ready)
4037   9                        {
4038  10                          paste_ready=1;
4039  10                            
4040  10                        }
4041   9                        else 
4042   9                        {
4043  10                          copy_ready=1;
4044  10                        }               
4045   9                      }
4046   8                      
4047   8                      
4048   8                      
4049   8                      if(copy_ready)
4050   8                      {
4051   9                        if(left)
4052   9                        {
4053  10                          left=0;
4054  10                          copy_ready=0;paste_ready=0;
4055  10                        }
4056   9      
4057   9      
4058   9                        send3(hzk[176],60,4);send3(hzk[Model_target+81],72,4);send3(hzk[68],84,4);
4059   9                        if(paste_ready)
4060   9                        {
4061  10                          send3(hzk[3],96,4);
4062  10                          ROM_time++;
4063  10                          if(ROM_time>4)
4064  10                          {
4065  11                            ROM_time=0;
4066  11                            Model_copy();
4067  11                            Data_model=1,ROM_enable=1;  
4068  11                            copy_ready=0;paste_ready=0;
4069  11                          }
4070  10                        }
4071   9                        else send2('?',96,4);
4072   9                      }
4073   8                    }
4074   7                    else if(line_1<4)
4075   7                    {
4076   8                      if(right)
4077   8                      {
4078   9                        right=0;
4079   9                        if(reset_action)
4080   9                        {
4081  10                          Model_reset=1;
4082  10                          
4083  10                        }
4084   9                        else
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 67  

4085   9                        {
4086  10                          reset_action=1;
4087  10                          
4088  10                        }
4089   9                        
4090   9                      }
4091   8                      
4092   8                      
4093   8                      
4094   8                      
4095   8                      if(reset_action)
4096   8                      {
4097   9                        if(left)
4098   9                        {
4099  10                          left=0;
4100  10                          reset_action=0;Model_reset=0;
4101  10                        } 
4102   9                        
4103   9                        send3(hzk[137],60,6);send3(hzk[109],72,6);
4104   9                        if(Model_reset)
4105   9                        {
4106  10                          send3(hzk[3],84,6);
4107  10                          ROM_time++;
4108  10                          if(ROM_time>4)
4109  10                          {
4110  11                            ROM_time=0;
4111  11                            Model_data_reset();
4112  11                            reset_action=0;Model_reset=0;Data_model=1,ROM_enable=1; 
4113  11                          }
4114  10                          
4115  10                        }
4116   9                        else send2('?',84,6);
4117   9                      }
4118   8                    }
4119   7                    
4120   7                  }
4121   6      
4122   6                  if(left)left=0,menu_1=0;
4123   6                  increase=0;decrease=0;right=0;  
4124   6                }
4125   5              }
4126   4              else             //主菜单
4127   4              { 
4128   5      
4129   5                if(star)       
4130   5                {
4131   6                  star=0;line=0;clean();
4132   6                  up=0,down=0;
4133   6                  
4134   6                }
4135   5                line=move_cursor(line,8);
4136   5                WW[0][0]=6,WW[0][1]=7,WW[0][2]=8,WW[0][3]=9,WW[0][4]=0;
4137   5                WW[1][0]=25,WW[1][1]=26,WW[1][2]=27,WW[1][3]=28,WW[1][4]=0;
4138   5                WW[2][0]=16,WW[2][1]=17,WW[2][2]=18,WW[2][3]=13,WW[2][4]=0;             
4139   5                WW[3][0]=19,WW[3][1]=20,WW[3][2]=21,WW[3][3]=22,WW[3][4]=0;
4140   5                WW[4][0]=10,WW[4][1]=11,WW[4][2]=12,WW[4][3]=13,WW[4][4]=0;         
4141   5                WW[5][0]=2,WW[5][1]=2,WW[5][2]=12,WW[5][3]=13,WW[5][4]=0;
4142   5                WW[6][0]=104,WW[6][1]=105,WW[6][2]=22,WW[6][3]=169,WW[6][4]=0;
4143   5                WW[7][0]=8,WW[7][1]=159,WW[7][2]=14,WW[7][3]=15,WW[7][4]=0;
4144   5                WW[8][0]=23,WW[8][1]=24,WW[8][2]=18,WW[8][3]=13,WW[8][4]=0;
4145   5      
4146   5      
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 68  

4147   5                display_menu(line,8);
4148   5                
4149   5                if(line<1)      
4150   5                {
4151   6                  
4152   6                  if(right)right=0,menu_1=1,line_1=0;
4153   6                }
4154   5                else if(line<2)
4155   5                {
4156   6      
4157   6                  if(right)right=0,menu_1=0,line_1=0;
4158   6                }
4159   5                else if(line<3)
4160   5                {
4161   6                if(right)right=0,menu_1=3,line_1=0; 
4162   6                }
4163   5                else if(line<4)
4164   5                {
4165   6                    if(right)right=0,menu_1=4,line_1=0;
4166   6                }
4167   5                else if(line<5)
4168   5                {
4169   6                  if(right)right=0,menu_1=5,line_1=0; 
4170   6                  send2('P',12,6);send2('P',20,6);send2('M',28,6);
4171   6                }     
4172   5                else if(line<6) 
4173   5                {
4174   6                  send2('P',12,4);send2('P',20,4);send2('M',28,4);
4175   6                  if(right)right=0,menu_1=7,line_1=0; 
4176   6                  
4177   6                }
4178   5                else if(line<7) 
4179   5                {
4180   6                  send2('P',12,2);send2('P',20,2);send2('M',28,2);
4181   6                  if(right)right=0,menu_1=10,line_1=0;
4182   6                }
4183   5                else if(line<8) 
4184   5                {
4185   6                  send2('P',12,0);send2('P',20,0);send2('M',28,0);
4186   6                  if(right)right=0,menu_1=11,line_1=0;
4187   6                }
4188   5                else  
4189   5                {
4190   6                  send2('P',12,0);send2('P',20,0);send2('M',28,0);
4191   6                  if(right)right=0,menu_1=8,line_1=0;
4192   6                }
4193   5                
4194   5                if(left)left=0,menu=0,line=0,star=1;
4195   5                if(increase)increase=0;
4196   5                if(decrease)decrease=0;
4197   5      
4198   5              }
4199   4            }
4200   3            else 
4201   3            {
4202   4      
4203   4              if(star)       //star标志位：页面第一次载入
4204   4              {
4205   5                star=0;
4206   5                photo(bmp2,0,0,128,8);
4207   5      
4208   5              } 
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 69  

4209   4              
4210   4              photo(name6,60,3,36,2);
4211   4              
4212   4      
4213   4              
4214   4              
4215   4        //      send2(':',72,0);
4216   4        //      send2(':',96,0);
4217   4              send2(hour/10+48,64,0);send2(hour%10+48,72,0);
4218   4              
4219   4              send2(minute/10+48,85,0);send2(minute%10+48,93,0);
4220   4              
4221   4              send2(second/10+48,106,0);send2(second%10+48,114,0);
4222   4              
4223   4              if(SA)send2(123,64,5);
4224   4              else send2(124,64,5);
4225   4              
4226   4              if(SB1&SB2)send2(126,72,5);
4227   4              else if(SB1&!SB2)send2(125,72,5);
4228   4              else send2(127,72,5);
4229   4              
4230   4              if(SC1&SC2)send2(126,80,5);
4231   4              else if(SC1&!SC2)send2(125,80,5);
4232   4              else send2(127,80,5);
4233   4              
4234   4              if(SD)send2(123,88,5);
4235   4              else send2(124,88,5);
4236   4      /*        location(54,6);send('A');LCD(0);send('B');LCD(0);LCD(0);
4237   4              send('C');LCD(0);LCD(0);send('D');
4238   4              
4239   4              if(SA)send2(123,54,4);
4240   4              else send2(124,54,4);
4241   4              
4242   4              if(SB1&SB2)send2(126,62,4);
4243   4              else if(SB1&!SB2)send2(125,62,4);
4244   4              else send2(127,62,4);
4245   4              
4246   4              if(SC1&SC2)send2(126,70,4);
4247   4              else if(SC1&!SC2)send2(125,70,4);
4248   4              else send2(127,70,4);
4249   4              
4250   4              if(SD)send2(123,78,4);
4251   4              else send2(124,78,4);*/
4252   4              
4253   4      /*        
4254   4              location(55,5);
4255   4              temp=operation[1];
4256   4        //      temp=angle_x;
4257   4              if(temp>0)send('+');
4258   4              else if(temp<0)temp=-temp,send('-');
4259   4              else send(' ');
4260   4              send(temp/1000+48);
4261   4              send(temp%1000/100+48);
4262   4              send(temp%100/10+48);
4263   4              send(temp%10+48);
4264   4              
4265   4              location(55,6);
4266   4              temp=PPM_DATA[2];
4267   4        //      temp=angle_y;
4268   4              if(temp>0)send('+');
4269   4              else if(temp<0)temp=-temp,send('-');
4270   4              else send(' ');
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 70  

4271   4              send(temp/1000+48);
4272   4              send(temp%1000/100+48);
4273   4              send(temp%100/10+48);
4274   4              send(temp%10+48);
4275   4              
4276   4      
4277   4              
4278   4              location(95,5);temp=test;
4279   4              send(temp/1000+48);
4280   4              send(temp%1000/100+48);
4281   4              send(temp%100/10+48);
4282   4              send(temp%10+48);
4283   4              
4284   4              location(95,6);temp=boot_time;
4285   4              send(temp/1000+48);
4286   4              send(temp%1000/100+48);
4287   4              send(temp%100/10+48);
4288   4              send(temp%10+48);
4289   4      */
4290   4              
4291   4              
4292   4              
4293   4              location(78,2);temp=battery_voltage;
4294   4              if(temp>999)
4295   4              {
4296   5                temp/=10;
4297   5                send(temp%1000/100+48);       
4298   5                send(temp%100/10+48);LCD(0x00);LCD(0x40);
4299   5                send(temp%10+48);
4300   5              }
4301   4              else
4302   4              {
4303   5                send(temp%1000/100+48);LCD(0x00);LCD(0x40);       
4304   5                send(temp%100/10+48);
4305   5                send(temp%10+48); 
4306   5              }
4307   4      
4308   4              
4309   4              location(23,4);
4310   4              if(rx[1])
4311   4              {
4312   5                temp=rx[1];
4313   5                temp<<=8;
4314   5                temp+=rx[2];
4315   5              }
4316   4              else temp=0;
4317   4              send(temp%1000/100+48);LCD(0x00);LCD(0x40);       
4318   4              send(temp%100/10+48);
4319   4              send(temp%10+48);
4320   4              
4321   4              location(23,3);
4322   4              if(rx[3])
4323   4              {
4324   5                temp=rx[3];
4325   5                temp<<=8;
4326   5                temp+=rx[4];
4327   5              }
4328   4              else temp=0;
4329   4              if(temp>999)
4330   4              {
4331   5                temp/=10;
4332   5                send(temp%1000/100+48);       
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 71  

4333   5                send(temp%100/10+48);LCD(0x00);LCD(0x40);
4334   5                send(temp%10+48);
4335   5              }
4336   4              else
4337   4              {
4338   5                send(temp%1000/100+48);LCD(0x00);LCD(0x40);       
4339   5                send(temp%100/10+48);
4340   5                send(temp%10+48); 
4341   5              }
4342   4              
4343   4              
4344   4              
4345   4              location(23,5);temp=rx[0]*2;
4346   4      /*        send(temp%1000/100+48);       
4347   4              send(temp%100/10+48);
4348   4              send(temp%10+48);*/
4349   4              if(temp>99)send('1'),send('0'),send('0');
4350   4              else send(' '),send(temp/10+48),send(temp%10+48);
4351   4              
4352   4      //        if(FUCK_sum==0)warning(50,6);
4353   4              
4354   4              location(23,6);temp=FUCK_sum*2;
4355   4              if(temp>99)send('1'),send('0'),send('0');
4356   4              else send(' '),send(temp/10+48),send(temp%10+48);
4357   4        //      send3(hzk[10],80,3);send3(hzk[11],92,3);send3(hzk[12],104,3);
4358   4        //      warning(60,3);
4359   4        //photo(name1,80,3,36,16);
4360   4              
4361   4              
4362   4              if(CH_negative[2])
4363   4              {
4364   5                throttle(255-CH_value[2]/4);
4365   5                location(6,2);
4366   5                temp=100-CH_value[2]*10/102;
4367   5              }
4368   4              else
4369   4              {
4370   5                throttle(CH_value[2]/4);
4371   5                location(6,2);
4372   5                temp=CH_value[2]*10/102;
4373   5              }
4374   4              
4375   4              
4376   4                if(temp==100)
4377   4                {
4378   5                  send('A');send('L');send('L');
4379   5                }
4380   4                else
4381   4                {
4382   5                  send(temp/10+48);send(temp%10+48);send('%');
4383   5                }
4384   4                
4385   4              location(6,7);
4386   4              if(CH_negative[3]==1)CH24_trim(100-CH_middle[3]);
4387   4              else CH24_trim(CH_middle[3]+100);
4388   4              location(67,7);
4389   4              if(CH_negative[1]==1)CH24_trim(100-CH_middle[1]);
4390   4              else CH24_trim(CH_middle[1]+100);
4391   4      
4392   4              if(CH_negative[2]==1)CH13_trim(100-CH_middle[2],0);
4393   4              else CH13_trim(CH_middle[2]+100,0);
4394   4              if(CH_negative[0]==1)CH13_trim(100-CH_middle[0],123);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 72  

4395   4              else CH13_trim(CH_middle[0]+100,123);
4396   4                
4397   4              if(event1)//微调更新
4398   4              {
4399   5                          
4400   5                  if(CH_middle_change==1)
4401   5                  {
4402   6                    
4403   6                    photo(bmp3,90,2,32,3);
4404   6                    location(93,3);
4405   6                    temp=CH_middle[0];    
4406   6                    
4407   6                  }
4408   5                  else if(CH_middle_change==2)
4409   5                  {
4410   6                    
4411   6                    photo(bmp3,77,4,32,3);
4412   6                    location(80,5);
4413   6                    temp=CH_middle[1];  
4414   6                  }
4415   5                  else if(CH_middle_change==3)
4416   5                  {
4417   6                    
4418   6                    photo(bmp3,5,2,32,3);
4419   6                    location(8,3);
4420   6                    temp=CH_middle[2];  
4421   6                  }
4422   5                  else if(CH_middle_change==4)
4423   5                  {
4424   6                    
4425   6                    photo(bmp3,17,4,32,3);
4426   6                    location(20,5);
4427   6                    temp=CH_middle[3];  
4428   6                  }         
4429   5                  
4430   5                  if(temp>0)send('+');
4431   5                  else if(temp<0)temp=-temp,send('-');
4432   5                  else send(' ');
4433   5                  send(temp/100+48);
4434   5                  send(temp%100/10+48);
4435   5                  send(temp%10+48);           
4436   5                
4437   5              }
4438   4              
4439   4              LCD_OFF();
4440   4            }
4441   3          }
4442   2          else if(tt==3) //保留
4443   2          {
4444   3            
4445   3          }
4446   2          else if(tt==4)
4447   2          {
4448   3            if(ROM_enable)  //避免数据重复保存
4449   3            {
4450   4              ROM_enable=0;
4451   4              if(Data_system)   //系统参数
4452   4              {
4453   5                Data_system=0;
4454   5                DATA_save1();
4455   5              }
4456   4              if(Data_model)  //机型参数
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 73  

4457   4              {
4458   5                Data_model=0;
4459   5                DATA_save2();
4460   5              }
4461   4              
4462   4            }
4463   3            
4464   3            if(Model_change)  //读取另一个机型数据
4465   3            {
4466   4              Model_change=0;
4467   4              Model_current=Model_number;
4468   4              DATA_read2();
4469   4              
4470   4            }
4471   3          }
4472   2          else if(tt==5)//保留
4473   2          {
4474   3            tt=0;
4475   3          }
4476   2        
4477   2      
4478   2        }
4479   1      
4480   1      }
4481          
4482          
4483          void ET0_isr()interrupt 1   //数据处理定时器   低优先级
4484          {
4485   1      
4486   1        TL0=0xe0,TH0=0xb1;     //20ms
4487   1        flag_20ms=1;
4488   1      //SA=!SA;SC2=!SC2;
4489   1        timer++;           //闹钟处理
4490   1        if(timer>49)timer=0,second++;
4491   1        if(second>59)second=0,minute++;
4492   1        if(minute>59)minute=0,hour++;
4493   1        if(hour>99)hour=99;
4494   1        
4495   1        
4496   1        
4497   1      
4498   1        
4499   1        if(event1)    //1秒清0
4500   1        {
4501   2          t1++;
4502   2          if(t1>49)t1=0,event1=0,star=1;
4503   2        }
4504   1        
4505   1        if(event2)    //15秒清0
4506   1        {
4507   2          t2++;
4508   2          if(t2>49)
4509   2          {
4510   3            t2=0,connect_time--;
4511   3      
4512   3            if(connect_time>9)send2('1',56,2),send2(connect_time%10+48,64,2);
4513   3            else send2(' ',56,2),send2(connect_time+48,64,2);
4514   3          }
4515   2          if(connect_time==0)event2=0,connecting=0;
4516   2        }
4517   1        
4518   1        if(event3)    //1.5秒清0
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 74  

4519   1        {
4520   2          t3++;
4521   2          if(t3>75)t3=0,event3=0,ROM_enable=1;//避免频繁擦写ROM
4522   2        }
4523   1        
4524   1      /*  if(event3)    //0.5秒清0
4525   1        {
4526   1          t3++;
4527   1          if(t3>25)t3=0,event3=0,star=1;
4528   1        }*/
4529   1        
4530   1        if(Battery_1s)//低压报警处理
4531   1        {
4532   2          battery_voltage=adc[0]*0.654;      
4533   2          if(battery_voltage<VLD1*10)beep=3;
4534   2          else{if(beep==3)beep=0;}
4535   2        }
4536   1        else
4537   1        {
4538   2          battery_voltage=adc[0]*1.46;
4539   2          if(battery_voltage<VLD2*10)beep=3;
4540   2          else{if(beep==3)beep=0;}
4541   2        }
4542   1        
4543   1      
4544   1        if(Sound_switch)//蜂鸣器处理
4545   1        {
4546   2          sound++;           
4547   2          if(beep)
4548   2          {                                         
4549   3            if(beep==1)
4550   3            { buzzer=0;if(sound>3)beep=0,buzzer=1;}
4551   3            if(beep==2)
4552   3            {buzzer=0;if(sound>30)beep=0,buzzer=1;}
4553   3            if(beep==3)
4554   3            {
4555   4              if(sound%40>25)buzzer=0;
4556   4              else buzzer=1;
4557   4            }
4558   3          }
4559   2          else sound=0,buzzer=1;  
4560   2        }
4561   1        else sound=0,buzzer=1;
4562   1        
4563   1      
4564   1      /**************************************************************************/
4565   1      //通道运算开关处理
4566   1      
4567   1      
4568   1      //  operation[0]=(angle_x+511)*5/6-426+CH_middle[0];
4569   1      //  operation[1]=(angle_y+511)*5/6-426+CH_middle[1];
4570   1      
4571   1        if(SA)Switch_A=1;
4572   1        else Switch_A=3;
4573   1        
4574   1        if(SB1&SB2)Switch_B=2;
4575   1        else if(SB1&!SB2)Switch_B=1;
4576   1        else Switch_B=3;
4577   1      
4578   1        if(SC1&SC2)Switch_C=2;
4579   1        else if(SC1&!SC2)Switch_C=1;
4580   1        else Switch_C=3;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 75  

4581   1        
4582   1        if(SD)Switch_D=1;
4583   1        else Switch_D=3;
4584   1        
4585   1        if(auto_switch)
4586   1        {
4587   2          auto_mode=Switch_C;
4588   2        }
4589   1        
4590   1        
4591   1        
4592   1        
4593   1        if(auto_mode==1)
4594   1        {
4595   2          auto_value=auto_middle*4.25+511;
4596   2        }
4597   1        else if(auto_mode==3)
4598   1        {
4599   2          if(auto_value>auto_max)auto_value=auto_max,auto_h=1,auto_l=0;
4600   2          if(auto_value<auto_min)auto_value=auto_min,auto_h=0,auto_l=1;
4601   2          if(auto_l)
4602   2          {
4603   3            auto_value+=auto_speed;
4604   3          }
4605   2          else if(auto_h)
4606   2          {
4607   3            auto_value-=auto_speed;
4608   3          } 
4609   2        }
4610   1        
4611   1        
4612   1        
4613   1        if(train_switch)
4614   1        {
4615   2          if(Switch_D==3)train_output=1;
4616   2          else train_output=0;  
4617   2        }
4618   1        
4619   1        CH_value[0]=CH_calib(adc11,CH1_offset);//俯仰adc1
4620   1        CH_value[1]=CH_calib(adc22,CH2_offset);//横滚adc2
4621   1        CH_value[2]=CH_calib(adc[4],CH3_offset);//油门adc[4]
4622   1        CH_value[3]=CH_calib(adc33,CH4_offset);//航向adc[5]
4623   1        
4624   1        function_mapping(0);
4625   1        function_mapping(1);
4626   1        function_mapping(2);
4627   1        function_mapping(3);
4628   1        function_mapping(4);
4629   1        function_mapping(5);
4630   1        function_mapping(6);
4631   1        function_mapping(7);
4632   1        
4633   1        
4634   1        
4635   1        function_size(0);
4636   1        function_size(1);
4637   1        function_size(2);
4638   1        function_size(3);
4639   1        function_size(4);
4640   1        function_size(5);
4641   1        function_size(6);
4642   1        function_size(7);
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 76  

4643   1        
4644   1        
4645   1        
4646   1        function_negative(0);
4647   1        function_negative(1);
4648   1        function_negative(2);
4649   1        function_negative(3);
4650   1        function_negative(4);
4651   1        function_negative(5);
4652   1        function_negative(6);
4653   1        function_negative(7);
4654   1        
4655   1      
4656   1        
4657   1        if(mixer1)
4658   1        {
4659   2          function_mix(mixer1_same,mixer1_contrary);
4660   2        }
4661   1        if(mixer2)
4662   1        {
4663   2          function_mix(mixer2_same,mixer2_contrary);
4664   2        }
4665   1        if(mixer3)
4666   1        {
4667   2          function_mix(mixer3_same,mixer3_contrary);
4668   2        }
4669   1        if(mixer4)
4670   1        {
4671   2          function_mix(mixer4_same,mixer4_contrary);
4672   2        }
4673   1        
4674   1        
4675   1        
4676   1        
4677   1        operation[0]+=511;
4678   1        operation[1]+=511;
4679   1        operation[2]+=511;
4680   1        operation[3]+=511;
4681   1        operation[4]+=511;
4682   1        operation[5]+=511;
4683   1        operation[6]+=511;
4684   1        operation[7]+=511;
4685   1        
4686   1        if(auto_switch)
4687   1        {
4688   2          operation[auto_mapping]=auto_value;
4689   2        }
4690   1        
4691   1        Xdata_check(operation);
4692   1        
4693   1        
4694   1        NRF_buff[0]=operation[NRF_mapping[0]];
4695   1        NRF_buff[1]=operation[NRF_mapping[1]];
4696   1        NRF_buff[2]=operation[NRF_mapping[2]];
4697   1        NRF_buff[3]=operation[NRF_mapping[3]];
4698   1        NRF_buff[4]=operation[NRF_mapping[4]];
4699   1        NRF_buff[5]=operation[NRF_mapping[5]];
4700   1        NRF_buff[6]=operation[NRF_mapping[6]];
4701   1        NRF_buff[7]=operation[NRF_mapping[7]];
4702   1        
4703   1        if(PPM_updata>0)
4704   1        {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 77  

4705   2          PPM_updata--;
4706   2          if(train_output)
4707   2          {
4708   3            NRF_buff[0]=PPM_DATA[NRF_mapping[0]];
4709   3            NRF_buff[1]=PPM_DATA[NRF_mapping[1]];
4710   3            NRF_buff[2]=PPM_DATA[NRF_mapping[2]];
4711   3            NRF_buff[3]=PPM_DATA[NRF_mapping[3]];
4712   3            NRF_buff[4]=PPM_DATA[NRF_mapping[4]];
4713   3            NRF_buff[5]=PPM_DATA[NRF_mapping[5]];
4714   3            NRF_buff[6]=PPM_DATA[NRF_mapping[6]];
4715   3            NRF_buff[7]=PPM_DATA[NRF_mapping[7]]; 
4716   3          }
4717   2          
4718   2        }
4719   1        
4720   1        PPMout[0]=operation[PPM_mapping[0]];
4721   1        PPMout[1]=operation[PPM_mapping[1]];
4722   1        PPMout[2]=operation[PPM_mapping[2]];
4723   1        PPMout[3]=operation[PPM_mapping[3]];
4724   1        PPMout[4]=operation[PPM_mapping[4]];
4725   1        PPMout[5]=operation[PPM_mapping[5]];
4726   1        PPMout[6]=operation[PPM_mapping[6]];
4727   1        PPMout[7]=operation[PPM_mapping[7]];
4728   1      
4729   1        
4730   1      //operation[0]=adc[4];
4731   1      //operation[1]=adc[5];  
4732   1      //operation[2]=adc[6];
4733   1      //operation[3]=adc[7];
4734   1      /*
4735   1      NRF_buff[0]=512;
4736   1      NRF_buff[1]=512;
4737   1      NRF_buff[2]=512;
4738   1      NRF_buff[3]=512;
4739   1      NRF_buff[4]=512;
4740   1      NRF_buff[5]=512;
4741   1      NRF_buff[6]=512;
4742   1      NRF_buff[7]=512;*/
4743   1      
4744   1      
4745   1          tx_buff[0]=0xa1;
4746   1          tx_buff[1]=NRF_buff[0]>>2;
4747   1          tx_buff[2]=NRF_buff[0]<<6;
4748   1          tx_buff[2]+=NRF_buff[1]>>4;
4749   1          tx_buff[3]=NRF_buff[1]<<4;
4750   1          tx_buff[3]+=NRF_buff[2]>>6;
4751   1          tx_buff[4]=NRF_buff[2]<<2;
4752   1          tx_buff[4]+=NRF_buff[3]>>8;
4753   1          tx_buff[5]=NRF_buff[3];
4754   1      
4755   1          tx_buff[6]=NRF_buff[4]>>2;
4756   1          tx_buff[7]=NRF_buff[4]<<6;
4757   1          tx_buff[7]+=NRF_buff[5]>>4;
4758   1          tx_buff[8]=NRF_buff[5]<<4;
4759   1          tx_buff[8]+=NRF_buff[6]>>6;
4760   1          tx_buff[9]=NRF_buff[6]<<2;
4761   1          tx_buff[9]+=NRF_buff[7]>>8;
4762   1          tx_buff[10]=NRF_buff[7];
4763   1      
4764   1            
4765   1          tx_data[0]=tx_buff[0];
4766   1          tx_data[1]=tx_buff[1];
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 78  

4767   1          tx_data[2]=tx_buff[2];
4768   1          tx_data[3]=tx_buff[3];
4769   1          tx_data[4]=tx_buff[4];
4770   1          tx_data[5]=tx_buff[5];
4771   1          tx_data[6]=tx_buff[6];
4772   1          tx_data[7]=tx_buff[7];
4773   1          tx_data[8]=tx_buff[8];
4774   1          tx_data[9]=tx_buff[9];
4775   1          tx_data[10]=tx_buff[10];
4776   1            
4777   1            
4778   1        
4779   1      
4780   1          
4781   1      //SC2=!SC2;   
4782   1      
4783   1      }
4784          
4785          void EX1_isr()interrupt 2   //脉宽测量   高优先级
4786          {
4787   1        u16 width;u8 i;
4788   1        width=TH1;
4789   1        width<<=8;
4790   1        width+=TL1;
4791   1        TL1=0,TH1=0;
4792   1        
4793   1        if(width<500)
4794   1        {
4795   2          t_ppm=0;
4796   2        }
4797   1        else if(width<1750)
4798   1        {
4799   2          PPM_buff[t_ppm]=width-605;
4800   2          t_ppm++;
4801   2          if(t_ppm>7)
4802   2          {
4803   3            t_ppm=0;
4804   3            if(PPM_updata<20)PPM_updata+=5;
4805   3            for(i=0;i<8;i++)
4806   3            PPM_DATA[i]=PPM_buff[i];
4807   3            Xdata_check(PPM_DATA);
4808   3          }
4809   2        }
4810   1        else
4811   1        {
4812   2          t_ppm=0;
4813   2        }
4814   1      
4815   1        
4816   1      }
4817          
4818          void ET1_isr()interrupt 3   //脉宽输出   高优先级
4819          {
4820   1        u16 temp; 
4821   1        TR1=0;
4822   1        if(PPM_OUT)       //输出8通道PPM，PPM信号总周期20ms，
4823   1        { 
4824   2      
4825   2                    //每通道固定0.4ms低电平开始，0.6到1.6ms高电平结束
4826   2          t_PPMout++;
4827   2          switch(t_PPMout)
4828   2          {
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 79  

4829   3            case 1:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[0];
4830   3                    T_l=temp;T_h=temp>>8;break;       
4831   3            case 2:PPM=1;TL1=T_l;TH1=T_h;break;
4832   3            case 3:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[1];
4833   3                    T_l=temp;T_h=temp>>8;break;       
4834   3            case 4:PPM=1;TL1=T_l;TH1=T_h;break;
4835   3            case 5:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[2];
4836   3                    T_l=temp;T_h=temp>>8;break;       
4837   3            case 6:PPM=1;TL1=T_l;TH1=T_h;break;
4838   3            case 7:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[3];
4839   3                    T_l=temp;T_h=temp>>8;break;       
4840   3            case 8:PPM=1;TL1=T_l;TH1=T_h;break;
4841   3            case 9:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[4];
4842   3                    T_l=temp;T_h=temp>>8;break;       
4843   3            case 10:PPM=1;TL1=T_l;TH1=T_h;break;
4844   3            case 11:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[5];
4845   3                    T_l=temp;T_h=temp>>8;break;       
4846   3            case 12:PPM=1;TL1=T_l;TH1=T_h;break;
4847   3            case 13:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[6];
4848   3                    T_l=temp;T_h=temp>>8;break;       
4849   3            case 14:PPM=1;TL1=T_l;TH1=T_h;break;
4850   3            case 15:PPM=0;TL1=0x70,TH1=0xfe;temp=64935-PPMout[7];
4851   3                    T_l=temp;T_h=temp>>8;break;       
4852   3            case 16:PPM=1;TL1=T_l;TH1=T_h;break;
4853   3            
4854   3            case 17:PPM=0;TL1=0x70,TH1=0xfe;break;        
4855   3            case 18:PPM=1;TL1=0xf0,TH1=0xd8;t_PPMout=0;break;
4856   3      /*      
4857   3            case 13:PPM=0;TL1=0xe0,TH1=0xfc;break;        
4858   3            case 14:PPM=1;TL1=0x00,TH1=0xb0;t_PPMout=0;break;*/
4859   3            
4860   3          }
4861   2        }
4862   1        TR1=1;
4863   1      }
4864          void UART_SER (void) interrupt 4 //串行中断服务程序
4865          {
4866   1          unsigned char Temp;          //定义临时变量 
4867   1         
4868   1         if(RI)                        //判断是接收中断产生
4869   1           {
4870   2            
4871   2          RI=0;                      //标志位清零
4872   2          Temp=SBUF;                 //读入缓冲区的值
4873   2            if(flydata==11)
4874   2            {
4875   3              switch(iflycount)
4876   3              {
4877   4                case 0:{adc1=(Temp-'0')*1000;iflycount++;break;}
4878   4                case 1:{adc1=adc1+(Temp-'0')*100;iflycount++;break;}
4879   4                case 2:{adc1=adc1+(Temp-'0')*10;iflycount++;break;}
4880   4                
4881   4                case 3:adc1=adc1+(Temp-'0');iflycount=0;flydata=0;adc11=adc1;break;
4882   4              }
4883   3              
4884   3              }
4885   2            if(flydata==22)
4886   2            {
4887   3              switch(iflycount)
4888   3              {
4889   4                case 0:{adc2=(Temp-'0')*1000;iflycount++;break;}
4890   4                case 1:{adc2=adc2+(Temp-'0')*100;iflycount++;break;}
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 80  

4891   4                case 2:{adc2=adc2+(Temp-'0')*10;iflycount++;break;}
4892   4                case 3: adc2=adc2+(Temp-'0');iflycount=0;flydata=0;adc22=adc2;break;
4893   4              }
4894   3              }
4895   2            if(flydata==33)
4896   2            {
4897   3              switch(iflycount)
4898   3              {
4899   4                case 0:{adc3=(Temp-'0')*1000;iflycount++;break;}
4900   4                case 1:{adc3=adc3+(Temp-'0')*100;iflycount++;break;}
4901   4                case 2:{adc3=adc3+(Temp-'0')*10;iflycount++;break;}
4902   4                case 3:{adc3=adc3+(Temp-'0');iflycount=0;flydata=0;adc33=adc3;break;}
4903   4              }
4904   3              }
4905   2      //      if(flydata==44)
4906   2      //      {
4907   2      //        switch(iflycount)
4908   2      //        {
4909   2      //          case 0:{adc4=(Temp-'0')*1000;iflycount++;break;}
4910   2      //          case 1:{adc4=adc4+(Temp-'0')*100;iflycount++;break;}
4911   2      //          case 2:{adc4=adc4+(Temp-'0')*10;iflycount++;break;}
4912   2      //          case 3:{adc4=adc4+(Temp-'0');iflycount=0;flydata=0;adc44=adc4;break;}
4913   2      //        }
4914   2      //        }
4915   2             switch(Temp)
4916   2             {
4917   3               case 'x':flydata=1;break;
4918   3               case 'y':flydata=2;break;
4919   3               case 'z':flydata=3;break;
4920   3      //         //case 'h':flydata=4;break;
4921   3              case ':':if(flydata==1)flydata=11;if(flydata==2)flydata=22;if(flydata==3)flydata=33;break;
4922   3      //         case ':':if(flydata==1)flydata=11;if(flydata==2)flydata=22;if(flydata==3)flydata=33;if(flydata==4)f
             -lydata=44;break;
4923   3             }  
4924   2            
4925   2                                 //把值输出到P1口，用于观察
4926   2          //  SBUF=Temp;                 //把接收到的值再发回电脑端
4927   2         }
4928   1         if(TI)                        //如果是发送标志位，清零
4929   1           TI=0;
4930   1      }
4931          void PCA_isr()interrupt 7 //任务定时器   中优先级
4932          {  
4933   1        if(CCF0)        //电压采集
4934   1        {
4935   2          CCF0=0;
4936   2          CCAP0L = value0;
4937   2            CCAP0H = value0>> 8;            
4938   2            value0 += 3000;    //3ms
4939   2              
4940   2      //    out=!out;
4941   2          t_adc++;
4942   2          switch(t_adc) //读取上次转换结果,开始下次转换；
4943   2          {      
4944   3            case 1:adc[0]=ADC_RES,adc[0]<<=2,adc[0]+=ADC_RESL;ADC_CONTR=0x89;break;
4945   3            case 2:adc[1]=ADC_RES,adc[1]<<=2,adc[1]+=ADC_RESL;ADC_CONTR=0x8a;break;
4946   3            case 3:adc[2]=ADC_RES,adc[2]<<=2,adc[2]+=ADC_RESL;ADC_CONTR=0x8b;break;
4947   3            case 4:adc[3]=ADC_RES,adc[3]<<=2,adc[3]+=ADC_RESL;ADC_CONTR=0x8c;break;
4948   3            case 5:adc[4]=ADC_RES,adc[4]<<=2,adc[4]+=ADC_RESL;ADC_CONTR=0x8d;break;
4949   3            case 6:adc[5]=ADC_RES,adc[5]<<=2,adc[5]+=ADC_RESL;ADC_CONTR=0x8e;break;
4950   3            case 7:adc[6]=ADC_RES,adc[6]<<=2,adc[6]+=ADC_RESL;ADC_CONTR=0x8f;break;
4951   3            case 8:adc[7]=ADC_RES,adc[7]<<=2,adc[7]+=ADC_RESL;ADC_CONTR=0x88;t_adc=0;break;
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 81  

4952   3           }
4953   2      
4954   2        }                  
4955   1        else          //实时任务  
4956   1        { CCF1=0;
4957   2            
4958   2          
4959   2          if(RC_check)    //全频扫描
4960   2          {
4961   3            CCAP1L = value1;
4962   3            CCAP1H = value1>> 8;            
4963   3            value1 += 1234;    //2ms
4964   3            
4965   3            if(RC_check_star)   
4966   3            {
4967   4              RC_check_star=0;
4968   4              RX_mode();
4969   4            }
4970   3            
4971   3            t_check++;
4972   3            if(t_check>125)t_check=0;
4973   3            
4974   3            if(REG_read(0x09))CD_data[t_check]=1;
4975   3            else CD_data[t_check]=0;
4976   3      
4977   3            
4978   3            NRF_channel(t_check);
4979   3            
4980   3          }
4981   2          else if(RC_TX)        //NRF定时发射信号
4982   2          {
4983   3            RC_TX_state++;
4984   3        
4985   3            if(RC_TX_state==1)//TX
4986   3            {
4987   4              CCAP1L = value1;
4988   4              CCAP1H = value1>> 8;            
4989   4              value1 += 2000;    //2ms
4990   4              
4991   4              t_hopping++;
4992   4              if(t_hopping>4)t_hopping=0;
4993   4              NRF_channel(hopping[t_hopping]);//顺序跳频
4994   4              
4995   4              if(NRF_change)
4996   4              {
4997   5                NRF_change=0;
4998   5                NRF_power(TX_power);
4999   5                TX_address(address);
5000   5                RX_address(address);
5001   5              }
5002   4      
5003   4              if(NRF_config_change)
5004   4              {
5005   5                NRF_config_change=0;
5006   5                tx_order[0]=0xa0;
5007   5                FIFO_write2(tx_order,11);
5008   5              }
5009   4              else
5010   4              {
5011   5      
5012   5                  FIFO_write2(tx_data,11);
5013   5      
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 82  

5014   5              }
5015   4              
5016   4              
5017   4              
5018   4            }
5019   3            else if(RC_TX_state==2)//RX
5020   3            {
5021   4              CCAP1L = value1;
5022   4              CCAP1H = value1>> 8;            
5023   4              value1 += 16500;     //17ms
5024   4              
5025   4              if(IRQ==0)
5026   4              {
5027   5                CE=0;
5028   5                REG_write(0x07,0x20); //清除TX中断信号
5029   5                CE=1; 
5030   5              }
5031   4              
5032   4              RX_mode();
5033   4            }
5034   3            else if(RC_TX_state==3)
5035   3            {
5036   4              CCAP1L = value1;
5037   4              CCAP1H = value1>> 8;            
5038   4              value1 += 1500;    //1ms
5039   4          
5040   4              RC_TX_state=0;
5041   4              if(IRQ==0)
5042   4              {
5043   5                FIFO_read2(rx,11);    //读取接收数据
5044   5                CE=0;
5045   5                REG_write(0x07,0x40); //清除RX中断信号
5046   5                CE=1; 
5047   5                receive++;
5048   5                timer3=0;
5049   5              }
5050   4              else
5051   4              {
5052   5                timer3++;
5053   5                if(timer3>49)timer3=49,receive=0;
5054   5                
5055   5              }
5056   4              
5057   4              timer2++;
5058   4              if(timer2>49)timer2=0,FUCK_sum=receive,receive=0;
5059   4              TX_mode();  
5060   4              
5061   4            }
5062   3      
5063   3          }
5064   2      
5065   2          
5066   2        } 
5067   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  32294    ----
   CONSTANT SIZE    =  11970    ----
   XDATA SIZE       =    905      90
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
C51 COMPILER V9.54   SENSOR                                                                04/29/2017 11:23:22 PAGE 83  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =     63    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
